gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;--------------------------------------------------------
               00002 ; File Created by SDCC : free open source ANSI-C Compiler
               00003 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
               00004 ; This file was generated Fri Oct 25 17:17:44 2013
               00005 ;--------------------------------------------------------
               00006 ; PIC16 port for the Microchip 16-bit core micros
               00007 ;--------------------------------------------------------
               00008         list    p=18f97j60
               00009 
               00010         radix dec
               00011 
               00012 ;--------------------------------------------------------
               00013 ; public variables in this module
               00014 ;--------------------------------------------------------
               00015         global _increment
               00016         global _checkAlarm
               00017         global _setAlarm
               00018         global _actionButton1
               00019         global _actionButton2
               00020         global _move
               00021         global _changeTime
               00022         global _info_A
               00023         global _blink
               00024         global _init_board
               00025         global _DisplayWORD
               00026         global _DisplayString
               00027         global _strlcpy
               00028         global _firstLine
               00029         global _secondLine
               00030         global _firstTab
               00031         global _secondTab
               00032         global _posC
               00033         global _posA
               00034         global _bin
               00035         global _isAlarm
               00036         global _ringtone
               00037         global _currentMode
               00038         global _count
               00039         global _temp1
               00040         global _temp2
               00041         global _tempA
               00042         global _HighISR
               00043         global _main
               00044 
               00045 ;--------------------------------------------------------
               00046 ; extern variables in this module
               00047 ;--------------------------------------------------------
               00048         extern __gptrget1
               00049         extern __gptrput1
               00050         extern _EBSTCONbits
               00051         extern _MISTATbits
               00052         extern _EFLOCONbits
               00053         extern _MACON1bits
               00054         extern _MACON2bits
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00055         extern _MACON3bits
               00056         extern _MACON4bits
               00057         extern _MACLCON1bits
               00058         extern _MACLCON2bits
               00059         extern _MICONbits
               00060         extern _MICMDbits
               00061         extern _EWOLIEbits
               00062         extern _EWOLIRbits
               00063         extern _ERXFCONbits
               00064         extern _EIEbits
               00065         extern _ESTATbits
               00066         extern _ECON2bits
               00067         extern _EIRbits
               00068         extern _EDATAbits
               00069         extern _SSP2CON2bits
               00070         extern _SSP2CON1bits
               00071         extern _SSP2STATbits
               00072         extern _ECCP2DELbits
               00073         extern _ECCP2ASbits
               00074         extern _ECCP3DELbits
               00075         extern _ECCP3ASbits
               00076         extern _RCSTA2bits
               00077         extern _TXSTA2bits
               00078         extern _CCP5CONbits
               00079         extern _CCP4CONbits
               00080         extern _T4CONbits
               00081         extern _ECCP1DELbits
               00082         extern _BAUDCON2bits
               00083         extern _BAUDCTL2bits
               00084         extern _BAUDCONbits
               00085         extern _BAUDCON1bits
               00086         extern _BAUDCTLbits
               00087         extern _BAUDCTL1bits
               00088         extern _PORTAbits
               00089         extern _PORTBbits
               00090         extern _PORTCbits
               00091         extern _PORTDbits
               00092         extern _PORTEbits
               00093         extern _PORTFbits
               00094         extern _PORTGbits
               00095         extern _PORTHbits
               00096         extern _PORTJbits
               00097         extern _LATAbits
               00098         extern _LATBbits
               00099         extern _LATCbits
               00100         extern _LATDbits
               00101         extern _LATEbits
               00102         extern _LATFbits
               00103         extern _LATGbits
               00104         extern _LATHbits
               00105         extern _LATJbits
               00106         extern _DDRAbits
               00107         extern _TRISAbits
               00108         extern _DDRBbits
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00109         extern _TRISBbits
               00110         extern _DDRCbits
               00111         extern _TRISCbits
               00112         extern _DDRDbits
               00113         extern _TRISDbits
               00114         extern _DDREbits
               00115         extern _TRISEbits
               00116         extern _DDRFbits
               00117         extern _TRISFbits
               00118         extern _DDRGbits
               00119         extern _TRISGbits
               00120         extern _DDRHbits
               00121         extern _TRISHbits
               00122         extern _DDRJbits
               00123         extern _TRISJbits
               00124         extern _OSCTUNEbits
               00125         extern _MEMCONbits
               00126         extern _PIE1bits
               00127         extern _PIR1bits
               00128         extern _IPR1bits
               00129         extern _PIE2bits
               00130         extern _PIR2bits
               00131         extern _IPR2bits
               00132         extern _PIE3bits
               00133         extern _PIR3bits
               00134         extern _IPR3bits
               00135         extern _EECON1bits
               00136         extern _RCSTAbits
               00137         extern _RCSTA1bits
               00138         extern _TXSTAbits
               00139         extern _TXSTA1bits
               00140         extern _PSPCONbits
               00141         extern _T3CONbits
               00142         extern _CMCONbits
               00143         extern _CVRCONbits
               00144         extern _ECCP1ASbits
               00145         extern _CCP3CONbits
               00146         extern _ECCP3CONbits
               00147         extern _CCP2CONbits
               00148         extern _ECCP2CONbits
               00149         extern _CCP1CONbits
               00150         extern _ECCP1CONbits
               00151         extern _ADCON2bits
               00152         extern _ADCON1bits
               00153         extern _ADCON0bits
               00154         extern _SSP1CON2bits
               00155         extern _SSPCON2bits
               00156         extern _SSP1CON1bits
               00157         extern _SSPCON1bits
               00158         extern _SSP1STATbits
               00159         extern _SSPSTATbits
               00160         extern _T2CONbits
               00161         extern _T1CONbits
               00162         extern _RCONbits
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00163         extern _WDTCONbits
               00164         extern _ECON1bits
               00165         extern _OSCCONbits
               00166         extern _T0CONbits
               00167         extern _STATUSbits
               00168         extern _INTCON3bits
               00169         extern _INTCON2bits
               00170         extern _INTCONbits
               00171         extern _STKPTRbits
               00172         extern _stdin
               00173         extern _stdout
               00174         extern _LCDText
               00175         extern _MAADR5
               00176         extern _MAADR6
               00177         extern _MAADR3
               00178         extern _MAADR4
               00179         extern _MAADR1
               00180         extern _MAADR2
               00181         extern _EBSTSD
               00182         extern _EBSTCON
               00183         extern _EBSTCS
               00184         extern _EBSTCSL
               00185         extern _EBSTCSH
               00186         extern _MISTAT
               00187         extern _EFLOCON
               00188         extern _EPAUS
               00189         extern _EPAUSL
               00190         extern _EPAUSH
               00191         extern _MACON1
               00192         extern _MACON2
               00193         extern _MACON3
               00194         extern _MACON4
               00195         extern _MABBIPG
               00196         extern _MAIPG
               00197         extern _MAIPGL
               00198         extern _MAIPGH
               00199         extern _MACLCON1
               00200         extern _MACLCON2
               00201         extern _MAMXFL
               00202         extern _MAMXFLL
               00203         extern _MAMXFLH
               00204         extern _MICON
               00205         extern _MICMD
               00206         extern _MIREGADR
               00207         extern _MIWR
               00208         extern _MIWRL
               00209         extern _MIWRH
               00210         extern _MIRD
               00211         extern _MIRDL
               00212         extern _MIRDH
               00213         extern _EHT0
               00214         extern _EHT1
               00215         extern _EHT2
               00216         extern _EHT3
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00217         extern _EHT4
               00218         extern _EHT5
               00219         extern _EHT6
               00220         extern _EHT7
               00221         extern _EPMM0
               00222         extern _EPMM1
               00223         extern _EPMM2
               00224         extern _EPMM3
               00225         extern _EPMM4
               00226         extern _EPMM5
               00227         extern _EPMM6
               00228         extern _EPMM7
               00229         extern _EPMCS
               00230         extern _EPMCSL
               00231         extern _EPMCSH
               00232         extern _EPMO
               00233         extern _EPMOL
               00234         extern _EPMOH
               00235         extern _EWOLIE
               00236         extern _EWOLIR
               00237         extern _ERXFCON
               00238         extern _EPKTCNT
               00239         extern _EWRPT
               00240         extern _EWRPTL
               00241         extern _EWRPTH
               00242         extern _ETXST
               00243         extern _ETXSTL
               00244         extern _ETXSTH
               00245         extern _ETXND
               00246         extern _ETXNDL
               00247         extern _ETXNDH
               00248         extern _ERXST
               00249         extern _ERXSTL
               00250         extern _ERXSTH
               00251         extern _ERXND
               00252         extern _ERXNDL
               00253         extern _ERXNDH
               00254         extern _ERXRDPT
               00255         extern _ERXRDPTL
               00256         extern _ERXRDPTH
               00257         extern _ERXWRPT
               00258         extern _ERXWRPTL
               00259         extern _ERXWRPTH
               00260         extern _EDMAST
               00261         extern _EDMASTL
               00262         extern _EDMASTH
               00263         extern _EDMAND
               00264         extern _EDMANDL
               00265         extern _EDMANDH
               00266         extern _EDMADST
               00267         extern _EDMADSTL
               00268         extern _EDMADSTH
               00269         extern _EDMACS
               00270         extern _EDMACSL
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00271         extern _EDMACSH
               00272         extern _EIE
               00273         extern _ESTAT
               00274         extern _ECON2
               00275         extern _EIR
               00276         extern _EDATA
               00277         extern _SSP2CON2
               00278         extern _SSP2CON1
               00279         extern _SSP2STAT
               00280         extern _SSP2ADD
               00281         extern _SSP2BUF
               00282         extern _ECCP2DEL
               00283         extern _ECCP2AS
               00284         extern _ECCP3DEL
               00285         extern _ECCP3AS
               00286         extern _RCSTA2
               00287         extern _TXSTA2
               00288         extern _TXREG2
               00289         extern _RCREG2
               00290         extern _SPBRG2
               00291         extern _CCP5CON
               00292         extern _CCPR5
               00293         extern _CCPR5L
               00294         extern _CCPR5H
               00295         extern _CCP4CON
               00296         extern _CCPR4
               00297         extern _CCPR4L
               00298         extern _CCPR4H
               00299         extern _T4CON
               00300         extern _PR4
               00301         extern _TMR4
               00302         extern _ECCP1DEL
               00303         extern _ERDPT
               00304         extern _ERDPTL
               00305         extern _ERDPTH
               00306         extern _BAUDCON2
               00307         extern _BAUDCTL2
               00308         extern _SPBRGH2
               00309         extern _BAUDCON
               00310         extern _BAUDCON1
               00311         extern _BAUDCTL
               00312         extern _BAUDCTL1
               00313         extern _SPBRGH
               00314         extern _SPBRGH1
               00315         extern _PORTA
               00316         extern _PORTB
               00317         extern _PORTC
               00318         extern _PORTD
               00319         extern _PORTE
               00320         extern _PORTF
               00321         extern _PORTG
               00322         extern _PORTH
               00323         extern _PORTJ
               00324         extern _LATA
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00325         extern _LATB
               00326         extern _LATC
               00327         extern _LATD
               00328         extern _LATE
               00329         extern _LATF
               00330         extern _LATG
               00331         extern _LATH
               00332         extern _LATJ
               00333         extern _DDRA
               00334         extern _TRISA
               00335         extern _DDRB
               00336         extern _TRISB
               00337         extern _DDRC
               00338         extern _TRISC
               00339         extern _DDRD
               00340         extern _TRISD
               00341         extern _DDRE
               00342         extern _TRISE
               00343         extern _DDRF
               00344         extern _TRISF
               00345         extern _DDRG
               00346         extern _TRISG
               00347         extern _DDRH
               00348         extern _TRISH
               00349         extern _DDRJ
               00350         extern _TRISJ
               00351         extern _OSCTUNE
               00352         extern _MEMCON
               00353         extern _PIE1
               00354         extern _PIR1
               00355         extern _IPR1
               00356         extern _PIE2
               00357         extern _PIR2
               00358         extern _IPR2
               00359         extern _PIE3
               00360         extern _PIR3
               00361         extern _IPR3
               00362         extern _EECON1
               00363         extern _EECON2
               00364         extern _RCSTA
               00365         extern _RCSTA1
               00366         extern _TXSTA
               00367         extern _TXSTA1
               00368         extern _TXREG
               00369         extern _TXREG1
               00370         extern _RCREG
               00371         extern _RCREG1
               00372         extern _SPBRG
               00373         extern _SPBRG1
               00374         extern _PSPCON
               00375         extern _T3CON
               00376         extern _TMR3L
               00377         extern _TMR3H
               00378         extern _CMCON
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00379         extern _CVRCON
               00380         extern _ECCP1AS
               00381         extern _CCP3CON
               00382         extern _ECCP3CON
               00383         extern _CCPR3
               00384         extern _CCPR3L
               00385         extern _CCPR3H
               00386         extern _CCP2CON
               00387         extern _ECCP2CON
               00388         extern _CCPR2
               00389         extern _CCPR2L
               00390         extern _CCPR2H
               00391         extern _CCP1CON
               00392         extern _ECCP1CON
               00393         extern _CCPR1
               00394         extern _CCPR1L
               00395         extern _CCPR1H
               00396         extern _ADCON2
               00397         extern _ADCON1
               00398         extern _ADCON0
               00399         extern _ADRES
               00400         extern _ADRESL
               00401         extern _ADRESH
               00402         extern _SSP1CON2
               00403         extern _SSPCON2
               00404         extern _SSP1CON1
               00405         extern _SSPCON1
               00406         extern _SSP1STAT
               00407         extern _SSPSTAT
               00408         extern _SSP1ADD
               00409         extern _SSPADD
               00410         extern _SSP1BUF
               00411         extern _SSPBUF
               00412         extern _T2CON
               00413         extern _PR2
               00414         extern _TMR2
               00415         extern _T1CON
               00416         extern _TMR1L
               00417         extern _TMR1H
               00418         extern _RCON
               00419         extern _WDTCON
               00420         extern _ECON1
               00421         extern _OSCCON
               00422         extern _T0CON
               00423         extern _TMR0L
               00424         extern _TMR0H
               00425         extern _STATUS
               00426         extern _FSR2L
               00427         extern _FSR2H
               00428         extern _PLUSW2
               00429         extern _PREINC2
               00430         extern _POSTDEC2
               00431         extern _POSTINC2
               00432         extern _INDF2
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00433         extern _BSR
               00434         extern _FSR1L
               00435         extern _FSR1H
               00436         extern _PLUSW1
               00437         extern _PREINC1
               00438         extern _POSTDEC1
               00439         extern _POSTINC1
               00440         extern _INDF1
               00441         extern _WREG
               00442         extern _FSR0L
               00443         extern _FSR0H
               00444         extern _PLUSW0
               00445         extern _PREINC0
               00446         extern _POSTDEC0
               00447         extern _POSTINC0
               00448         extern _INDF0
               00449         extern _INTCON3
               00450         extern _INTCON2
               00451         extern _INTCON
               00452         extern _PROD
               00453         extern _PRODL
               00454         extern _PRODH
               00455         extern _TABLAT
               00456         extern _TBLPTR
               00457         extern _TBLPTRL
               00458         extern _TBLPTRH
               00459         extern _TBLPTRU
               00460         extern _PC
               00461         extern _PCL
               00462         extern _PCLATH
               00463         extern _PCLATU
               00464         extern _STKPTR
               00465         extern _TOS
               00466         extern _TOSL
               00467         extern _TOSH
               00468         extern _TOSU
               00469         extern _ultoa
               00470         extern _strlen
               00471         extern _LCDInit
               00472         extern _LCDUpdate
               00473         extern __mulint
               00474 ;--------------------------------------------------------
               00475 ;       Equates to used internal registers
               00476 ;--------------------------------------------------------
  00000FD8     00477 STATUS  equ     0xfd8
  00000FF9     00478 PCL     equ     0xff9
  00000FFA     00479 PCLATH  equ     0xffa
  00000FFB     00480 PCLATU  equ     0xffb
  00000FE8     00481 WREG    equ     0xfe8
  00000FE0     00482 BSR     equ     0xfe0
  00000FE9     00483 FSR0L   equ     0xfe9
  00000FEA     00484 FSR0H   equ     0xfea
  00000FE1     00485 FSR1L   equ     0xfe1
  00000FD9     00486 FSR2L   equ     0xfd9
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
  00000FEF     00487 INDF0   equ     0xfef
  00000FEE     00488 POSTINC0        equ     0xfee
  00000FE5     00489 POSTDEC1        equ     0xfe5
  00000FE4     00490 PREINC1 equ     0xfe4
  00000FDB     00491 PLUSW2  equ     0xfdb
  00000FF3     00492 PRODL   equ     0xff3
  00000FF4     00493 PRODH   equ     0xff4
               00494 
               00495 
               00496         idata
               00497 _firstLine      db      0x54, 0x69, 0x6d, 0x65, 0x20, 0x20, 0x30, 0x30, 0x3a, 0x30, 0x30, 0x3a
               00498         db      0x30, 0x30, 0x00
               00499 _secondLine     db      0x41, 0x6c, 0x61, 0x72, 0x6d, 0x20, 0x20, 0x4e, 0x20, 0x30, 0x30, 0x3a
               00500         db      0x30, 0x30, 0x00
               00501 _firstTab       db      0x06, 0x00, 0x07, 0x00, 0x09, 0x00, 0x0a, 0x00, 0x0c, 0x00, 0x0d, 0x00
               00502 _secondTab      db      0x07, 0x00, 0x09, 0x00, 0x0a, 0x00, 0x0c, 0x00, 0x0d, 0x00
               00503 _posC   db      0x00, 0x00
               00504 _posA   db      0x00, 0x00
               00505 _bin    db      0x00, 0x00
               00506 _isAlarm        db      0x00, 0x00
               00507 _ringtone       db      0x00, 0x00
               00508 _currentMode    db      0x00
               00509 _count  db      0x00, 0x00
               00510 _temp1  db      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20
               00511         db      0x20, 0x20, 0x20, 0x00
               00512 _temp2  db      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20
               00513         db      0x20, 0x20, 0x20, 0x00
               00514 _tempA  db      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00
               00515 
               00516 
               00517 ; Internal registers
               00518 .registers      udata_ovr       0x0000
               00519 r0x00   res     1
               00520 r0x01   res     1
               00521 r0x02   res     1
               00522 r0x03   res     1
               00523 r0x04   res     1
               00524 r0x05   res     1
               00525 r0x06   res     1
               00526 r0x07   res     1
               00527 r0x08   res     1
               00528 r0x09   res     1
               00529 r0x0a   res     1
               00530 r0x0b   res     1
               00531 r0x0c   res     1
               00532 r0x0d   res     1
               00533 r0x0e   res     1
               00534 r0x0f   res     1
               00535 r0x10   res     1
               00536 r0x11   res     1
               00537 r0x12   res     1
               00538 r0x13   res     1
               00539 r0x14   res     1
               00540 r0x15   res     1
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00541 
               00542 udata_pic_0     udata
               00543 _DisplayWORD_WDigit_1_1 res     6
               00544 
               00545 ;--------------------------------------------------------
               00546 ; interrupt vector 
               00547 ;--------------------------------------------------------
               00548 
               00549 ;--------------------------------------------------------
               00550 ; global & static initialisations
               00551 ;--------------------------------------------------------
               00552 ; ; Starting pCode block for absolute section
               00553 ; ;-----------------------------------------
               00554 S_pic_ivec_0x1_HighISR  code    0X000008
0008 00555 ivec_0x1_HighISR:
0008 EF00 F000 00556         GOTO    _HighISR
               00557 
               00558 ; I code from now on!
               00559 ; ; Starting pCode block
               00560 S_pic__main     code
0000 00561 _main:
               00562 ;       .line   591; pic.c      LED0_TRIS = 0; // Configure 1st led pin as output (yellow)
0000 9000      00563         BCF     _TRISJbits, 0
               00564 ;       .line   592; pic.c      LED1_TRIS = 0; // Configure 2nd led pin as output (red)
0002 9200      00565         BCF     _TRISJbits, 1
               00566 ;       .line   593; pic.c      LED2_TRIS = 0; // Configure 3rd led pin as output (red)
0004 9400      00567         BCF     _TRISJbits, 2
               00568 ;       .line   595; pic.c      BUTTON0_TRIS = 1; // Configure button0 as input
0006 8600      00569         BSF     _TRISBbits, 3
               00570 ;       .line   596; pic.c      BUTTON1_TRIS = 1; // Configure button1 as input
0008 8200      00571         BSF     _TRISBbits, 1
               00572 ;       .line   598; pic.c      RCONbits.IPEN      = 1;   // Enable interrupts priority levels
000A 8E00      00573         BSF     _RCONbits, 7
               00574 ;       .line   599; pic.c      INTCON3bits.INT1F  = 0;   // Clear INT1 flag
000C 9000      00575         BCF     _INTCON3bits, 0
               00576 ;       .line   600; pic.c      INTCON3bits.INT3F  = 0;   // Clear INT3 flag
000E 9400      00577         BCF     _INTCON3bits, 2
               00578 ;       .line   601; pic.c      INTCON3bits.INT1P  = 1;   // Connect INT1 interrupt (button 1) to high priority
0010 8C00      00579         BSF     _INTCON3bits, 6
               00580 ;       .line   603; pic.c      INTCON2bits.INTEDG1= 0;   // INT1 interrupts on falling edge
0012 9A00      00581         BCF     _INTCON2bits, 5
               00582 ;       .line   604; pic.c      INTCON2bits.INTEDG3= 0;   // INT3 interrupts on falling edge
0014 9600      00583         BCF     _INTCON2bits, 3
               00584 ;       .line   605; pic.c      INTCONbits.GIE     = 1;   // Enable high priority interrupts
0016 8E00      00585         BSF     _INTCONbits, 7
               00586 ;       .line   606; pic.c      INTCON3bits.INT1E  = 1;   // Enable INT1 interrupt (button 1)
0018 8600      00587         BSF     _INTCON3bits, 3
               00588 ;       .line   607; pic.c      INTCON3bits.INT3E  = 1;   // Enable INT3 interupt (button 0)
001A 8A00      00589         BSF     _INTCON3bits, 5
               00590 ;       .line   609; pic.c      T0CONbits.T0CS   = 0; //use timer0 instruction cycle clock
001C 9A00      00591         BCF     _T0CONbits, 5
               00592 ;       .line   610; pic.c      LCDInit();
001E EC00 F000 00593         CALL    _LCDInit
               00594 ;       .line   611; pic.c      init_board();
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0022 EC00 F000 00595         CALL    _init_board
               00596 ;       .line   613; pic.c      DisplayString(FIRST_LINE,firstLine);
0026 0E00      00597         MOVLW   HIGH(_firstLine)
0028 6E00      00598         MOVWF   r0x01
002A 0E00      00599         MOVLW   LOW(_firstLine)
002C 6E00      00600         MOVWF   r0x00
002E 0E80      00601         MOVLW   0x80
0030 6E00      00602         MOVWF   r0x02
0032 5000      00603         MOVF    r0x02, W
0034 6EE5      00604         MOVWF   POSTDEC1
0036 5000      00605         MOVF    r0x01, W
0038 6EE5      00606         MOVWF   POSTDEC1
003A 5000      00607         MOVF    r0x00, W
003C 6EE5      00608         MOVWF   POSTDEC1
003E 0E00      00609         MOVLW   0x00
0040 6EE5      00610         MOVWF   POSTDEC1
0042 EC00 F000 00611         CALL    _DisplayString
0046 0E04      00612         MOVLW   0x04
0048 26E1      00613         ADDWF   FSR1L, F
               00614 ;       .line   614; pic.c      DisplayString(SECOND_LINE,secondLine);
004A 0E00      00615         MOVLW   HIGH(_secondLine)
004C 6E00      00616         MOVWF   r0x01
004E 0E00      00617         MOVLW   LOW(_secondLine)
0050 6E00      00618         MOVWF   r0x00
0052 0E80      00619         MOVLW   0x80
0054 6E00      00620         MOVWF   r0x02
0056 5000      00621         MOVF    r0x02, W
0058 6EE5      00622         MOVWF   POSTDEC1
005A 5000      00623         MOVF    r0x01, W
005C 6EE5      00624         MOVWF   POSTDEC1
005E 5000      00625         MOVF    r0x00, W
0060 6EE5      00626         MOVWF   POSTDEC1
0062 0E10      00627         MOVLW   0x10
0064 6EE5      00628         MOVWF   POSTDEC1
0066 EC00 F000 00629         CALL    _DisplayString
006A 0E04      00630         MOVLW   0x04
006C 26E1      00631         ADDWF   FSR1L, F
               00632 ;       .line   616; pic.c      INTCON2bits.TMR0IP       = 1; // Interruption du au timer = interruption haute
006E 8400      00633         BSF     _INTCON2bits, 2
               00634 ;       .line   617; pic.c      INTCONbits.TMR0IF = 0; // reset flag
0070 9400      00635         BCF     _INTCONbits, 2
               00636 ;       .line   618; pic.c      T0CONbits.T08BIT = 1; // use timer0 8-bit counter
0072 8C00      00637         BSF     _T0CONbits, 6
               00638 ;       .line   619; pic.c      T0CONbits.PSA = 1; // disable timer0 prescaler
0074 8600      00639         BSF     _T0CONbits, 3
               00640 ;       .line   620; pic.c      INTCONbits.TMR0IE = 1; // On active les interuptions TMR0
0076 8A00      00641         BSF     _INTCONbits, 5
               00642 ;       .line   621; pic.c      LED1_IO = 0; //turn off the led
0078 9200      00643         BCF     _LATJbits, 1
               00644 ;       .line   622; pic.c      LED2_IO = 0;
007A 9400      00645         BCF     _LATJbits, 2
               00646 ;       .line   623; pic.c      LED0_IO = 0;
007C 9000      00647         BCF     _LATJbits, 0
007E 0012      00648         RETURN  
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00649 
               00650 ; ; Starting pCode block
               00651 S_pic__strlcpy  code
0000 00652 _strlcpy:
               00653 ;       .line   559; pic.c      strlcpy(char *dst, const char *src, size_t siz)
0000 CFD9 FFE5 00654         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00655         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00656         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00657         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00658         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00659         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00660         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 00661         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 00662         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 00663         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 00664         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 00665         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 00666         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 00667         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 00668         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 00669         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 00670         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 00671         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 00672         MOVFF   r0x10, POSTDEC1
004C C000 FFE5 00673         MOVFF   r0x11, POSTDEC1
0050 C000 FFE5 00674         MOVFF   r0x12, POSTDEC1
0054 C000 FFE5 00675         MOVFF   r0x13, POSTDEC1
0058 C000 FFE5 00676         MOVFF   r0x14, POSTDEC1
005C C000 FFE5 00677         MOVFF   r0x15, POSTDEC1
0060 0E02      00678         MOVLW   0x02
0062 CFDB F000 00679         MOVFF   PLUSW2, r0x00
0066 0E03      00680         MOVLW   0x03
0068 CFDB F000 00681         MOVFF   PLUSW2, r0x01
006C 0E04      00682         MOVLW   0x04
006E CFDB F000 00683         MOVFF   PLUSW2, r0x02
0072 0E05      00684         MOVLW   0x05
0074 CFDB F000 00685         MOVFF   PLUSW2, r0x03
0078 0E06      00686         MOVLW   0x06
007A CFDB F000 00687         MOVFF   PLUSW2, r0x04
007E 0E07      00688         MOVLW   0x07
0080 CFDB F000 00689         MOVFF   PLUSW2, r0x05
0084 0E08      00690         MOVLW   0x08
0086 CFDB F000 00691         MOVFF   PLUSW2, r0x06
008A 0E09      00692         MOVLW   0x09
008C CFDB F000 00693         MOVFF   PLUSW2, r0x07
               00694 ;       .line   561; pic.c      char       *d = dst;
0090 C000 F000 00695         MOVFF   r0x00, r0x08
0094 C000 F000 00696         MOVFF   r0x01, r0x09
0098 C000 F000 00697         MOVFF   r0x02, r0x0a
               00698 ;       .line   562; pic.c      const char *s = src;
009C C000 F000 00699         MOVFF   r0x03, r0x0b
00A0 C000 F000 00700         MOVFF   r0x04, r0x0c
00A4 C000 F000 00701         MOVFF   r0x05, r0x0d
               00702 ;       .line   563; pic.c      size_t      n = siz;
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00A8 C000 F000 00703         MOVFF   r0x06, r0x0e
00AC C000 F000 00704         MOVFF   r0x07, r0x0f
               00705 ;       .line   566; pic.c      if (n != 0)
00B0 5000      00706         MOVF    r0x06, W
00B2 1000      00707         IORWF   r0x07, W
00B4 B4D8      00708         BTFSC   STATUS, 2
00B6 D000      00709         BRA     _00426_DS_
               00710 ;       .line   568; pic.c      while (--n != 0)
00B8 C000 F000 00711         MOVFF   r0x03, r0x10
00BC C000 F000 00712         MOVFF   r0x04, r0x11
00C0 C000 F000 00713         MOVFF   r0x05, r0x12
00C4 C000 F000 00714         MOVFF   r0x06, r0x13
00C8 C000 F000 00715         MOVFF   r0x07, r0x14
00CC 00716 _00422_DS_:
00CC 0EFF      00717         MOVLW   0xff
00CE 2600      00718         ADDWF   r0x13, F
00D0 A0D8      00719         BTFSS   STATUS, 0
00D2 0600      00720         DECF    r0x14, F
00D4 5000      00721         MOVF    r0x13, W
00D6 1000      00722         IORWF   r0x14, W
00D8 E000      00723         BZ      _00441_DS_
               00724 ;       .line   570; pic.c      if ((*d++ = *s++) == '\0')
00DA C000 FFE9 00725         MOVFF   r0x10, FSR0L
00DE C000 FFF3 00726         MOVFF   r0x11, PRODL
00E2 5000      00727         MOVF    r0x12, W
00E4 EC00 F000 00728         CALL    __gptrget1
00E8 6E00      00729         MOVWF   r0x15
00EA 2A00      00730         INCF    r0x10, F
00EC B0D8      00731         BTFSC   STATUS, 0
00EE 2A00      00732         INCF    r0x11, F
00F0 B0D8      00733         BTFSC   STATUS, 0
00F2 2A00      00734         INCF    r0x12, F
00F4 C000 FFE5 00735         MOVFF   r0x15, POSTDEC1
00F8 C000 FFE9 00736         MOVFF   r0x00, FSR0L
00FC C000 FFF3 00737         MOVFF   r0x01, PRODL
0100 5000      00738         MOVF    r0x02, W
0102 EC00 F000 00739         CALL    __gptrput1
0106 2A00      00740         INCF    r0x00, F
0108 B0D8      00741         BTFSC   STATUS, 0
010A 2A00      00742         INCF    r0x01, F
010C B0D8      00743         BTFSC   STATUS, 0
010E 2A00      00744         INCF    r0x02, F
0110 5000      00745         MOVF    r0x15, W
0112 E100      00746         BNZ     _00422_DS_
0114 00747 _00441_DS_:
               00748 ;       .line   571; pic.c      break;
0114 C000 F000 00749         MOVFF   r0x10, r0x0b
0118 C000 F000 00750         MOVFF   r0x11, r0x0c
011C C000 F000 00751         MOVFF   r0x12, r0x0d
0120 C000 F000 00752         MOVFF   r0x00, r0x08
0124 C000 F000 00753         MOVFF   r0x01, r0x09
0128 C000 F000 00754         MOVFF   r0x02, r0x0a
012C C000 F000 00755         MOVFF   r0x13, r0x0e
0130 C000 F000 00756         MOVFF   r0x14, r0x0f
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0134 00757 _00426_DS_:
               00758 ;       .line   576; pic.c      if (n == 0)
0134 5000      00759         MOVF    r0x0e, W
0136 1000      00760         IORWF   r0x0f, W
0138 E100      00761         BNZ     _00433_DS_
               00762 ;       .line   578; pic.c      if (siz != 0)
013A 5000      00763         MOVF    r0x06, W
013C 1000      00764         IORWF   r0x07, W
013E E000      00765         BZ      _00440_DS_
               00766 ;       .line   579; pic.c      *d = '\0';          /* NUL-terminate dst */
0140 0E00      00767         MOVLW   0x00
0142 6EE5      00768         MOVWF   POSTDEC1
0144 C000 FFE9 00769         MOVFF   r0x08, FSR0L
0148 C000 FFF3 00770         MOVFF   r0x09, PRODL
014C 5000      00771         MOVF    r0x0a, W
014E EC00 F000 00772         CALL    __gptrput1
0152 00773 _00440_DS_:
               00774 ;       .line   580; pic.c      while (*s++)
0152 C000 F000 00775         MOVFF   r0x0b, r0x00
0156 C000 F000 00776         MOVFF   r0x0c, r0x01
015A C000 F000 00777         MOVFF   r0x0d, r0x02
015E 00778 _00429_DS_:
015E C000 FFE9 00779         MOVFF   r0x00, FSR0L
0162 C000 FFF3 00780         MOVFF   r0x01, PRODL
0166 5000      00781         MOVF    r0x02, W
0168 EC00 F000 00782         CALL    __gptrget1
016C 6E00      00783         MOVWF   r0x06
016E 2A00      00784         INCF    r0x00, F
0170 B0D8      00785         BTFSC   STATUS, 0
0172 2A00      00786         INCF    r0x01, F
0174 B0D8      00787         BTFSC   STATUS, 0
0176 2A00      00788         INCF    r0x02, F
0178 5000      00789         MOVF    r0x06, W
017A E100      00790         BNZ     _00429_DS_
017C C000 F000 00791         MOVFF   r0x00, r0x0b
0180 C000 F000 00792         MOVFF   r0x01, r0x0c
0184 C000 F000 00793         MOVFF   r0x02, r0x0d
0188 00794 _00433_DS_:
               00795 ;       .line   586; pic.c      return (s - src - 1);       /* count does not include NUL */
0188 5000      00796         MOVF    r0x03, W
018A 5C00      00797         SUBWF   r0x0b, W
018C 6E00      00798         MOVWF   r0x03
018E 5000      00799         MOVF    r0x04, W
0190 5800      00800         SUBWFB  r0x0c, W
0192 6E00      00801         MOVWF   r0x04
0194 0EFF      00802         MOVLW   0xff
0196 2600      00803         ADDWF   r0x03, F
0198 A0D8      00804         BTFSS   STATUS, 0
019A 0600      00805         DECF    r0x04, F
019C C000 FFF3 00806         MOVFF   r0x04, PRODL
01A0 5000      00807         MOVF    r0x03, W
01A2 CFE4 F000 00808         MOVFF   PREINC1, r0x15
01A6 CFE4 F000 00809         MOVFF   PREINC1, r0x14
01AA CFE4 F000 00810         MOVFF   PREINC1, r0x13
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01AE CFE4 F000 00811         MOVFF   PREINC1, r0x12
01B2 CFE4 F000 00812         MOVFF   PREINC1, r0x11
01B6 CFE4 F000 00813         MOVFF   PREINC1, r0x10
01BA CFE4 F000 00814         MOVFF   PREINC1, r0x0f
01BE CFE4 F000 00815         MOVFF   PREINC1, r0x0e
01C2 CFE4 F000 00816         MOVFF   PREINC1, r0x0d
01C6 CFE4 F000 00817         MOVFF   PREINC1, r0x0c
01CA CFE4 F000 00818         MOVFF   PREINC1, r0x0b
01CE CFE4 F000 00819         MOVFF   PREINC1, r0x0a
01D2 CFE4 F000 00820         MOVFF   PREINC1, r0x09
01D6 CFE4 F000 00821         MOVFF   PREINC1, r0x08
01DA CFE4 F000 00822         MOVFF   PREINC1, r0x07
01DE CFE4 F000 00823         MOVFF   PREINC1, r0x06
01E2 CFE4 F000 00824         MOVFF   PREINC1, r0x05
01E6 CFE4 F000 00825         MOVFF   PREINC1, r0x04
01EA CFE4 F000 00826         MOVFF   PREINC1, r0x03
01EE CFE4 F000 00827         MOVFF   PREINC1, r0x02
01F2 CFE4 F000 00828         MOVFF   PREINC1, r0x01
01F6 CFE4 F000 00829         MOVFF   PREINC1, r0x00
01FA CFE4 FFD9 00830         MOVFF   PREINC1, FSR2L
01FE 0012      00831         RETURN  
               00832 
               00833 ; ; Starting pCode block
               00834 S_pic__DisplayString    code
0000 00835 _DisplayString:
               00836 ;       .line   550; pic.c      DisplayString(BYTE pos, char* text)
0000 CFD9 FFE5 00837         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00838         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00839         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00840         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00841         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00842         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00843         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 00844         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 00845         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 00846         MOVFF   r0x07, POSTDEC1
0028 0E02      00847         MOVLW   0x02
002A CFDB F000 00848         MOVFF   PLUSW2, r0x00
002E 0E03      00849         MOVLW   0x03
0030 CFDB F000 00850         MOVFF   PLUSW2, r0x01
0034 0E04      00851         MOVLW   0x04
0036 CFDB F000 00852         MOVFF   PLUSW2, r0x02
003A 0E05      00853         MOVLW   0x05
003C CFDB F000 00854         MOVFF   PLUSW2, r0x03
               00855 ;       .line   552; pic.c      BYTE l= strlen(text)+1;
0040 5000      00856         MOVF    r0x03, W
0042 6EE5      00857         MOVWF   POSTDEC1
0044 5000      00858         MOVF    r0x02, W
0046 6EE5      00859         MOVWF   POSTDEC1
0048 5000      00860         MOVF    r0x01, W
004A 6EE5      00861         MOVWF   POSTDEC1
004C EC00 F000 00862         CALL    _strlen
0050 6E00      00863         MOVWF   r0x04
0052 CFF3 F000 00864         MOVFF   PRODL, r0x05
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0056 0E03      00865         MOVLW   0x03
0058 26E1      00866         ADDWF   FSR1L, F
005A 2A00      00867         INCF    r0x04, F
               00868 ;       .line   553; pic.c      BYTE max= 32-pos;
005C 5000      00869         MOVF    r0x00, W
005E 0820      00870         SUBLW   0x20
0060 6E00      00871         MOVWF   r0x05
               00872 ;       .line   554; pic.c      strlcpy((char*)&LCDText[pos], text,(l<max)?l:max );
0062 6A00      00873         CLRF    r0x06
0064 0E00      00874         MOVLW   LOW(_LCDText)
0066 2600      00875         ADDWF   r0x00, F
0068 0E00      00876         MOVLW   HIGH(_LCDText)
006A 2200      00877         ADDWFC  r0x06, F
006C 5000      00878         MOVF    r0x06, W
006E 6E00      00879         MOVWF   r0x06
0070 5000      00880         MOVF    r0x00, W
0072 6E00      00881         MOVWF   r0x00
0074 0E80      00882         MOVLW   0x80
0076 6E00      00883         MOVWF   r0x07
0078 5000      00884         MOVF    r0x05, W
007A 5C00      00885         SUBWF   r0x04, W
007C E300      00886         BNC     _00413_DS_
007E C000 F000 00887         MOVFF   r0x05, r0x04
0082 00888 _00413_DS_:
0082 6A00      00889         CLRF    r0x05
0084 5000      00890         MOVF    r0x05, W
0086 6EE5      00891         MOVWF   POSTDEC1
0088 5000      00892         MOVF    r0x04, W
008A 6EE5      00893         MOVWF   POSTDEC1
008C 5000      00894         MOVF    r0x03, W
008E 6EE5      00895         MOVWF   POSTDEC1
0090 5000      00896         MOVF    r0x02, W
0092 6EE5      00897         MOVWF   POSTDEC1
0094 5000      00898         MOVF    r0x01, W
0096 6EE5      00899         MOVWF   POSTDEC1
0098 5000      00900         MOVF    r0x07, W
009A 6EE5      00901         MOVWF   POSTDEC1
009C 5000      00902         MOVF    r0x06, W
009E 6EE5      00903         MOVWF   POSTDEC1
00A0 5000      00904         MOVF    r0x00, W
00A2 6EE5      00905         MOVWF   POSTDEC1
00A4 EC00 F000 00906         CALL    _strlcpy
00A8 0E08      00907         MOVLW   0x08
00AA 26E1      00908         ADDWF   FSR1L, F
               00909 ;       .line   555; pic.c      LCDUpdate();
00AC EC00 F000 00910         CALL    _LCDUpdate
00B0 CFE4 F000 00911         MOVFF   PREINC1, r0x07
00B4 CFE4 F000 00912         MOVFF   PREINC1, r0x06
00B8 CFE4 F000 00913         MOVFF   PREINC1, r0x05
00BC CFE4 F000 00914         MOVFF   PREINC1, r0x04
00C0 CFE4 F000 00915         MOVFF   PREINC1, r0x03
00C4 CFE4 F000 00916         MOVFF   PREINC1, r0x02
00C8 CFE4 F000 00917         MOVFF   PREINC1, r0x01
00CC CFE4 F000 00918         MOVFF   PREINC1, r0x00
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00D0 CFE4 FFD9 00919         MOVFF   PREINC1, FSR2L
00D4 0012      00920         RETURN  
               00921 
               00922 ; ; Starting pCode block
               00923 S_pic__DisplayWORD      code
0000 00924 _DisplayWORD:
               00925 ;       .line   531; pic.c      DisplayWORD(BYTE pos, WORD w) //WORD is a 16 bits unsigned
0000 CFD9 FFE5 00926         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00927         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00928         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00929         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00930         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00931         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00932         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 00933         MOVFF   r0x05, POSTDEC1
0020 0E02      00934         MOVLW   0x02
0022 CFDB F000 00935         MOVFF   PLUSW2, r0x00
0026 0E03      00936         MOVLW   0x03
0028 CFDB F000 00937         MOVFF   PLUSW2, r0x01
002C 0E04      00938         MOVLW   0x04
002E CFDB F000 00939         MOVFF   PLUSW2, r0x02
               00940 ;       .line   539; pic.c      ultoa(w, WDigit, radix);
0032 6A00      00941         CLRF    r0x03
0034 6A00      00942         CLRF    r0x04
0036 0E0A      00943         MOVLW   0x0a
0038 6EE5      00944         MOVWF   POSTDEC1
003A 0E00      00945         MOVLW   HIGH(_DisplayWORD_WDigit_1_1)
003C 6EE5      00946         MOVWF   POSTDEC1
003E 0E00      00947         MOVLW   LOW(_DisplayWORD_WDigit_1_1)
0040 6EE5      00948         MOVWF   POSTDEC1
0042 5000      00949         MOVF    r0x04, W
0044 6EE5      00950         MOVWF   POSTDEC1
0046 5000      00951         MOVF    r0x03, W
0048 6EE5      00952         MOVWF   POSTDEC1
004A 5000      00953         MOVF    r0x02, W
004C 6EE5      00954         MOVWF   POSTDEC1
004E 5000      00955         MOVF    r0x01, W
0050 6EE5      00956         MOVWF   POSTDEC1
0052 EC00 F000 00957         CALL    _ultoa
0056 0E07      00958         MOVLW   0x07
0058 26E1      00959         ADDWF   FSR1L, F
               00960 ;       .line   540; pic.c      for(j = 0; j < strlen((char*)WDigit); j++)
005A 6A00      00961         CLRF    r0x01
005C 00962 _00394_DS_:
005C 0E00      00963         MOVLW   HIGH(_DisplayWORD_WDigit_1_1)
005E 6E00      00964         MOVWF   r0x03
0060 0E00      00965         MOVLW   LOW(_DisplayWORD_WDigit_1_1)
0062 6E00      00966         MOVWF   r0x02
0064 0E80      00967         MOVLW   0x80
0066 6E00      00968         MOVWF   r0x04
0068 5000      00969         MOVF    r0x04, W
006A 6EE5      00970         MOVWF   POSTDEC1
006C 5000      00971         MOVF    r0x03, W
006E 6EE5      00972         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0070 5000      00973         MOVF    r0x02, W
0072 6EE5      00974         MOVWF   POSTDEC1
0074 EC00 F000 00975         CALL    _strlen
0078 6E00      00976         MOVWF   r0x02
007A CFF3 F000 00977         MOVFF   PRODL, r0x03
007E 0E03      00978         MOVLW   0x03
0080 26E1      00979         ADDWF   FSR1L, F
0082 C000 F000 00980         MOVFF   r0x01, r0x04
0086 6A00      00981         CLRF    r0x05
0088 5000      00982         MOVF    r0x05, W
008A 0F80      00983         ADDLW   0x80
008C 6EF3      00984         MOVWF   PRODL
008E 5000      00985         MOVF    r0x03, W
0090 0F80      00986         ADDLW   0x80
0092 5CF3      00987         SUBWF   PRODL, W
0094 E100      00988         BNZ     _00404_DS_
0096 5000      00989         MOVF    r0x02, W
0098 5C00      00990         SUBWF   r0x04, W
009A 00991 _00404_DS_:
009A E200      00992         BC      _00397_DS_
               00993 ;       .line   542; pic.c      LCDText[LCDPos++] = WDigit[j];
009C C000 F000 00994         MOVFF   r0x00, r0x02
00A0 2A00      00995         INCF    r0x00, F
00A2 6A00      00996         CLRF    r0x03
00A4 0E00      00997         MOVLW   LOW(_LCDText)
00A6 2600      00998         ADDWF   r0x02, F
00A8 0E00      00999         MOVLW   HIGH(_LCDText)
00AA 2200      01000         ADDWFC  r0x03, F
00AC 0E00      01001         MOVLW   LOW(_DisplayWORD_WDigit_1_1)
00AE 2400      01002         ADDWF   r0x01, W
00B0 6E00      01003         MOVWF   r0x04
00B2 6A00      01004         CLRF    r0x05
00B4 0E00      01005         MOVLW   HIGH(_DisplayWORD_WDigit_1_1)
00B6 2200      01006         ADDWFC  r0x05, F
00B8 C000 FFE9 01007         MOVFF   r0x04, FSR0L
00BC C000 FFEA 01008         MOVFF   r0x05, FSR0H
00C0 CFEF F000 01009         MOVFF   INDF0, r0x04
00C4 C000 FFE9 01010         MOVFF   r0x02, FSR0L
00C8 C000 FFEA 01011         MOVFF   r0x03, FSR0H
00CC C000 FFEF 01012         MOVFF   r0x04, INDF0
               01013 ;       .line   540; pic.c      for(j = 0; j < strlen((char*)WDigit); j++)
00D0 2A00      01014         INCF    r0x01, F
00D2 D000      01015         BRA     _00394_DS_
00D4 01016 _00397_DS_:
               01017 ;       .line   544; pic.c      if(LCDPos < 32u)
00D4 C000 F000 01018         MOVFF   r0x00, r0x01
00D8 6A00      01019         CLRF    r0x02
00DA 0E00      01020         MOVLW   0x00
00DC 5C00      01021         SUBWF   r0x02, W
00DE E100      01022         BNZ     _00405_DS_
00E0 0E20      01023         MOVLW   0x20
00E2 5C00      01024         SUBWF   r0x01, W
00E4 01025 _00405_DS_:
00E4 E200      01026         BC      _00393_DS_
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01027 ;       .line   545; pic.c      LCDText[LCDPos] = 0;
00E6 6A00      01028         CLRF    r0x01
00E8 0E00      01029         MOVLW   LOW(_LCDText)
00EA 2600      01030         ADDWF   r0x00, F
00EC 0E00      01031         MOVLW   HIGH(_LCDText)
00EE 2200      01032         ADDWFC  r0x01, F
00F0 C000 FFE9 01033         MOVFF   r0x00, FSR0L
00F4 C000 FFEA 01034         MOVFF   r0x01, FSR0H
00F8 0E00      01035         MOVLW   0x00
00FA 6EEF      01036         MOVWF   INDF0
00FC 01037 _00393_DS_:
               01038 ;       .line   546; pic.c      LCDUpdate();
00FC EC00 F000 01039         CALL    _LCDUpdate
0100 CFE4 F000 01040         MOVFF   PREINC1, r0x05
0104 CFE4 F000 01041         MOVFF   PREINC1, r0x04
0108 CFE4 F000 01042         MOVFF   PREINC1, r0x03
010C CFE4 F000 01043         MOVFF   PREINC1, r0x02
0110 CFE4 F000 01044         MOVFF   PREINC1, r0x01
0114 CFE4 F000 01045         MOVFF   PREINC1, r0x00
0118 CFE4 FFD9 01046         MOVFF   PREINC1, FSR2L
011C 0012      01047         RETURN  
               01048 
               01049 ; ; Starting pCode block
               01050 S_pic__init_board       code
0000 01051 _init_board:
               01052 ;       .line   525; pic.c      init_board(void) {
0000 CFD9 FFE5 01053         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01054         MOVFF   FSR1L, FSR2L
               01055 ;       .line   526; pic.c      TRISJbits.TRISJ0=0; // configure PORTJ0 for output (LED)
0008 9000      01056         BCF     _TRISJbits, 0
               01057 ;       .line   527; pic.c      TRISJbits.TRISJ1=0; // configure PORTJ1 for output (LED)
000A 9200      01058         BCF     _TRISJbits, 1
000C CFE4 FFD9 01059         MOVFF   PREINC1, FSR2L
0010 0012      01060         RETURN  
               01061 
               01062 ; ; Starting pCode block
               01063 S_pic__blink    code
0000 01064 _blink:
               01065 ;       .line   466; pic.c      blink()
0000 CFD9 FFE5 01066         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01067         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01068         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01069         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01070         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01071         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01072         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01073         MOVFF   r0x05, POSTDEC1
               01074 ;       .line   468; pic.c      strlcpy(temp1,firstLine,16);
0020 0E00      01075         MOVLW   HIGH(_temp1)
0022 6E00      01076         MOVWF   r0x01
0024 0E00      01077         MOVLW   LOW(_temp1)
0026 6E00      01078         MOVWF   r0x00
0028 0E80      01079         MOVLW   0x80
002A 6E00      01080         MOVWF   r0x02
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
002C 0E00      01081         MOVLW   HIGH(_firstLine)
002E 6E00      01082         MOVWF   r0x04
0030 0E00      01083         MOVLW   LOW(_firstLine)
0032 6E00      01084         MOVWF   r0x03
0034 0E80      01085         MOVLW   0x80
0036 6E00      01086         MOVWF   r0x05
0038 0E00      01087         MOVLW   0x00
003A 6EE5      01088         MOVWF   POSTDEC1
003C 0E10      01089         MOVLW   0x10
003E 6EE5      01090         MOVWF   POSTDEC1
0040 5000      01091         MOVF    r0x05, W
0042 6EE5      01092         MOVWF   POSTDEC1
0044 5000      01093         MOVF    r0x04, W
0046 6EE5      01094         MOVWF   POSTDEC1
0048 5000      01095         MOVF    r0x03, W
004A 6EE5      01096         MOVWF   POSTDEC1
004C 5000      01097         MOVF    r0x02, W
004E 6EE5      01098         MOVWF   POSTDEC1
0050 5000      01099         MOVF    r0x01, W
0052 6EE5      01100         MOVWF   POSTDEC1
0054 5000      01101         MOVF    r0x00, W
0056 6EE5      01102         MOVWF   POSTDEC1
0058 EC00 F000 01103         CALL    _strlcpy
005C 0E08      01104         MOVLW   0x08
005E 26E1      01105         ADDWF   FSR1L, F
               01106 ;       .line   469; pic.c      strlcpy(temp2,secondLine,16);
0060 0E00      01107         MOVLW   HIGH(_temp2)
0062 6E00      01108         MOVWF   r0x01
0064 0E00      01109         MOVLW   LOW(_temp2)
0066 6E00      01110         MOVWF   r0x00
0068 0E80      01111         MOVLW   0x80
006A 6E00      01112         MOVWF   r0x02
006C 0E00      01113         MOVLW   HIGH(_secondLine)
006E 6E00      01114         MOVWF   r0x04
0070 0E00      01115         MOVLW   LOW(_secondLine)
0072 6E00      01116         MOVWF   r0x03
0074 0E80      01117         MOVLW   0x80
0076 6E00      01118         MOVWF   r0x05
0078 0E00      01119         MOVLW   0x00
007A 6EE5      01120         MOVWF   POSTDEC1
007C 0E10      01121         MOVLW   0x10
007E 6EE5      01122         MOVWF   POSTDEC1
0080 5000      01123         MOVF    r0x05, W
0082 6EE5      01124         MOVWF   POSTDEC1
0084 5000      01125         MOVF    r0x04, W
0086 6EE5      01126         MOVWF   POSTDEC1
0088 5000      01127         MOVF    r0x03, W
008A 6EE5      01128         MOVWF   POSTDEC1
008C 5000      01129         MOVF    r0x02, W
008E 6EE5      01130         MOVWF   POSTDEC1
0090 5000      01131         MOVF    r0x01, W
0092 6EE5      01132         MOVWF   POSTDEC1
0094 5000      01133         MOVF    r0x00, W
0096 6EE5      01134         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0098 EC00 F000 01135         CALL    _strlcpy
009C 0E08      01136         MOVLW   0x08
009E 26E1      01137         ADDWF   FSR1L, F
00A0 0000      01138         BANKSEL _bin
               01139 ;       .line   471; pic.c      if(bin)//Rentre si bin = 1 => Déjà afficher quelque chose sur écran sans "trou"/curseur
00A2 5100      01140         MOVF    _bin, W, B
00A4 0000      01141         BANKSEL (_bin + 1)
00A6 1100      01142         IORWF   (_bin + 1), W, B
00A8 B4D8      01143         BTFSC   STATUS, 2
00AA D000      01144         BRA     _00360_DS_
00AC 0000      01145         BANKSEL _currentMode
               01146 ;       .line   473; pic.c      if(currentMode==TIME)
00AE 5100      01147         MOVF    _currentMode, W, B
00B0 0A01      01148         XORLW   0x01
00B2 E100      01149         BNZ     _00357_DS_
               01150 ;       .line   475; pic.c      temp1[0]=' ';
00B4 0E20      01151         MOVLW   0x20
00B6 0000      01152         BANKSEL _temp1
00B8 6F00      01153         MOVWF   _temp1, B
               01154 ;       .line   476; pic.c      temp1[1]=' ';
00BA 0E20      01155         MOVLW   0x20
00BC 0000      01156         BANKSEL (_temp1 + 1)
00BE 6F00      01157         MOVWF   (_temp1 + 1), B
               01158 ;       .line   477; pic.c      temp1[2]=' ';
00C0 0E20      01159         MOVLW   0x20
00C2 0000      01160         BANKSEL (_temp1 + 2)
00C4 6F00      01161         MOVWF   (_temp1 + 2), B
               01162 ;       .line   478; pic.c      temp1[3]=' ';
00C6 0E20      01163         MOVLW   0x20
00C8 0000      01164         BANKSEL (_temp1 + 3)
00CA 6F00      01165         MOVWF   (_temp1 + 3), B
               01166 ;       .line   479; pic.c      temp1[4]=' ';
00CC 0E20      01167         MOVLW   0x20
00CE 0000      01168         BANKSEL (_temp1 + 4)
00D0 6F00      01169         MOVWF   (_temp1 + 4), B
               01170 ;       .line   480; pic.c      DisplayString(FIRST_LINE,temp1);
00D2 0E00      01171         MOVLW   HIGH(_temp1)
00D4 6E00      01172         MOVWF   r0x01
00D6 0E00      01173         MOVLW   LOW(_temp1)
00D8 6E00      01174         MOVWF   r0x00
00DA 0E80      01175         MOVLW   0x80
00DC 6E00      01176         MOVWF   r0x02
00DE 5000      01177         MOVF    r0x02, W
00E0 6EE5      01178         MOVWF   POSTDEC1
00E2 5000      01179         MOVF    r0x01, W
00E4 6EE5      01180         MOVWF   POSTDEC1
00E6 5000      01181         MOVF    r0x00, W
00E8 6EE5      01182         MOVWF   POSTDEC1
00EA 0E00      01183         MOVLW   0x00
00EC 6EE5      01184         MOVWF   POSTDEC1
00EE EC00 F000 01185         CALL    _DisplayString
00F2 0E04      01186         MOVLW   0x04
00F4 26E1      01187         ADDWF   FSR1L, F
               01188 ;       .line   481; pic.c      DisplayString(SECOND_LINE,temp2);
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00F6 0E00      01189         MOVLW   HIGH(_temp2)
00F8 6E00      01190         MOVWF   r0x01
00FA 0E00      01191         MOVLW   LOW(_temp2)
00FC 6E00      01192         MOVWF   r0x00
00FE 0E80      01193         MOVLW   0x80
0100 6E00      01194         MOVWF   r0x02
0102 5000      01195         MOVF    r0x02, W
0104 6EE5      01196         MOVWF   POSTDEC1
0106 5000      01197         MOVF    r0x01, W
0108 6EE5      01198         MOVWF   POSTDEC1
010A 5000      01199         MOVF    r0x00, W
010C 6EE5      01200         MOVWF   POSTDEC1
010E 0E10      01201         MOVLW   0x10
0110 6EE5      01202         MOVWF   POSTDEC1
0112 EC00 F000 01203         CALL    _DisplayString
0116 0E04      01204         MOVLW   0x04
0118 26E1      01205         ADDWF   FSR1L, F
011A D000      01206         BRA     _00358_DS_
011C 01207 _00357_DS_:
011C 0000      01208         BANKSEL _currentMode
               01209 ;       .line   483; pic.c      else if(currentMode==ALARM)
011E 5100      01210         MOVF    _currentMode, W, B
0120 0A02      01211         XORLW   0x02
0122 E100      01212         BNZ     _00354_DS_
               01213 ;       .line   485; pic.c      temp2[0]=' ';
0124 0E20      01214         MOVLW   0x20
0126 0000      01215         BANKSEL _temp2
0128 6F00      01216         MOVWF   _temp2, B
               01217 ;       .line   486; pic.c      temp2[1]=' ';
012A 0E20      01218         MOVLW   0x20
012C 0000      01219         BANKSEL (_temp2 + 1)
012E 6F00      01220         MOVWF   (_temp2 + 1), B
               01221 ;       .line   487; pic.c      temp2[2]=' ';
0130 0E20      01222         MOVLW   0x20
0132 0000      01223         BANKSEL (_temp2 + 2)
0134 6F00      01224         MOVWF   (_temp2 + 2), B
               01225 ;       .line   488; pic.c      temp2[3]=' ';
0136 0E20      01226         MOVLW   0x20
0138 0000      01227         BANKSEL (_temp2 + 3)
013A 6F00      01228         MOVWF   (_temp2 + 3), B
               01229 ;       .line   489; pic.c      temp2[4]=' ';
013C 0E20      01230         MOVLW   0x20
013E 0000      01231         BANKSEL (_temp2 + 4)
0140 6F00      01232         MOVWF   (_temp2 + 4), B
               01233 ;       .line   490; pic.c      DisplayString(FIRST_LINE,temp1);
0142 0E00      01234         MOVLW   HIGH(_temp1)
0144 6E00      01235         MOVWF   r0x01
0146 0E00      01236         MOVLW   LOW(_temp1)
0148 6E00      01237         MOVWF   r0x00
014A 0E80      01238         MOVLW   0x80
014C 6E00      01239         MOVWF   r0x02
014E 5000      01240         MOVF    r0x02, W
0150 6EE5      01241         MOVWF   POSTDEC1
0152 5000      01242         MOVF    r0x01, W
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0154 6EE5      01243         MOVWF   POSTDEC1
0156 5000      01244         MOVF    r0x00, W
0158 6EE5      01245         MOVWF   POSTDEC1
015A 0E00      01246         MOVLW   0x00
015C 6EE5      01247         MOVWF   POSTDEC1
015E EC00 F000 01248         CALL    _DisplayString
0162 0E04      01249         MOVLW   0x04
0164 26E1      01250         ADDWF   FSR1L, F
               01251 ;       .line   491; pic.c      DisplayString(SECOND_LINE,temp2);
0166 0E00      01252         MOVLW   HIGH(_temp2)
0168 6E00      01253         MOVWF   r0x01
016A 0E00      01254         MOVLW   LOW(_temp2)
016C 6E00      01255         MOVWF   r0x00
016E 0E80      01256         MOVLW   0x80
0170 6E00      01257         MOVWF   r0x02
0172 5000      01258         MOVF    r0x02, W
0174 6EE5      01259         MOVWF   POSTDEC1
0176 5000      01260         MOVF    r0x01, W
0178 6EE5      01261         MOVWF   POSTDEC1
017A 5000      01262         MOVF    r0x00, W
017C 6EE5      01263         MOVWF   POSTDEC1
017E 0E10      01264         MOVLW   0x10
0180 6EE5      01265         MOVWF   POSTDEC1
0182 EC00 F000 01266         CALL    _DisplayString
0186 0E04      01267         MOVLW   0x04
0188 26E1      01268         ADDWF   FSR1L, F
018A D000      01269         BRA     _00358_DS_
018C 01270 _00354_DS_:
018C 0000      01271         BANKSEL _currentMode
               01272 ;       .line   493; pic.c      else if(currentMode==EDIT_T)
018E 5100      01273         MOVF    _currentMode, W, B
0190 0A03      01274         XORLW   0x03
0192 E000      01275         BZ      _00376_DS_
0194 D000      01276         BRA     _00351_DS_
0196 01277 _00376_DS_:
0196 0000      01278         BANKSEL (_posC + 1)
               01279 ;       .line   495; pic.c      temp1[firstTab[posC]]=' ';
0198 5100      01280         MOVF    (_posC + 1), W, B
019A 6EE5      01281         MOVWF   POSTDEC1
019C 0000      01282         BANKSEL _posC
019E 5100      01283         MOVF    _posC, W, B
01A0 6EE5      01284         MOVWF   POSTDEC1
01A2 0E00      01285         MOVLW   0x00
01A4 6EE5      01286         MOVWF   POSTDEC1
01A6 0E02      01287         MOVLW   0x02
01A8 6EE5      01288         MOVWF   POSTDEC1
01AA EC00 F000 01289         CALL    __mulint
01AE 6E00      01290         MOVWF   r0x00
01B0 CFF3 F000 01291         MOVFF   PRODL, r0x01
01B4 0E04      01292         MOVLW   0x04
01B6 26E1      01293         ADDWF   FSR1L, F
01B8 0E00      01294         MOVLW   LOW(_firstTab)
01BA 2600      01295         ADDWF   r0x00, F
01BC 0E00      01296         MOVLW   HIGH(_firstTab)
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01BE 2200      01297         ADDWFC  r0x01, F
01C0 C000 FFE9 01298         MOVFF   r0x00, FSR0L
01C4 C000 FFEA 01299         MOVFF   r0x01, FSR0H
01C8 CFEE F000 01300         MOVFF   POSTINC0, r0x00
01CC CFEF F000 01301         MOVFF   INDF0, r0x01
01D0 0E00      01302         MOVLW   LOW(_temp1)
01D2 2600      01303         ADDWF   r0x00, F
01D4 0E00      01304         MOVLW   HIGH(_temp1)
01D6 2200      01305         ADDWFC  r0x01, F
01D8 C000 FFE9 01306         MOVFF   r0x00, FSR0L
01DC C000 FFEA 01307         MOVFF   r0x01, FSR0H
01E0 0E20      01308         MOVLW   0x20
01E2 6EEF      01309         MOVWF   INDF0
               01310 ;       .line   496; pic.c      DisplayString(FIRST_LINE,temp1);
01E4 0E00      01311         MOVLW   HIGH(_temp1)
01E6 6E00      01312         MOVWF   r0x01
01E8 0E00      01313         MOVLW   LOW(_temp1)
01EA 6E00      01314         MOVWF   r0x00
01EC 0E80      01315         MOVLW   0x80
01EE 6E00      01316         MOVWF   r0x02
01F0 5000      01317         MOVF    r0x02, W
01F2 6EE5      01318         MOVWF   POSTDEC1
01F4 5000      01319         MOVF    r0x01, W
01F6 6EE5      01320         MOVWF   POSTDEC1
01F8 5000      01321         MOVF    r0x00, W
01FA 6EE5      01322         MOVWF   POSTDEC1
01FC 0E00      01323         MOVLW   0x00
01FE 6EE5      01324         MOVWF   POSTDEC1
0200 EC00 F000 01325         CALL    _DisplayString
0204 0E04      01326         MOVLW   0x04
0206 26E1      01327         ADDWF   FSR1L, F
               01328 ;       .line   497; pic.c      DisplayString(SECOND_LINE,temp2);
0208 0E00      01329         MOVLW   HIGH(_temp2)
020A 6E00      01330         MOVWF   r0x01
020C 0E00      01331         MOVLW   LOW(_temp2)
020E 6E00      01332         MOVWF   r0x00
0210 0E80      01333         MOVLW   0x80
0212 6E00      01334         MOVWF   r0x02
0214 5000      01335         MOVF    r0x02, W
0216 6EE5      01336         MOVWF   POSTDEC1
0218 5000      01337         MOVF    r0x01, W
021A 6EE5      01338         MOVWF   POSTDEC1
021C 5000      01339         MOVF    r0x00, W
021E 6EE5      01340         MOVWF   POSTDEC1
0220 0E10      01341         MOVLW   0x10
0222 6EE5      01342         MOVWF   POSTDEC1
0224 EC00 F000 01343         CALL    _DisplayString
0228 0E04      01344         MOVLW   0x04
022A 26E1      01345         ADDWF   FSR1L, F
022C D000      01346         BRA     _00358_DS_
022E 01347 _00351_DS_:
022E 0000      01348         BANKSEL _currentMode
               01349 ;       .line   499; pic.c      else if(currentMode==EDIT_A)
0230 5100      01350         MOVF    _currentMode, W, B
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0232 0A04      01351         XORLW   0x04
0234 E000      01352         BZ      _00378_DS_
0236 D000      01353         BRA     _00348_DS_
0238 01354 _00378_DS_:
0238 0000      01355         BANKSEL (_posA + 1)
               01356 ;       .line   501; pic.c      temp2[secondTab[posA]]=' ';
023A 5100      01357         MOVF    (_posA + 1), W, B
023C 6EE5      01358         MOVWF   POSTDEC1
023E 0000      01359         BANKSEL _posA
0240 5100      01360         MOVF    _posA, W, B
0242 6EE5      01361         MOVWF   POSTDEC1
0244 0E00      01362         MOVLW   0x00
0246 6EE5      01363         MOVWF   POSTDEC1
0248 0E02      01364         MOVLW   0x02
024A 6EE5      01365         MOVWF   POSTDEC1
024C EC00 F000 01366         CALL    __mulint
0250 6E00      01367         MOVWF   r0x00
0252 CFF3 F000 01368         MOVFF   PRODL, r0x01
0256 0E04      01369         MOVLW   0x04
0258 26E1      01370         ADDWF   FSR1L, F
025A 0E00      01371         MOVLW   LOW(_secondTab)
025C 2600      01372         ADDWF   r0x00, F
025E 0E00      01373         MOVLW   HIGH(_secondTab)
0260 2200      01374         ADDWFC  r0x01, F
0262 C000 FFE9 01375         MOVFF   r0x00, FSR0L
0266 C000 FFEA 01376         MOVFF   r0x01, FSR0H
026A CFEE F000 01377         MOVFF   POSTINC0, r0x00
026E CFEF F000 01378         MOVFF   INDF0, r0x01
0272 0E00      01379         MOVLW   LOW(_temp2)
0274 2600      01380         ADDWF   r0x00, F
0276 0E00      01381         MOVLW   HIGH(_temp2)
0278 2200      01382         ADDWFC  r0x01, F
027A C000 FFE9 01383         MOVFF   r0x00, FSR0L
027E C000 FFEA 01384         MOVFF   r0x01, FSR0H
0282 0E20      01385         MOVLW   0x20
0284 6EEF      01386         MOVWF   INDF0
               01387 ;       .line   502; pic.c      DisplayString(FIRST_LINE,temp1);
0286 0E00      01388         MOVLW   HIGH(_temp1)
0288 6E00      01389         MOVWF   r0x01
028A 0E00      01390         MOVLW   LOW(_temp1)
028C 6E00      01391         MOVWF   r0x00
028E 0E80      01392         MOVLW   0x80
0290 6E00      01393         MOVWF   r0x02
0292 5000      01394         MOVF    r0x02, W
0294 6EE5      01395         MOVWF   POSTDEC1
0296 5000      01396         MOVF    r0x01, W
0298 6EE5      01397         MOVWF   POSTDEC1
029A 5000      01398         MOVF    r0x00, W
029C 6EE5      01399         MOVWF   POSTDEC1
029E 0E00      01400         MOVLW   0x00
02A0 6EE5      01401         MOVWF   POSTDEC1
02A2 EC00 F000 01402         CALL    _DisplayString
02A6 0E04      01403         MOVLW   0x04
02A8 26E1      01404         ADDWF   FSR1L, F
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01405 ;       .line   503; pic.c      DisplayString(SECOND_LINE,temp2);
02AA 0E00      01406         MOVLW   HIGH(_temp2)
02AC 6E00      01407         MOVWF   r0x01
02AE 0E00      01408         MOVLW   LOW(_temp2)
02B0 6E00      01409         MOVWF   r0x00
02B2 0E80      01410         MOVLW   0x80
02B4 6E00      01411         MOVWF   r0x02
02B6 5000      01412         MOVF    r0x02, W
02B8 6EE5      01413         MOVWF   POSTDEC1
02BA 5000      01414         MOVF    r0x01, W
02BC 6EE5      01415         MOVWF   POSTDEC1
02BE 5000      01416         MOVF    r0x00, W
02C0 6EE5      01417         MOVWF   POSTDEC1
02C2 0E10      01418         MOVLW   0x10
02C4 6EE5      01419         MOVWF   POSTDEC1
02C6 EC00 F000 01420         CALL    _DisplayString
02CA 0E04      01421         MOVLW   0x04
02CC 26E1      01422         ADDWF   FSR1L, F
02CE D000      01423         BRA     _00358_DS_
02D0 01424 _00348_DS_:
02D0 0000      01425         BANKSEL _currentMode
               01426 ;       .line   506; pic.c      else if(currentMode==HELLO)
02D2 5100      01427         MOVF    _currentMode, W, B
02D4 0A06      01428         XORLW   0x06
02D6 E100      01429         BNZ     _00345_DS_
               01430 ;       .line   508; pic.c      info_A();
02D8 EC00 F000 01431         CALL    _info_A
02DC D000      01432         BRA     _00358_DS_
02DE 01433 _00345_DS_:
02DE 0000      01434         BANKSEL _currentMode
               01435 ;       .line   510; pic.c      else if(currentMode==RINGTONE)
02E0 5100      01436         MOVF    _currentMode, W, B
02E2 0A07      01437         XORLW   0x07
02E4 E100      01438         BNZ     _00358_DS_
               01439 ;       .line   513; pic.c      DisplayString(FIRST_LINE,"Good morning Louvain-La-Neuve");
02E6 0E00      01440         MOVLW   UPPER(__str_3)
02E8 6EE5      01441         MOVWF   POSTDEC1
02EA 0E00      01442         MOVLW   HIGH(__str_3)
02EC 6EE5      01443         MOVWF   POSTDEC1
02EE 0E00      01444         MOVLW   LOW(__str_3)
02F0 6EE5      01445         MOVWF   POSTDEC1
02F2 0E00      01446         MOVLW   0x00
02F4 6EE5      01447         MOVWF   POSTDEC1
02F6 EC00 F000 01448         CALL    _DisplayString
02FA 0E04      01449         MOVLW   0x04
02FC 26E1      01450         ADDWF   FSR1L, F
02FE 01451 _00358_DS_:
               01452 ;       .line   515; pic.c      bin--;
02FE 0EFF      01453         MOVLW   0xff
0300 0000      01454         BANKSEL _bin
0302 2700      01455         ADDWF   _bin, F, B
0304 E200      01456         BC      _10446_DS_
0306 0000      01457         BANKSEL (_bin + 1)
0308 0700      01458         DECF    (_bin + 1), F, B
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
030A 01459 _10446_DS_:
030A D000      01460         BRA     _00362_DS_
030C 01461 _00360_DS_:
               01462 ;       .line   519; pic.c      DisplayString(FIRST_LINE,firstLine);
030C 0E00      01463         MOVLW   HIGH(_firstLine)
030E 6E00      01464         MOVWF   r0x01
0310 0E00      01465         MOVLW   LOW(_firstLine)
0312 6E00      01466         MOVWF   r0x00
0314 0E80      01467         MOVLW   0x80
0316 6E00      01468         MOVWF   r0x02
0318 5000      01469         MOVF    r0x02, W
031A 6EE5      01470         MOVWF   POSTDEC1
031C 5000      01471         MOVF    r0x01, W
031E 6EE5      01472         MOVWF   POSTDEC1
0320 5000      01473         MOVF    r0x00, W
0322 6EE5      01474         MOVWF   POSTDEC1
0324 0E00      01475         MOVLW   0x00
0326 6EE5      01476         MOVWF   POSTDEC1
0328 EC00 F000 01477         CALL    _DisplayString
032C 0E04      01478         MOVLW   0x04
032E 26E1      01479         ADDWF   FSR1L, F
               01480 ;       .line   520; pic.c      DisplayString(SECOND_LINE,secondLine);
0330 0E00      01481         MOVLW   HIGH(_secondLine)
0332 6E00      01482         MOVWF   r0x01
0334 0E00      01483         MOVLW   LOW(_secondLine)
0336 6E00      01484         MOVWF   r0x00
0338 0E80      01485         MOVLW   0x80
033A 6E00      01486         MOVWF   r0x02
033C 5000      01487         MOVF    r0x02, W
033E 6EE5      01488         MOVWF   POSTDEC1
0340 5000      01489         MOVF    r0x01, W
0342 6EE5      01490         MOVWF   POSTDEC1
0344 5000      01491         MOVF    r0x00, W
0346 6EE5      01492         MOVWF   POSTDEC1
0348 0E10      01493         MOVLW   0x10
034A 6EE5      01494         MOVWF   POSTDEC1
034C EC00 F000 01495         CALL    _DisplayString
0350 0E04      01496         MOVLW   0x04
0352 26E1      01497         ADDWF   FSR1L, F
0354 0000      01498         BANKSEL _bin
               01499 ;       .line   521; pic.c      bin++;
0356 2B00      01500         INCF    _bin, F, B
0358 E300      01501         BNC     _20447_DS_
035A 0000      01502         BANKSEL (_bin + 1)
035C 2B00      01503         INCF    (_bin + 1), F, B
035E 01504 _20447_DS_:
035E 01505 _00362_DS_:
035E CFE4 F000 01506         MOVFF   PREINC1, r0x05
0362 CFE4 F000 01507         MOVFF   PREINC1, r0x04
0366 CFE4 F000 01508         MOVFF   PREINC1, r0x03
036A CFE4 F000 01509         MOVFF   PREINC1, r0x02
036E CFE4 F000 01510         MOVFF   PREINC1, r0x01
0372 CFE4 F000 01511         MOVFF   PREINC1, r0x00
0376 CFE4 FFD9 01512         MOVFF   PREINC1, FSR2L
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
037A 0012      01513         RETURN  
               01514 
               01515 ; ; Starting pCode block
               01516 S_pic__info_A   code
0000 01517 _info_A:
               01518 ;       .line   442; pic.c      info_A()
0000 CFD9 FFE5 01519         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01520         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01521         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01522         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01523         MOVFF   r0x02, POSTDEC1
0014 0000      01524         BANKSEL _isAlarm
               01525 ;       .line   444; pic.c      if (isAlarm)
0016 5100      01526         MOVF    _isAlarm, W, B
0018 0000      01527         BANKSEL (_isAlarm + 1)
001A 1100      01528         IORWF   (_isAlarm + 1), W, B
001C B4D8      01529         BTFSC   STATUS, 2
001E D000      01530         BRA     _00335_DS_
               01531 ;       .line   447; pic.c      tempA[0] = ' ';
0020 0E20      01532         MOVLW   0x20
0022 0000      01533         BANKSEL _tempA
0024 6F00      01534         MOVWF   _tempA, B
               01535 ;       .line   448; pic.c      tempA[1] = ' ';
0026 0E20      01536         MOVLW   0x20
0028 0000      01537         BANKSEL (_tempA + 1)
002A 6F00      01538         MOVWF   (_tempA + 1), B
               01539 ;       .line   449; pic.c      tempA[2] = ' ';
002C 0E20      01540         MOVLW   0x20
002E 0000      01541         BANKSEL (_tempA + 2)
0030 6F00      01542         MOVWF   (_tempA + 2), B
0032 0000      01543         BANKSEL (_secondLine + 9)
               01544 ;       .line   450; pic.c      tempA[3] = secondLine[9];
0034 5100      01545         MOVF    (_secondLine + 9), W, B
0036 0000      01546         BANKSEL (_tempA + 3)
0038 6F00      01547         MOVWF   (_tempA + 3), B
003A 0000      01548         BANKSEL (_secondLine + 10)
               01549 ;       .line   451; pic.c      tempA[4] = secondLine[10];
003C 5100      01550         MOVF    (_secondLine + 10), W, B
003E 0000      01551         BANKSEL (_tempA + 4)
0040 6F00      01552         MOVWF   (_tempA + 4), B
0042 0000      01553         BANKSEL (_secondLine + 11)
               01554 ;       .line   452; pic.c      tempA[5] = secondLine[11];
0044 5100      01555         MOVF    (_secondLine + 11), W, B
0046 0000      01556         BANKSEL (_tempA + 5)
0048 6F00      01557         MOVWF   (_tempA + 5), B
004A 0000      01558         BANKSEL (_secondLine + 12)
               01559 ;       .line   453; pic.c      tempA[6] = secondLine[12];
004C 5100      01560         MOVF    (_secondLine + 12), W, B
004E 0000      01561         BANKSEL (_tempA + 6)
0050 6F00      01562         MOVWF   (_tempA + 6), B
0052 0000      01563         BANKSEL (_secondLine + 13)
               01564 ;       .line   454; pic.c      tempA[7] = secondLine[13];
0054 5100      01565         MOVF    (_secondLine + 13), W, B
0056 0000      01566         BANKSEL (_tempA + 7)
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0058 6F00      01567         MOVWF   (_tempA + 7), B
               01568 ;       .line   456; pic.c      DisplayString(FIRST_LINE, "Alarm is ON");
005A 0E00      01569         MOVLW   UPPER(__str_0)
005C 6EE5      01570         MOVWF   POSTDEC1
005E 0E00      01571         MOVLW   HIGH(__str_0)
0060 6EE5      01572         MOVWF   POSTDEC1
0062 0E00      01573         MOVLW   LOW(__str_0)
0064 6EE5      01574         MOVWF   POSTDEC1
0066 0E00      01575         MOVLW   0x00
0068 6EE5      01576         MOVWF   POSTDEC1
006A EC00 F000 01577         CALL    _DisplayString
006E 0E04      01578         MOVLW   0x04
0070 26E1      01579         ADDWF   FSR1L, F
               01580 ;       .line   457; pic.c      DisplayString(SECOND_LINE,tempA);
0072 0E00      01581         MOVLW   HIGH(_tempA)
0074 6E00      01582         MOVWF   r0x01
0076 0E00      01583         MOVLW   LOW(_tempA)
0078 6E00      01584         MOVWF   r0x00
007A 0E80      01585         MOVLW   0x80
007C 6E00      01586         MOVWF   r0x02
007E 5000      01587         MOVF    r0x02, W
0080 6EE5      01588         MOVWF   POSTDEC1
0082 5000      01589         MOVF    r0x01, W
0084 6EE5      01590         MOVWF   POSTDEC1
0086 5000      01591         MOVF    r0x00, W
0088 6EE5      01592         MOVWF   POSTDEC1
008A 0E10      01593         MOVLW   0x10
008C 6EE5      01594         MOVWF   POSTDEC1
008E EC00 F000 01595         CALL    _DisplayString
0092 0E04      01596         MOVLW   0x04
0094 26E1      01597         ADDWF   FSR1L, F
0096 D000      01598         BRA     _00337_DS_
0098 01599 _00335_DS_:
               01600 ;       .line   461; pic.c      DisplayString(FIRST_LINE, "Alarm is off");
0098 0E00      01601         MOVLW   UPPER(__str_1)
009A 6EE5      01602         MOVWF   POSTDEC1
009C 0E00      01603         MOVLW   HIGH(__str_1)
009E 6EE5      01604         MOVWF   POSTDEC1
00A0 0E00      01605         MOVLW   LOW(__str_1)
00A2 6EE5      01606         MOVWF   POSTDEC1
00A4 0E00      01607         MOVLW   0x00
00A6 6EE5      01608         MOVWF   POSTDEC1
00A8 EC00 F000 01609         CALL    _DisplayString
00AC 0E04      01610         MOVLW   0x04
00AE 26E1      01611         ADDWF   FSR1L, F
               01612 ;       .line   462; pic.c      DisplayString(SECOND_LINE,"");
00B0 0E00      01613         MOVLW   UPPER(__str_2)
00B2 6EE5      01614         MOVWF   POSTDEC1
00B4 0E00      01615         MOVLW   HIGH(__str_2)
00B6 6EE5      01616         MOVWF   POSTDEC1
00B8 0E00      01617         MOVLW   LOW(__str_2)
00BA 6EE5      01618         MOVWF   POSTDEC1
00BC 0E10      01619         MOVLW   0x10
00BE 6EE5      01620         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00C0 EC00 F000 01621         CALL    _DisplayString
00C4 0E04      01622         MOVLW   0x04
00C6 26E1      01623         ADDWF   FSR1L, F
00C8 01624 _00337_DS_:
00C8 CFE4 F000 01625         MOVFF   PREINC1, r0x02
00CC CFE4 F000 01626         MOVFF   PREINC1, r0x01
00D0 CFE4 F000 01627         MOVFF   PREINC1, r0x00
00D4 CFE4 FFD9 01628         MOVFF   PREINC1, FSR2L
00D8 0012      01629         RETURN  
               01630 
               01631 ; ; Starting pCode block
               01632 S_pic__changeTime       code
0000 01633 _changeTime:
               01634 ;       .line   421; pic.c      changeTime()
0000 CFD9 FFE5 01635         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01636         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01637         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01638         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01639         MOVFF   r0x02, POSTDEC1
0014 0000      01640         BANKSEL (_posC + 1)
               01641 ;       .line   423; pic.c      firstLine[firstTab[posC]]++;
0016 5100      01642         MOVF    (_posC + 1), W, B
0018 6EE5      01643         MOVWF   POSTDEC1
001A 0000      01644         BANKSEL _posC
001C 5100      01645         MOVF    _posC, W, B
001E 6EE5      01646         MOVWF   POSTDEC1
0020 0E00      01647         MOVLW   0x00
0022 6EE5      01648         MOVWF   POSTDEC1
0024 0E02      01649         MOVLW   0x02
0026 6EE5      01650         MOVWF   POSTDEC1
0028 EC00 F000 01651         CALL    __mulint
002C 6E00      01652         MOVWF   r0x00
002E CFF3 F000 01653         MOVFF   PRODL, r0x01
0032 0E04      01654         MOVLW   0x04
0034 26E1      01655         ADDWF   FSR1L, F
0036 0E00      01656         MOVLW   LOW(_firstTab)
0038 2600      01657         ADDWF   r0x00, F
003A 0E00      01658         MOVLW   HIGH(_firstTab)
003C 2200      01659         ADDWFC  r0x01, F
003E C000 FFE9 01660         MOVFF   r0x00, FSR0L
0042 C000 FFEA 01661         MOVFF   r0x01, FSR0H
0046 CFEE F000 01662         MOVFF   POSTINC0, r0x00
004A CFEF F000 01663         MOVFF   INDF0, r0x01
004E 0E00      01664         MOVLW   LOW(_firstLine)
0050 2600      01665         ADDWF   r0x00, F
0052 0E00      01666         MOVLW   HIGH(_firstLine)
0054 2200      01667         ADDWFC  r0x01, F
0056 C000 FFE9 01668         MOVFF   r0x00, FSR0L
005A C000 FFEA 01669         MOVFF   r0x01, FSR0H
005E CFEF F000 01670         MOVFF   INDF0, r0x02
0062 2A00      01671         INCF    r0x02, F
0064 C000 FFE9 01672         MOVFF   r0x00, FSR0L
0068 C000 FFEA 01673         MOVFF   r0x01, FSR0H
006C C000 FFEF 01674         MOVFF   r0x02, INDF0
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0070 0000      01675         BANKSEL (_firstLine + 13)
               01676 ;       .line   427; pic.c      if((firstLine[13]>=':')
0072 5100      01677         MOVF    (_firstLine + 13), W, B
0074 0F80      01678         ADDLW   0x80
0076 0F46      01679         ADDLW   0x46
0078 E200      01680         BC      _00305_DS_
007A 0000      01681         BANKSEL (_firstLine + 10)
               01682 ;       .line   428; pic.c      ||(firstLine[10]>=':')
007C 5100      01683         MOVF    (_firstLine + 10), W, B
007E 0F80      01684         ADDLW   0x80
0080 0F46      01685         ADDLW   0x46
0082 E200      01686         BC      _00305_DS_
0084 0000      01687         BANKSEL (_firstLine + 12)
               01688 ;       .line   429; pic.c      ||(firstLine[12]>='6')
0086 5100      01689         MOVF    (_firstLine + 12), W, B
0088 0F80      01690         ADDLW   0x80
008A 0F4A      01691         ADDLW   0x4a
008C E200      01692         BC      _00305_DS_
008E 0000      01693         BANKSEL (_firstLine + 9)
               01694 ;       .line   430; pic.c      ||(firstLine[9]>='6')
0090 5100      01695         MOVF    (_firstLine + 9), W, B
0092 0F80      01696         ADDLW   0x80
0094 0F4A      01697         ADDLW   0x4a
0096 E200      01698         BC      _00305_DS_
0098 0000      01699         BANKSEL (_firstLine + 7)
               01700 ;       .line   431; pic.c      ||(firstLine[7]>=':'))
009A 5100      01701         MOVF    (_firstLine + 7), W, B
009C 0F80      01702         ADDLW   0x80
009E 0F46      01703         ADDLW   0x46
00A0 E300      01704         BNC     _00306_DS_
00A2 01705 _00305_DS_:
               01706 ;       .line   433; pic.c      firstLine[firstTab[posC]]='0';
00A2 C000 FFE9 01707         MOVFF   r0x00, FSR0L
00A6 C000 FFEA 01708         MOVFF   r0x01, FSR0H
00AA 0E30      01709         MOVLW   0x30
00AC 6EEF      01710         MOVWF   INDF0
00AE 01711 _00306_DS_:
               01712 ;       .line   435; pic.c      if(((firstLine[6]>='2')&&(firstLine[7]>='4'))
00AE C000 F000 01713         MOVFF   (_firstLine + 6), r0x02
00B2 5000      01714         MOVF    r0x02, W
00B4 0F80      01715         ADDLW   0x80
00B6 0F4E      01716         ADDLW   0x4e
00B8 E300      01717         BNC     _00314_DS_
00BA 0000      01718         BANKSEL (_firstLine + 7)
00BC 5100      01719         MOVF    (_firstLine + 7), W, B
00BE 0F80      01720         ADDLW   0x80
00C0 0F4C      01721         ADDLW   0x4c
00C2 E200      01722         BC      _00311_DS_
00C4 01723 _00314_DS_:
               01724 ;       .line   436; pic.c      ||(firstLine[6]>='3'))//24h
00C4 5000      01725         MOVF    r0x02, W
00C6 0F80      01726         ADDLW   0x80
00C8 0F4D      01727         ADDLW   0x4d
00CA E300      01728         BNC     _00315_DS_
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00CC 01729 _00311_DS_:
               01730 ;       .line   438; pic.c      firstLine[firstTab[posC]]='0';
00CC C000 FFE9 01731         MOVFF   r0x00, FSR0L
00D0 C000 FFEA 01732         MOVFF   r0x01, FSR0H
00D4 0E30      01733         MOVLW   0x30
00D6 6EEF      01734         MOVWF   INDF0
00D8 01735 _00315_DS_:
00D8 CFE4 F000 01736         MOVFF   PREINC1, r0x02
00DC CFE4 F000 01737         MOVFF   PREINC1, r0x01
00E0 CFE4 F000 01738         MOVFF   PREINC1, r0x00
00E4 CFE4 FFD9 01739         MOVFF   PREINC1, FSR2L
00E8 0012      01740         RETURN  
               01741 
               01742 ; ; Starting pCode block
               01743 S_pic__move     code
0000 01744 _move:
               01745 ;       .line   391; pic.c      move()
0000 CFD9 FFE5 01746         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01747         MOVFF   FSR1L, FSR2L
0008 0000      01748         BANKSEL _currentMode
               01749 ;       .line   393; pic.c      if(currentMode==EDIT_T)
000A 5100      01750         MOVF    _currentMode, W, B
000C 0A03      01751         XORLW   0x03
000E E100      01752         BNZ     _00285_DS_
0010 01753 _00294_DS_:
0010 0000      01754         BANKSEL _posC
               01755 ;       .line   396; pic.c      if(posC==LEN_C)
0012 5100      01756         MOVF    _posC, W, B
0014 0A05      01757         XORLW   0x05
0016 E100      01758         BNZ     _00295_DS_
0018 0000      01759         BANKSEL (_posC + 1)
001A 5100      01760         MOVF    (_posC + 1), W, B
001C E000      01761         BZ      _00296_DS_
001E 01762 _00295_DS_:
001E D000      01763         BRA     _00277_DS_
0020 01764 _00296_DS_:
0020 0000      01765         BANKSEL _posC
               01766 ;       .line   398; pic.c      posC=0;
0022 6B00      01767         CLRF    _posC, B
0024 0000      01768         BANKSEL (_posC + 1)
0026 6B00      01769         CLRF    (_posC + 1), B
0028 0000      01770         BANKSEL _currentMode
               01771 ;       .line   399; pic.c      currentMode=ACCUEIL;
002A 6B00      01772         CLRF    _currentMode, B
002C D000      01773         BRA     _00287_DS_
002E 01774 _00277_DS_:
002E 0000      01775         BANKSEL _posC
               01776 ;       .line   403; pic.c      posC++;/*On passe à la prochaine position*/
0030 2B00      01777         INCF    _posC, F, B
0032 E300      01778         BNC     _30448_DS_
0034 0000      01779         BANKSEL (_posC + 1)
0036 2B00      01780         INCF    (_posC + 1), F, B
0038 01781 _30448_DS_:
0038 D000      01782         BRA     _00287_DS_
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
003A 01783 _00285_DS_:
003A 0000      01784         BANKSEL _currentMode
               01785 ;       .line   406; pic.c      else if(currentMode==EDIT_A)
003C 5100      01786         MOVF    _currentMode, W, B
003E 0A04      01787         XORLW   0x04
0040 E100      01788         BNZ     _00287_DS_
0042 01789 _00298_DS_:
0042 0000      01790         BANKSEL _posA
               01791 ;       .line   409; pic.c      if(posA==LEN_A)
0044 5100      01792         MOVF    _posA, W, B
0046 0A04      01793         XORLW   0x04
0048 E100      01794         BNZ     _00299_DS_
004A 0000      01795         BANKSEL (_posA + 1)
004C 5100      01796         MOVF    (_posA + 1), W, B
004E E000      01797         BZ      _00300_DS_
0050 01798 _00299_DS_:
0050 D000      01799         BRA     _00280_DS_
0052 01800 _00300_DS_:
0052 0000      01801         BANKSEL _posA
               01802 ;       .line   411; pic.c      posA=0;
0054 6B00      01803         CLRF    _posA, B
0056 0000      01804         BANKSEL (_posA + 1)
0058 6B00      01805         CLRF    (_posA + 1), B
005A 0000      01806         BANKSEL _currentMode
               01807 ;       .line   412; pic.c      currentMode=ACCUEIL;
005C 6B00      01808         CLRF    _currentMode, B
005E D000      01809         BRA     _00287_DS_
0060 01810 _00280_DS_:
0060 0000      01811         BANKSEL _posA
               01812 ;       .line   416; pic.c      posA++;/*On passe à la prochaine position*/
0062 2B00      01813         INCF    _posA, F, B
0064 E300      01814         BNC     _40449_DS_
0066 0000      01815         BANKSEL (_posA + 1)
0068 2B00      01816         INCF    (_posA + 1), F, B
006A 01817 _40449_DS_:
006A 01818 _00287_DS_:
006A CFE4 FFD9 01819         MOVFF   PREINC1, FSR2L
006E 0012      01820         RETURN  
               01821 
               01822 ; ; Starting pCode block
               01823 S_pic__actionButton2    code
0000 01824 _actionButton2:
               01825 ;       .line   344; pic.c      actionButton2()
0000 CFD9 FFE5 01826         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01827         MOVFF   FSR1L, FSR2L
               01828 ;       .line   346; pic.c      switch(currentMode)
0008 0E08      01829         MOVLW   0x08
000A 0000      01830         BANKSEL _currentMode
000C 5D00      01831         SUBWF   _currentMode, W, B
000E B0D8      01832         BTFSC   STATUS, 0
0010 D000      01833         BRA     _00267_DS_
0012 C000 FFE5 01834         MOVFF   r0x00, POSTDEC1
0016 C000 FFE5 01835         MOVFF   r0x01, POSTDEC1
001A 6A00      01836         CLRF    r0x01
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
001C 0000      01837         BANKSEL _currentMode
001E 3500      01838         RLCF    _currentMode, W, B
0020 3600      01839         RLCF    r0x01, F
0022 34E8      01840         RLCF    WREG, W
0024 3600      01841         RLCF    r0x01, F
0026 0BFC      01842         ANDLW   0xfc
0028 6E00      01843         MOVWF   r0x00
002A 0E00      01844         MOVLW   UPPER(_00271_DS_)
002C 6EFB      01845         MOVWF   PCLATU
002E 0E00      01846         MOVLW   HIGH(_00271_DS_)
0030 6EFA      01847         MOVWF   PCLATH
0032 0E00      01848         MOVLW   LOW(_00271_DS_)
0034 2600      01849         ADDWF   r0x00, F
0036 5000      01850         MOVF    r0x01, W
0038 22FA      01851         ADDWFC  PCLATH, F
003A B0D8      01852         BTFSC   STATUS, 0
003C 2AFB      01853         INCF    PCLATU, F
003E 5000      01854         MOVF    r0x00, W
0040 CFE4 F000 01855         MOVFF   PREINC1, r0x01
0044 CFE4 F000 01856         MOVFF   PREINC1, r0x00
0048 6EF9      01857         MOVWF   PCL
004A 01858 _00271_DS_:
004A EF00 F000 01859         GOTO    _00258_DS_
004E EF00 F000 01860         GOTO    _00260_DS_
0052 EF00 F000 01861         GOTO    _00261_DS_
0056 EF00 F000 01862         GOTO    _00262_DS_
005A EF00 F000 01863         GOTO    _00263_DS_
005E EF00 F000 01864         GOTO    _00267_DS_
0062 EF00 F000 01865         GOTO    _00259_DS_
0066 EF00 F000 01866         GOTO    _00264_DS_
006A 01867 _00258_DS_:
               01868 ;       .line   351; pic.c      currentMode=HELLO;
006A 0E06      01869         MOVLW   0x06
006C 0000      01870         BANKSEL _currentMode
006E 6F00      01871         MOVWF   _currentMode, B
               01872 ;       .line   352; pic.c      break;
0070 D000      01873         BRA     _00267_DS_
0072 01874 _00259_DS_:
0072 0000      01875         BANKSEL _currentMode
               01876 ;       .line   356; pic.c      currentMode=ACCUEIL;
0074 6B00      01877         CLRF    _currentMode, B
               01878 ;       .line   357; pic.c      break;
0076 D000      01879         BRA     _00267_DS_
0078 01880 _00260_DS_:
               01881 ;       .line   361; pic.c      currentMode=ALARM;
0078 0E02      01882         MOVLW   0x02
007A 0000      01883         BANKSEL _currentMode
007C 6F00      01884         MOVWF   _currentMode, B
               01885 ;       .line   362; pic.c      break;
007E D000      01886         BRA     _00267_DS_
0080 01887 _00261_DS_:
               01888 ;       .line   366; pic.c      currentMode=TIME;
0080 0E01      01889         MOVLW   0x01
0082 0000      01890         BANKSEL _currentMode
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0084 6F00      01891         MOVWF   _currentMode, B
               01892 ;       .line   367; pic.c      break;
0086 D000      01893         BRA     _00267_DS_
0088 01894 _00262_DS_:
               01895 ;       .line   371; pic.c      changeTime();
0088 EC00 F000 01896         CALL    _changeTime
               01897 ;       .line   372; pic.c      break;
008C D000      01898         BRA     _00267_DS_
008E 01899 _00263_DS_:
               01900 ;       .line   376; pic.c      setAlarm();
008E EC00 F000 01901         CALL    _setAlarm
               01902 ;       .line   377; pic.c      break;
0092 D000      01903         BRA     _00267_DS_
0094 01904 _00264_DS_:
0094 0000      01905         BANKSEL _ringtone
               01906 ;       .line   382; pic.c      ringtone=0;
0096 6B00      01907         CLRF    _ringtone, B
0098 0000      01908         BANKSEL (_ringtone + 1)
009A 6B00      01909         CLRF    (_ringtone + 1), B
               01910 ;       .line   383; pic.c      LED2_IO = 0;
009C 9400      01911         BCF     _LATJbits, 2
009E 0000      01912         BANKSEL _currentMode
               01913 ;       .line   384; pic.c      currentMode=ACCUEIL;
00A0 6B00      01914         CLRF    _currentMode, B
00A2 01915 _00267_DS_:
               01916 ;       .line   388; pic.c      }
00A2 CFE4 FFD9 01917         MOVFF   PREINC1, FSR2L
00A6 0012      01918         RETURN  
               01919 
               01920 ; ; Starting pCode block
               01921 S_pic__actionButton1    code
0000 01922 _actionButton1:
               01923 ;       .line   297; pic.c      actionButton1()
0000 CFD9 FFE5 01924         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01925         MOVFF   FSR1L, FSR2L
               01926 ;       .line   299; pic.c      switch(currentMode)
0008 0E08      01927         MOVLW   0x08
000A 0000      01928         BANKSEL _currentMode
000C 5D00      01929         SUBWF   _currentMode, W, B
000E B0D8      01930         BTFSC   STATUS, 0
0010 D000      01931         BRA     _00249_DS_
0012 C000 FFE5 01932         MOVFF   r0x00, POSTDEC1
0016 C000 FFE5 01933         MOVFF   r0x01, POSTDEC1
001A 6A00      01934         CLRF    r0x01
001C 0000      01935         BANKSEL _currentMode
001E 3500      01936         RLCF    _currentMode, W, B
0020 3600      01937         RLCF    r0x01, F
0022 34E8      01938         RLCF    WREG, W
0024 3600      01939         RLCF    r0x01, F
0026 0BFC      01940         ANDLW   0xfc
0028 6E00      01941         MOVWF   r0x00
002A 0E00      01942         MOVLW   UPPER(_00253_DS_)
002C 6EFB      01943         MOVWF   PCLATU
002E 0E00      01944         MOVLW   HIGH(_00253_DS_)
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0030 6EFA      01945         MOVWF   PCLATH
0032 0E00      01946         MOVLW   LOW(_00253_DS_)
0034 2600      01947         ADDWF   r0x00, F
0036 5000      01948         MOVF    r0x01, W
0038 22FA      01949         ADDWFC  PCLATH, F
003A B0D8      01950         BTFSC   STATUS, 0
003C 2AFB      01951         INCF    PCLATU, F
003E 5000      01952         MOVF    r0x00, W
0040 CFE4 F000 01953         MOVFF   PREINC1, r0x01
0044 CFE4 F000 01954         MOVFF   PREINC1, r0x00
0048 6EF9      01955         MOVWF   PCL
004A 01956 _00253_DS_:
004A EF00 F000 01957         GOTO    _00241_DS_
004E EF00 F000 01958         GOTO    _00242_DS_
0052 EF00 F000 01959         GOTO    _00243_DS_
0056 EF00 F000 01960         GOTO    _00244_DS_
005A EF00 F000 01961         GOTO    _00245_DS_
005E EF00 F000 01962         GOTO    _00249_DS_
0062 EF00 F000 01963         GOTO    _00240_DS_
0066 EF00 F000 01964         GOTO    _00246_DS_
006A 01965 _00240_DS_:
006A 0000      01966         BANKSEL _currentMode
               01967 ;       .line   304; pic.c      currentMode=ACCUEIL;
006C 6B00      01968         CLRF    _currentMode, B
               01969 ;       .line   305; pic.c      break;
006E D000      01970         BRA     _00249_DS_
0070 01971 _00241_DS_:
               01972 ;       .line   309; pic.c      currentMode=TIME;
0070 0E01      01973         MOVLW   0x01
0072 0000      01974         BANKSEL _currentMode
0074 6F00      01975         MOVWF   _currentMode, B
               01976 ;       .line   310; pic.c      break;
0076 D000      01977         BRA     _00249_DS_
0078 01978 _00242_DS_:
               01979 ;       .line   314; pic.c      currentMode=EDIT_T;
0078 0E03      01980         MOVLW   0x03
007A 0000      01981         BANKSEL _currentMode
007C 6F00      01982         MOVWF   _currentMode, B
               01983 ;       .line   315; pic.c      break;
007E D000      01984         BRA     _00249_DS_
0080 01985 _00243_DS_:
               01986 ;       .line   319; pic.c      currentMode=EDIT_A;
0080 0E04      01987         MOVLW   0x04
0082 0000      01988         BANKSEL _currentMode
0084 6F00      01989         MOVWF   _currentMode, B
               01990 ;       .line   320; pic.c      break;
0086 D000      01991         BRA     _00249_DS_
0088 01992 _00244_DS_:
               01993 ;       .line   324; pic.c      move();
0088 EC00 F000 01994         CALL    _move
               01995 ;       .line   325; pic.c      break;
008C D000      01996         BRA     _00249_DS_
008E 01997 _00245_DS_:
               01998 ;       .line   329; pic.c      move();
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
008E EC00 F000 01999         CALL    _move
               02000 ;       .line   330; pic.c      break;
0092 D000      02001         BRA     _00249_DS_
0094 02002 _00246_DS_:
0094 0000      02003         BANKSEL _ringtone
               02004 ;       .line   335; pic.c      ringtone=0;
0096 6B00      02005         CLRF    _ringtone, B
0098 0000      02006         BANKSEL (_ringtone + 1)
009A 6B00      02007         CLRF    (_ringtone + 1), B
               02008 ;       .line   336; pic.c      LED2_IO = 0;
009C 9400      02009         BCF     _LATJbits, 2
009E 0000      02010         BANKSEL _currentMode
               02011 ;       .line   337; pic.c      currentMode=ACCUEIL;
00A0 6B00      02012         CLRF    _currentMode, B
00A2 02013 _00249_DS_:
               02014 ;       .line   341; pic.c      }
00A2 CFE4 FFD9 02015         MOVFF   PREINC1, FSR2L
00A6 0012      02016         RETURN  
               02017 
               02018 ; ; Starting pCode block
               02019 S_pic__setAlarm code
0000 02020 _setAlarm:
               02021 ;       .line   263; pic.c      setAlarm()
0000 CFD9 FFE5 02022         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 02023         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 02024         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 02025         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 02026         MOVFF   r0x02, POSTDEC1
0014 0000      02027         BANKSEL _posA
               02028 ;       .line   266; pic.c      if(posA!=0)
0016 5100      02029         MOVF    _posA, W, B
0018 0000      02030         BANKSEL (_posA + 1)
001A 1100      02031         IORWF   (_posA + 1), W, B
001C B4D8      02032         BTFSC   STATUS, 2
001E D000      02033         BRA     _00217_DS_
0020 0000      02034         BANKSEL (_posA + 1)
               02035 ;       .line   268; pic.c      secondLine[secondTab[posA]]++; //+1
0022 5100      02036         MOVF    (_posA + 1), W, B
0024 6EE5      02037         MOVWF   POSTDEC1
0026 0000      02038         BANKSEL _posA
0028 5100      02039         MOVF    _posA, W, B
002A 6EE5      02040         MOVWF   POSTDEC1
002C 0E00      02041         MOVLW   0x00
002E 6EE5      02042         MOVWF   POSTDEC1
0030 0E02      02043         MOVLW   0x02
0032 6EE5      02044         MOVWF   POSTDEC1
0034 EC00 F000 02045         CALL    __mulint
0038 6E00      02046         MOVWF   r0x00
003A CFF3 F000 02047         MOVFF   PRODL, r0x01
003E 0E04      02048         MOVLW   0x04
0040 26E1      02049         ADDWF   FSR1L, F
0042 0E00      02050         MOVLW   LOW(_secondTab)
0044 2600      02051         ADDWF   r0x00, F
0046 0E00      02052         MOVLW   HIGH(_secondTab)
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0048 2200      02053         ADDWFC  r0x01, F
004A C000 FFE9 02054         MOVFF   r0x00, FSR0L
004E C000 FFEA 02055         MOVFF   r0x01, FSR0H
0052 CFEE F000 02056         MOVFF   POSTINC0, r0x00
0056 CFEF F000 02057         MOVFF   INDF0, r0x01
005A 0E00      02058         MOVLW   LOW(_secondLine)
005C 2600      02059         ADDWF   r0x00, F
005E 0E00      02060         MOVLW   HIGH(_secondLine)
0060 2200      02061         ADDWFC  r0x01, F
0062 C000 FFE9 02062         MOVFF   r0x00, FSR0L
0066 C000 FFEA 02063         MOVFF   r0x01, FSR0H
006A CFEF F000 02064         MOVFF   INDF0, r0x02
006E 2A00      02065         INCF    r0x02, F
0070 C000 FFE9 02066         MOVFF   r0x00, FSR0L
0074 C000 FFEA 02067         MOVFF   r0x01, FSR0H
0078 C000 FFEF 02068         MOVFF   r0x02, INDF0
007C 0000      02069         BANKSEL (_secondLine + 13)
               02070 ;       .line   269; pic.c      if((secondLine[13]>=':')
007E 5100      02071         MOVF    (_secondLine + 13), W, B
0080 0F80      02072         ADDLW   0x80
0082 0F46      02073         ADDLW   0x46
0084 E200      02074         BC      _00204_DS_
0086 0000      02075         BANKSEL (_secondLine + 10)
               02076 ;       .line   270; pic.c      ||(secondLine[10]>=':')
0088 5100      02077         MOVF    (_secondLine + 10), W, B
008A 0F80      02078         ADDLW   0x80
008C 0F46      02079         ADDLW   0x46
008E E200      02080         BC      _00204_DS_
0090 0000      02081         BANKSEL (_secondLine + 12)
               02082 ;       .line   271; pic.c      ||(secondLine[12]>='6')
0092 5100      02083         MOVF    (_secondLine + 12), W, B
0094 0F80      02084         ADDLW   0x80
0096 0F4A      02085         ADDLW   0x4a
0098 E200      02086         BC      _00204_DS_
009A 0000      02087         BANKSEL (_secondLine + 9)
               02088 ;       .line   272; pic.c      ||(secondLine[9]>=':'))
009C 5100      02089         MOVF    (_secondLine + 9), W, B
009E 0F80      02090         ADDLW   0x80
00A0 0F46      02091         ADDLW   0x46
00A2 E300      02092         BNC     _00205_DS_
00A4 02093 _00204_DS_:
               02094 ;       .line   274; pic.c      secondLine[secondTab[posA]]='0';
00A4 C000 FFE9 02095         MOVFF   r0x00, FSR0L
00A8 C000 FFEA 02096         MOVFF   r0x01, FSR0H
00AC 0E30      02097         MOVLW   0x30
00AE 6EEF      02098         MOVWF   INDF0
00B0 02099 _00205_DS_:
               02100 ;       .line   276; pic.c      if(((secondLine[9]>='2')&&(secondLine[10]>='4'))
00B0 C000 F000 02101         MOVFF   (_secondLine + 9), r0x02
00B4 5000      02102         MOVF    r0x02, W
00B6 0F80      02103         ADDLW   0x80
00B8 0F4E      02104         ADDLW   0x4e
00BA E300      02105         BNC     _00212_DS_
00BC 0000      02106         BANKSEL (_secondLine + 10)
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00BE 5100      02107         MOVF    (_secondLine + 10), W, B
00C0 0F80      02108         ADDLW   0x80
00C2 0F4C      02109         ADDLW   0x4c
00C4 E200      02110         BC      _00209_DS_
00C6 02111 _00212_DS_:
               02112 ;       .line   277; pic.c      ||(secondLine[9]>='3'))//24h
00C6 5000      02113         MOVF    r0x02, W
00C8 0F80      02114         ADDLW   0x80
00CA 0F4D      02115         ADDLW   0x4d
00CC E300      02116         BNC     _00219_DS_
00CE 02117 _00209_DS_:
               02118 ;       .line   279; pic.c      secondLine[secondTab[posA]]='0';
00CE C000 FFE9 02119         MOVFF   r0x00, FSR0L
00D2 C000 FFEA 02120         MOVFF   r0x01, FSR0H
00D6 0E30      02121         MOVLW   0x30
00D8 6EEF      02122         MOVWF   INDF0
00DA D000      02123         BRA     _00219_DS_
00DC 02124 _00217_DS_:
00DC 0000      02125         BANKSEL (_secondLine + 7)
               02126 ;       .line   284; pic.c      if(secondLine[7]=='N')
00DE 5100      02127         MOVF    (_secondLine + 7), W, B
00E0 0A4E      02128         XORLW   0x4e
00E2 E100      02129         BNZ     _00214_DS_
               02130 ;       .line   286; pic.c      isAlarm=1;
00E4 0E01      02131         MOVLW   0x01
00E6 0000      02132         BANKSEL _isAlarm
00E8 6F00      02133         MOVWF   _isAlarm, B
00EA 0000      02134         BANKSEL (_isAlarm + 1)
00EC 6B00      02135         CLRF    (_isAlarm + 1), B
               02136 ;       .line   287; pic.c      secondLine[7]='Y';
00EE 0E59      02137         MOVLW   0x59
00F0 0000      02138         BANKSEL (_secondLine + 7)
00F2 6F00      02139         MOVWF   (_secondLine + 7), B
00F4 D000      02140         BRA     _00219_DS_
00F6 02141 _00214_DS_:
               02142 ;       .line   291; pic.c      secondLine[7]='N';
00F6 0E4E      02143         MOVLW   0x4e
00F8 0000      02144         BANKSEL (_secondLine + 7)
00FA 6F00      02145         MOVWF   (_secondLine + 7), B
00FC 0000      02146         BANKSEL _isAlarm
               02147 ;       .line   292; pic.c      isAlarm=0;
00FE 6B00      02148         CLRF    _isAlarm, B
0100 0000      02149         BANKSEL (_isAlarm + 1)
0102 6B00      02150         CLRF    (_isAlarm + 1), B
0104 02151 _00219_DS_:
0104 CFE4 F000 02152         MOVFF   PREINC1, r0x02
0108 CFE4 F000 02153         MOVFF   PREINC1, r0x01
010C CFE4 F000 02154         MOVFF   PREINC1, r0x00
0110 CFE4 FFD9 02155         MOVFF   PREINC1, FSR2L
0114 0012      02156         RETURN  
               02157 
               02158 ; ; Starting pCode block
               02159 S_pic__checkAlarm       code
0000 02160 _checkAlarm:
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               02161 ;       .line   250; pic.c      checkAlarm()
0000 CFD9 FFE5 02162         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 02163         MOVFF   FSR1L, FSR2L
0008 0000      02164         BANKSEL (_firstLine + 6)
               02165 ;       .line   252; pic.c      if((firstLine[6]==secondLine[9])
000A 5100      02166         MOVF    (_firstLine + 6), W, B
000C 0000      02167         BANKSEL (_secondLine + 9)
000E 1900      02168         XORWF   (_secondLine + 9), W, B
0010 E100      02169         BNZ     _00180_DS_
0012 02170 _00189_DS_:
0012 0000      02171         BANKSEL (_firstLine + 7)
               02172 ;       .line   253; pic.c      &&(firstLine[7]==secondLine[10])
0014 5100      02173         MOVF    (_firstLine + 7), W, B
0016 0000      02174         BANKSEL (_secondLine + 10)
0018 1900      02175         XORWF   (_secondLine + 10), W, B
001A E100      02176         BNZ     _00180_DS_
001C 02177 _00191_DS_:
001C 0000      02178         BANKSEL (_firstLine + 9)
               02179 ;       .line   254; pic.c      &&(firstLine[9]==secondLine[12])
001E 5100      02180         MOVF    (_firstLine + 9), W, B
0020 0000      02181         BANKSEL (_secondLine + 12)
0022 1900      02182         XORWF   (_secondLine + 12), W, B
0024 E100      02183         BNZ     _00180_DS_
0026 02184 _00193_DS_:
0026 0000      02185         BANKSEL (_firstLine + 10)
               02186 ;       .line   255; pic.c      &&(firstLine[10]==secondLine[13])
0028 5100      02187         MOVF    (_firstLine + 10), W, B
002A 0000      02188         BANKSEL (_secondLine + 13)
002C 1900      02189         XORWF   (_secondLine + 13), W, B
002E E100      02190         BNZ     _00180_DS_
0030 02191 _00195_DS_:
0030 0000      02192         BANKSEL (_firstLine + 12)
               02193 ;       .line   256; pic.c      &&(firstLine[12]=='0')
0032 5100      02194         MOVF    (_firstLine + 12), W, B
0034 0A30      02195         XORLW   0x30
0036 E100      02196         BNZ     _00180_DS_
0038 02197 _00197_DS_:
0038 0000      02198         BANKSEL (_firstLine + 13)
               02199 ;       .line   257; pic.c      &&(firstLine[13]=='0'))
003A 5100      02200         MOVF    (_firstLine + 13), W, B
003C 0A30      02201         XORLW   0x30
003E E100      02202         BNZ     _00180_DS_
               02203 ;       .line   259; pic.c      ringtone=30;//30 secondes d'alarme
0040 0E1E      02204         MOVLW   0x1e
0042 0000      02205         BANKSEL _ringtone
0044 6F00      02206         MOVWF   _ringtone, B
0046 0000      02207         BANKSEL (_ringtone + 1)
0048 6B00      02208         CLRF    (_ringtone + 1), B
004A 02209 _00180_DS_:
004A CFE4 FFD9 02210         MOVFF   PREINC1, FSR2L
004E 0012      02211         RETURN  
               02212 
               02213 ; ; Starting pCode block
               02214 S_pic__increment        code
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0000 02215 _increment:
               02216 ;       .line   213; pic.c      increment()
0000 CFD9 FFE5 02217         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 02218         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 02219         MOVFF   r0x00, POSTDEC1
               02220 ;       .line   215; pic.c      firstLine[13]++;
000C C000 F000 02221         MOVFF   (_firstLine + 13), r0x00
0010 2A00      02222         INCF    r0x00, F
0012 5000      02223         MOVF    r0x00, W
0014 0000      02224         BANKSEL (_firstLine + 13)
0016 6F00      02225         MOVWF   (_firstLine + 13), B
               02226 ;       .line   216; pic.c      if(firstLine[13]==':')// char après '9'
0018 5000      02227         MOVF    r0x00, W
001A 0A3A      02228         XORLW   0x3a
001C E000      02229         BZ      _00158_DS_
001E D000      02230         BRA     _00149_DS_
0020 02231 _00158_DS_:
               02232 ;       .line   218; pic.c      firstLine[13]='0';
0020 0E30      02233         MOVLW   0x30
0022 0000      02234         BANKSEL (_firstLine + 13)
0024 6F00      02235         MOVWF   (_firstLine + 13), B
               02236 ;       .line   219; pic.c      firstLine[12]++;
0026 C000 F000 02237         MOVFF   (_firstLine + 12), r0x00
002A 2A00      02238         INCF    r0x00, F
002C 5000      02239         MOVF    r0x00, W
002E 0000      02240         BANKSEL (_firstLine + 12)
0030 6F00      02241         MOVWF   (_firstLine + 12), B
               02242 ;       .line   221; pic.c      if(firstLine[12]=='6')// 60 sec
0032 5000      02243         MOVF    r0x00, W
0034 0A36      02244         XORLW   0x36
0036 E000      02245         BZ      _00160_DS_
0038 D000      02246         BRA     _00149_DS_
003A 02247 _00160_DS_:
               02248 ;       .line   223; pic.c      firstLine[12]='0';
003A 0E30      02249         MOVLW   0x30
003C 0000      02250         BANKSEL (_firstLine + 12)
003E 6F00      02251         MOVWF   (_firstLine + 12), B
               02252 ;       .line   224; pic.c      firstLine[10]++;
0040 C000 F000 02253         MOVFF   (_firstLine + 10), r0x00
0044 2A00      02254         INCF    r0x00, F
0046 5000      02255         MOVF    r0x00, W
0048 0000      02256         BANKSEL (_firstLine + 10)
004A 6F00      02257         MOVWF   (_firstLine + 10), B
               02258 ;       .line   226; pic.c      if(firstLine[10]==':')
004C 5000      02259         MOVF    r0x00, W
004E 0A3A      02260         XORLW   0x3a
0050 E100      02261         BNZ     _00149_DS_
               02262 ;       .line   228; pic.c      firstLine[10]='0';
0052 0E30      02263         MOVLW   0x30
0054 0000      02264         BANKSEL (_firstLine + 10)
0056 6F00      02265         MOVWF   (_firstLine + 10), B
               02266 ;       .line   229; pic.c      firstLine[9]++;
0058 C000 F000 02267         MOVFF   (_firstLine + 9), r0x00
005C 2A00      02268         INCF    r0x00, F
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
005E 5000      02269         MOVF    r0x00, W
0060 0000      02270         BANKSEL (_firstLine + 9)
0062 6F00      02271         MOVWF   (_firstLine + 9), B
               02272 ;       .line   231; pic.c      if(firstLine[9]=='6')
0064 5000      02273         MOVF    r0x00, W
0066 0A36      02274         XORLW   0x36
0068 E100      02275         BNZ     _00149_DS_
               02276 ;       .line   233; pic.c      firstLine[9]='0';
006A 0E30      02277         MOVLW   0x30
006C 0000      02278         BANKSEL (_firstLine + 9)
006E 6F00      02279         MOVWF   (_firstLine + 9), B
               02280 ;       .line   234; pic.c      firstLine[7]++;
0070 C000 F000 02281         MOVFF   (_firstLine + 7), r0x00
0074 2A00      02282         INCF    r0x00, F
0076 5000      02283         MOVF    r0x00, W
0078 0000      02284         BANKSEL (_firstLine + 7)
007A 6F00      02285         MOVWF   (_firstLine + 7), B
               02286 ;       .line   235; pic.c      if(firstLine[7]=='4')// 24h
007C 5000      02287         MOVF    r0x00, W
007E 0A34      02288         XORLW   0x34
0080 E100      02289         BNZ     _00149_DS_
               02290 ;       .line   237; pic.c      firstLine[7]='0';
0082 0E30      02291         MOVLW   0x30
0084 0000      02292         BANKSEL (_firstLine + 7)
0086 6F00      02293         MOVWF   (_firstLine + 7), B
               02294 ;       .line   238; pic.c      firstLine[6]++;
0088 C000 F000 02295         MOVFF   (_firstLine + 6), r0x00
008C 2A00      02296         INCF    r0x00, F
008E 5000      02297         MOVF    r0x00, W
0090 0000      02298         BANKSEL (_firstLine + 6)
0092 6F00      02299         MOVWF   (_firstLine + 6), B
               02300 ;       .line   239; pic.c      if(firstLine[6]=='3')//24h
0094 5000      02301         MOVF    r0x00, W
0096 0A33      02302         XORLW   0x33
0098 E100      02303         BNZ     _00149_DS_
               02304 ;       .line   241; pic.c      firstLine[6]='0';
009A 0E30      02305         MOVLW   0x30
009C 0000      02306         BANKSEL (_firstLine + 6)
009E 6F00      02307         MOVWF   (_firstLine + 6), B
00A0 02308 _00149_DS_:
00A0 CFE4 F000 02309         MOVFF   PREINC1, r0x00
00A4 CFE4 FFD9 02310         MOVFF   PREINC1, FSR2L
00A8 0012      02311         RETURN  
               02312 
               02313 ; ; Starting pCode block
               02314 S_pic__HighISR  code
0000 02315 _HighISR:
               02316 ;       .line   162; pic.c      HighISR (void) __interrupt (1)
0000 CFE8 FFE5 02317         MOVFF   WREG, POSTDEC1
0004 CFD8 FFE5 02318         MOVFF   STATUS, POSTDEC1
0008 CFE0 FFE5 02319         MOVFF   BSR, POSTDEC1
000C CFF3 FFE5 02320         MOVFF   PRODL, POSTDEC1
0010 CFF4 FFE5 02321         MOVFF   PRODH, POSTDEC1
0014 CFE9 FFE5 02322         MOVFF   FSR0L, POSTDEC1
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0018 CFEA FFE5 02323         MOVFF   FSR0H, POSTDEC1
001C CFFA FFE5 02324         MOVFF   PCLATH, POSTDEC1
0020 CFFB FFE5 02325         MOVFF   PCLATU, POSTDEC1
0024 CFD9 FFE5 02326         MOVFF   FSR2L, POSTDEC1
0028 CFE1 FFD9 02327         MOVFF   FSR1L, FSR2L
002C C000 FFE5 02328         MOVFF   r0x00, POSTDEC1
0030 C000 FFE5 02329         MOVFF   r0x01, POSTDEC1
0034 C000 FFE5 02330         MOVFF   r0x02, POSTDEC1
               02331 ;       .line   164; pic.c      if(INTCON3bits.INT1F)
0038 A000      02332         BTFSS   _INTCON3bits, 0
003A D000      02333         BRA     _00106_DS_
               02334 ;       .line   167; pic.c      actionButton1();
003C EC00 F000 02335         CALL    _actionButton1
               02336 ;       .line   168; pic.c      INTCON3bits.INT1F  = 0;
0040 9000      02337         BCF     _INTCON3bits, 0
0042 02338 _00106_DS_:
               02339 ;       .line   171; pic.c      if(INTCON3bits.INT3F)
0042 A400      02340         BTFSS   _INTCON3bits, 2
0044 D000      02341         BRA     _00108_DS_
               02342 ;       .line   174; pic.c      actionButton2();
0046 EC00 F000 02343         CALL    _actionButton2
               02344 ;       .line   175; pic.c      INTCON3bits.INT3F  = 0;
004A 9400      02345         BCF     _INTCON3bits, 2
004C 02346 _00108_DS_:
               02347 ;       .line   178; pic.c      if(INTCONbits.TMR0IF)
004C A400      02348         BTFSS   _INTCONbits, 2
004E D000      02349         BRA     _00120_DS_
0050 0000      02350         BANKSEL _count
               02351 ;       .line   181; pic.c      count++;
0052 2B00      02352         INCF    _count, F, B
0054 E300      02353         BNC     _50450_DS_
0056 0000      02354         BANKSEL (_count + 1)
0058 2B00      02355         INCF    (_count + 1), F, B
005A 02356 _50450_DS_:
               02357 ;       .line   182; pic.c      if(count>=CLOCK)
005A 0E5B      02358         MOVLW   0x5b
005C 0000      02359         BANKSEL (_count + 1)
005E 5D00      02360         SUBWF   (_count + 1), W, B
0060 E100      02361         BNZ     _00129_DS_
0062 0E01      02362         MOVLW   0x01
0064 0000      02363         BANKSEL _count
0066 5D00      02364         SUBWF   _count, W, B
0068 02365 _00129_DS_:
0068 A0D8      02366         BTFSS   STATUS, 0
006A D000      02367         BRA     _00117_DS_
               02368 ;       .line   184; pic.c      count=count-CLOCK;
006C 0EFF      02369         MOVLW   0xff
006E 0000      02370         BANKSEL _count
0070 2700      02371         ADDWF   _count, F, B
0072 0EA4      02372         MOVLW   0xa4
0074 0000      02373         BANKSEL (_count + 1)
0076 2300      02374         ADDWFC  (_count + 1), F, B
0078 0000      02375         BANKSEL _currentMode
               02376 ;       .line   185; pic.c      if(currentMode==ACCUEIL)
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
007A 5100      02377         MOVF    _currentMode, W, B
007C E100      02378         BNZ     _00110_DS_
               02379 ;       .line   187; pic.c      DisplayString(FIRST_LINE,firstLine);
007E 0E00      02380         MOVLW   HIGH(_firstLine)
0080 6E00      02381         MOVWF   r0x01
0082 0E00      02382         MOVLW   LOW(_firstLine)
0084 6E00      02383         MOVWF   r0x00
0086 0E80      02384         MOVLW   0x80
0088 6E00      02385         MOVWF   r0x02
008A 5000      02386         MOVF    r0x02, W
008C 6EE5      02387         MOVWF   POSTDEC1
008E 5000      02388         MOVF    r0x01, W
0090 6EE5      02389         MOVWF   POSTDEC1
0092 5000      02390         MOVF    r0x00, W
0094 6EE5      02391         MOVWF   POSTDEC1
0096 0E00      02392         MOVLW   0x00
0098 6EE5      02393         MOVWF   POSTDEC1
009A EC00 F000 02394         CALL    _DisplayString
009E 0E04      02395         MOVLW   0x04
00A0 26E1      02396         ADDWF   FSR1L, F
               02397 ;       .line   188; pic.c      DisplayString(SECOND_LINE,secondLine);
00A2 0E00      02398         MOVLW   HIGH(_secondLine)
00A4 6E00      02399         MOVWF   r0x01
00A6 0E00      02400         MOVLW   LOW(_secondLine)
00A8 6E00      02401         MOVWF   r0x00
00AA 0E80      02402         MOVLW   0x80
00AC 6E00      02403         MOVWF   r0x02
00AE 5000      02404         MOVF    r0x02, W
00B0 6EE5      02405         MOVWF   POSTDEC1
00B2 5000      02406         MOVF    r0x01, W
00B4 6EE5      02407         MOVWF   POSTDEC1
00B6 5000      02408         MOVF    r0x00, W
00B8 6EE5      02409         MOVWF   POSTDEC1
00BA 0E10      02410         MOVLW   0x10
00BC 6EE5      02411         MOVWF   POSTDEC1
00BE EC00 F000 02412         CALL    _DisplayString
00C2 0E04      02413         MOVLW   0x04
00C4 26E1      02414         ADDWF   FSR1L, F
00C6 D000      02415         BRA     _00111_DS_
00C8 02416 _00110_DS_:
               02417 ;       .line   192; pic.c      blink();
00C8 EC00 F000 02418         CALL    _blink
00CC 02419 _00111_DS_:
00CC 0000      02420         BANKSEL _isAlarm
               02421 ;       .line   194; pic.c      if(isAlarm==1)
00CE 5100      02422         MOVF    _isAlarm, W, B
00D0 0A01      02423         XORLW   0x01
00D2 E100      02424         BNZ     _00130_DS_
00D4 0000      02425         BANKSEL (_isAlarm + 1)
00D6 5100      02426         MOVF    (_isAlarm + 1), W, B
00D8 E000      02427         BZ      _00131_DS_
00DA 02428 _00130_DS_:
00DA D000      02429         BRA     _00113_DS_
00DC 02430 _00131_DS_:
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               02431 ;       .line   197; pic.c      checkAlarm();
00DC EC00 F000 02432         CALL    _checkAlarm
00E0 02433 _00113_DS_:
00E0 0000      02434         BANKSEL (_ringtone + 1)
               02435 ;       .line   199; pic.c      if(ringtone>0)
00E2 5100      02436         MOVF    (_ringtone + 1), W, B
00E4 0F80      02437         ADDLW   0x80
00E6 0F80      02438         ADDLW   0x80
00E8 E100      02439         BNZ     _00132_DS_
00EA 0E01      02440         MOVLW   0x01
00EC 0000      02441         BANKSEL _ringtone
00EE 5D00      02442         SUBWF   _ringtone, W, B
00F0 02443 _00132_DS_:
00F0 E300      02444         BNC     _00115_DS_
               02445 ;       .line   202; pic.c      currentMode=RINGTONE;
00F2 0E07      02446         MOVLW   0x07
00F4 0000      02447         BANKSEL _currentMode
00F6 6F00      02448         MOVWF   _currentMode, B
               02449 ;       .line   203; pic.c      ringtone--;
00F8 0EFF      02450         MOVLW   0xff
00FA 0000      02451         BANKSEL _ringtone
00FC 2700      02452         ADDWF   _ringtone, F, B
00FE E200      02453         BC      _60451_DS_
0100 0000      02454         BANKSEL (_ringtone + 1)
0102 0700      02455         DECF    (_ringtone + 1), F, B
0104 02456 _60451_DS_:
               02457 ;       .line   204; pic.c      LED2_IO ^= 1;
0104 6A00      02458         CLRF    r0x00
0106 B400      02459         BTFSC   _LATJbits, 2
0108 2A00      02460         INCF    r0x00, F
010A 0E01      02461         MOVLW   0x01
010C 1A00      02462         XORWF   r0x00, F
010E 5000      02463         MOVF    r0x00, W
0110 0B01      02464         ANDLW   0x01
0112 44E8      02465         RLNCF   WREG, W
0114 44E8      02466         RLNCF   WREG, W
0116 6EF4      02467         MOVWF   PRODH
0118 5000      02468         MOVF    _LATJbits, W
011A 0BFB      02469         ANDLW   0xfb
011C 10F4      02470         IORWF   PRODH, W
011E 6E00      02471         MOVWF   _LATJbits
0120 02472 _00115_DS_:
               02473 ;       .line   206; pic.c      increment();
0120 EC00 F000 02474         CALL    _increment
0124 02475 _00117_DS_:
               02476 ;       .line   208; pic.c      INTCONbits.TMR0IF = 0;
0124 9400      02477         BCF     _INTCONbits, 2
0126 02478 _00120_DS_:
0126 CFE4 F000 02479         MOVFF   PREINC1, r0x02
012A CFE4 F000 02480         MOVFF   PREINC1, r0x01
012E CFE4 F000 02481         MOVFF   PREINC1, r0x00
0132 CFE4 FFD9 02482         MOVFF   PREINC1, FSR2L
0136 CFE4 FFFB 02483         MOVFF   PREINC1, PCLATU
013A CFE4 FFFA 02484         MOVFF   PREINC1, PCLATH
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
013E CFE4 FFEA 02485         MOVFF   PREINC1, FSR0H
0142 CFE4 FFE9 02486         MOVFF   PREINC1, FSR0L
0146 CFE4 FFF4 02487         MOVFF   PREINC1, PRODH
014A CFE4 FFF3 02488         MOVFF   PREINC1, PRODL
014E CFE4 FFE0 02489         MOVFF   PREINC1, BSR
0152 CFE4 FFD8 02490         MOVFF   PREINC1, STATUS
0156 CFE4 FFE8 02491         MOVFF   PREINC1, WREG
015A 0010      02492         RETFIE  
               02493 
               02494 ; ; Starting pCode block
015C 02495 __str_0:
015C 6C41 7261 02496         DB      0x41, 0x6c, 0x61, 0x72, 0x6d, 0x20, 0x69, 0x73, 0x20, 0x4f, 0x4e, 0x00
     206D 7369 
     4F20 004E 
               02497 ; ; Starting pCode block
0168 02498 __str_1:
0168 6C41 7261 02499         DB      0x41, 0x6c, 0x61, 0x72, 0x6d, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x66, 0x66
     206D 7369 
     6F20 6666 
0174 0000      02500         DB      0x00
               02501 ; ; Starting pCode block
0176 02502 __str_2:
0176 0000      02503         DB      0x00
               02504 ; ; Starting pCode block
0178 02505 __str_3:
0178 6F47 646F 02506         DB      0x47, 0x6f, 0x6f, 0x64, 0x20, 0x6d, 0x6f, 0x72, 0x6e, 0x69, 0x6e, 0x67
     6D20 726F 
     696E 676E 
0184 4C20 756F 02507         DB      0x20, 0x4c, 0x6f, 0x75, 0x76, 0x61, 0x69, 0x6e, 0x2d, 0x4c, 0x61, 0x2d
     6176 6E69 
     4C2D 2D61 
0190 654E 7675 02508         DB      0x4e, 0x65, 0x75, 0x76, 0x65, 0x00
     0065      
               02509 
               02510 
               02511 ; Statistics:
               02512 ; code size:     3842 (0x0f02) bytes ( 2.93%)
               02513 ;                1921 (0x0781) words
               02514 ; udata size:       6 (0x0006) bytes ( 0.16%)
               02515 ; access size:     22 (0x0016) bytes
               02516 
               02517 
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

BSR                               00000FE0
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
INDF0                             00000FEF
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
POSTINC0                          00000FEE
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
WREG                              00000FE8
_00106_DS_                        00000042
_00108_DS_                        0000004C
_00110_DS_                        000000C8
_00111_DS_                        000000CC
_00113_DS_                        000000E0
_00115_DS_                        00000120
_00117_DS_                        00000124
_00120_DS_                        00000126
_00129_DS_                        00000068
_00130_DS_                        000000DA
_00131_DS_                        000000DC
_00132_DS_                        000000F0
_00149_DS_                        000000A0
_00158_DS_                        00000020
_00160_DS_                        0000003A
_00180_DS_                        0000004A
_00189_DS_                        00000012
_00191_DS_                        0000001C
_00193_DS_                        00000026
_00195_DS_                        00000030
_00197_DS_                        00000038
_00204_DS_                        000000A4
_00205_DS_                        000000B0
_00209_DS_                        000000CE
_00212_DS_                        000000C6
_00214_DS_                        000000F6
_00217_DS_                        000000DC
_00219_DS_                        00000104
_00240_DS_                        0000006A
_00241_DS_                        00000070
_00242_DS_                        00000078
_00243_DS_                        00000080
_00244_DS_                        00000088
_00245_DS_                        0000008E
_00246_DS_                        00000094
_00249_DS_                        000000A2
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_00253_DS_                        0000004A
_00258_DS_                        0000006A
_00259_DS_                        00000072
_00260_DS_                        00000078
_00261_DS_                        00000080
_00262_DS_                        00000088
_00263_DS_                        0000008E
_00264_DS_                        00000094
_00267_DS_                        000000A2
_00271_DS_                        0000004A
_00277_DS_                        0000002E
_00280_DS_                        00000060
_00285_DS_                        0000003A
_00287_DS_                        0000006A
_00294_DS_                        00000010
_00295_DS_                        0000001E
_00296_DS_                        00000020
_00298_DS_                        00000042
_00299_DS_                        00000050
_00300_DS_                        00000052
_00305_DS_                        000000A2
_00306_DS_                        000000AE
_00311_DS_                        000000CC
_00314_DS_                        000000C4
_00315_DS_                        000000D8
_00335_DS_                        00000098
_00337_DS_                        000000C8
_00345_DS_                        000002DE
_00348_DS_                        000002D0
_00351_DS_                        0000022E
_00354_DS_                        0000018C
_00357_DS_                        0000011C
_00358_DS_                        000002FE
_00360_DS_                        0000030C
_00362_DS_                        0000035E
_00376_DS_                        00000196
_00378_DS_                        00000238
_00393_DS_                        000000FC
_00394_DS_                        0000005C
_00397_DS_                        000000D4
_00404_DS_                        0000009A
_00405_DS_                        000000E4
_00413_DS_                        00000082
_00422_DS_                        000000CC
_00426_DS_                        00000134
_00429_DS_                        0000015E
_00433_DS_                        00000188
_00440_DS_                        00000152
_00441_DS_                        00000114
_10446_DS_                        0000030A
_20447_DS_                        0000035E
_30448_DS_                        00000038
_40449_DS_                        0000006A
_50450_DS_                        0000005A
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_60451_DS_                        00000104
_ADCON0                           00000000
_ADCON0bits                       00000000
_ADCON1                           00000000
_ADCON1bits                       00000000
_ADCON2                           00000000
_ADCON2bits                       00000000
_ADRES                            00000000
_ADRESH                           00000000
_ADRESL                           00000000
_BAUDCON                          00000000
_BAUDCON1                         00000000
_BAUDCON1bits                     00000000
_BAUDCON2                         00000000
_BAUDCON2bits                     00000000
_BAUDCONbits                      00000000
_BAUDCTL                          00000000
_BAUDCTL1                         00000000
_BAUDCTL1bits                     00000000
_BAUDCTL2                         00000000
_BAUDCTL2bits                     00000000
_BAUDCTLbits                      00000000
_BSR                              00000000
_CCP1CON                          00000000
_CCP1CONbits                      00000000
_CCP2CON                          00000000
_CCP2CONbits                      00000000
_CCP3CON                          00000000
_CCP3CONbits                      00000000
_CCP4CON                          00000000
_CCP4CONbits                      00000000
_CCP5CON                          00000000
_CCP5CONbits                      00000000
_CCPR1                            00000000
_CCPR1H                           00000000
_CCPR1L                           00000000
_CCPR2                            00000000
_CCPR2H                           00000000
_CCPR2L                           00000000
_CCPR3                            00000000
_CCPR3H                           00000000
_CCPR3L                           00000000
_CCPR4                            00000000
_CCPR4H                           00000000
_CCPR4L                           00000000
_CCPR5                            00000000
_CCPR5H                           00000000
_CCPR5L                           00000000
_CMCON                            00000000
_CMCONbits                        00000000
_CVRCON                           00000000
_CVRCONbits                       00000000
_DDRA                             00000000
_DDRAbits                         00000000
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_DDRB                             00000000
_DDRBbits                         00000000
_DDRC                             00000000
_DDRCbits                         00000000
_DDRD                             00000000
_DDRDbits                         00000000
_DDRE                             00000000
_DDREbits                         00000000
_DDRF                             00000000
_DDRFbits                         00000000
_DDRG                             00000000
_DDRGbits                         00000000
_DDRH                             00000000
_DDRHbits                         00000000
_DDRJ                             00000000
_DDRJbits                         00000000
_DisplayString                    00000000
_DisplayWORD                      00000000
_DisplayWORD_WDigit_1_1           00000000
_EBSTCON                          00000000
_EBSTCONbits                      00000000
_EBSTCS                           00000000
_EBSTCSH                          00000000
_EBSTCSL                          00000000
_EBSTSD                           00000000
_ECCP1AS                          00000000
_ECCP1ASbits                      00000000
_ECCP1CON                         00000000
_ECCP1CONbits                     00000000
_ECCP1DEL                         00000000
_ECCP1DELbits                     00000000
_ECCP2AS                          00000000
_ECCP2ASbits                      00000000
_ECCP2CON                         00000000
_ECCP2CONbits                     00000000
_ECCP2DEL                         00000000
_ECCP2DELbits                     00000000
_ECCP3AS                          00000000
_ECCP3ASbits                      00000000
_ECCP3CON                         00000000
_ECCP3CONbits                     00000000
_ECCP3DEL                         00000000
_ECCP3DELbits                     00000000
_ECON1                            00000000
_ECON1bits                        00000000
_ECON2                            00000000
_ECON2bits                        00000000
_EDATA                            00000000
_EDATAbits                        00000000
_EDMACS                           00000000
_EDMACSH                          00000000
_EDMACSL                          00000000
_EDMADST                          00000000
_EDMADSTH                         00000000
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_EDMADSTL                         00000000
_EDMAND                           00000000
_EDMANDH                          00000000
_EDMANDL                          00000000
_EDMAST                           00000000
_EDMASTH                          00000000
_EDMASTL                          00000000
_EECON1                           00000000
_EECON1bits                       00000000
_EECON2                           00000000
_EFLOCON                          00000000
_EFLOCONbits                      00000000
_EHT0                             00000000
_EHT1                             00000000
_EHT2                             00000000
_EHT3                             00000000
_EHT4                             00000000
_EHT5                             00000000
_EHT6                             00000000
_EHT7                             00000000
_EIE                              00000000
_EIEbits                          00000000
_EIR                              00000000
_EIRbits                          00000000
_EPAUS                            00000000
_EPAUSH                           00000000
_EPAUSL                           00000000
_EPKTCNT                          00000000
_EPMCS                            00000000
_EPMCSH                           00000000
_EPMCSL                           00000000
_EPMM0                            00000000
_EPMM1                            00000000
_EPMM2                            00000000
_EPMM3                            00000000
_EPMM4                            00000000
_EPMM5                            00000000
_EPMM6                            00000000
_EPMM7                            00000000
_EPMO                             00000000
_EPMOH                            00000000
_EPMOL                            00000000
_ERDPT                            00000000
_ERDPTH                           00000000
_ERDPTL                           00000000
_ERXFCON                          00000000
_ERXFCONbits                      00000000
_ERXND                            00000000
_ERXNDH                           00000000
_ERXNDL                           00000000
_ERXRDPT                          00000000
_ERXRDPTH                         00000000
_ERXRDPTL                         00000000
_ERXST                            00000000
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_ERXSTH                           00000000
_ERXSTL                           00000000
_ERXWRPT                          00000000
_ERXWRPTH                         00000000
_ERXWRPTL                         00000000
_ESTAT                            00000000
_ESTATbits                        00000000
_ETXND                            00000000
_ETXNDH                           00000000
_ETXNDL                           00000000
_ETXST                            00000000
_ETXSTH                           00000000
_ETXSTL                           00000000
_EWOLIE                           00000000
_EWOLIEbits                       00000000
_EWOLIR                           00000000
_EWOLIRbits                       00000000
_EWRPT                            00000000
_EWRPTH                           00000000
_EWRPTL                           00000000
_FSR0H                            00000000
_FSR0L                            00000000
_FSR1H                            00000000
_FSR1L                            00000000
_FSR2H                            00000000
_FSR2L                            00000000
_HighISR                          00000000
_INDF0                            00000000
_INDF1                            00000000
_INDF2                            00000000
_INTCON                           00000000
_INTCON2                          00000000
_INTCON2bits                      00000000
_INTCON3                          00000000
_INTCON3bits                      00000000
_INTCONbits                       00000000
_IPR1                             00000000
_IPR1bits                         00000000
_IPR2                             00000000
_IPR2bits                         00000000
_IPR3                             00000000
_IPR3bits                         00000000
_LATA                             00000000
_LATAbits                         00000000
_LATB                             00000000
_LATBbits                         00000000
_LATC                             00000000
_LATCbits                         00000000
_LATD                             00000000
_LATDbits                         00000000
_LATE                             00000000
_LATEbits                         00000000
_LATF                             00000000
_LATFbits                         00000000
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_LATG                             00000000
_LATGbits                         00000000
_LATH                             00000000
_LATHbits                         00000000
_LATJ                             00000000
_LATJbits                         00000000
_LCDInit                          00000000
_LCDText                          00000000
_LCDUpdate                        00000000
_MAADR1                           00000000
_MAADR2                           00000000
_MAADR3                           00000000
_MAADR4                           00000000
_MAADR5                           00000000
_MAADR6                           00000000
_MABBIPG                          00000000
_MACLCON1                         00000000
_MACLCON1bits                     00000000
_MACLCON2                         00000000
_MACLCON2bits                     00000000
_MACON1                           00000000
_MACON1bits                       00000000
_MACON2                           00000000
_MACON2bits                       00000000
_MACON3                           00000000
_MACON3bits                       00000000
_MACON4                           00000000
_MACON4bits                       00000000
_MAIPG                            00000000
_MAIPGH                           00000000
_MAIPGL                           00000000
_MAMXFL                           00000000
_MAMXFLH                          00000000
_MAMXFLL                          00000000
_MEMCON                           00000000
_MEMCONbits                       00000000
_MICMD                            00000000
_MICMDbits                        00000000
_MICON                            00000000
_MICONbits                        00000000
_MIRD                             00000000
_MIRDH                            00000000
_MIRDL                            00000000
_MIREGADR                         00000000
_MISTAT                           00000000
_MISTATbits                       00000000
_MIWR                             00000000
_MIWRH                            00000000
_MIWRL                            00000000
_OSCCON                           00000000
_OSCCONbits                       00000000
_OSCTUNE                          00000000
_OSCTUNEbits                      00000000
_PC                               00000000
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_PCL                              00000000
_PCLATH                           00000000
_PCLATU                           00000000
_PIE1                             00000000
_PIE1bits                         00000000
_PIE2                             00000000
_PIE2bits                         00000000
_PIE3                             00000000
_PIE3bits                         00000000
_PIR1                             00000000
_PIR1bits                         00000000
_PIR2                             00000000
_PIR2bits                         00000000
_PIR3                             00000000
_PIR3bits                         00000000
_PLUSW0                           00000000
_PLUSW1                           00000000
_PLUSW2                           00000000
_PORTA                            00000000
_PORTAbits                        00000000
_PORTB                            00000000
_PORTBbits                        00000000
_PORTC                            00000000
_PORTCbits                        00000000
_PORTD                            00000000
_PORTDbits                        00000000
_PORTE                            00000000
_PORTEbits                        00000000
_PORTF                            00000000
_PORTFbits                        00000000
_PORTG                            00000000
_PORTGbits                        00000000
_PORTH                            00000000
_PORTHbits                        00000000
_PORTJ                            00000000
_PORTJbits                        00000000
_POSTDEC0                         00000000
_POSTDEC1                         00000000
_POSTDEC2                         00000000
_POSTINC0                         00000000
_POSTINC1                         00000000
_POSTINC2                         00000000
_PR2                              00000000
_PR4                              00000000
_PREINC0                          00000000
_PREINC1                          00000000
_PREINC2                          00000000
_PROD                             00000000
_PRODH                            00000000
_PRODL                            00000000
_PSPCON                           00000000
_PSPCONbits                       00000000
_RCON                             00000000
_RCONbits                         00000000
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_RCREG                            00000000
_RCREG1                           00000000
_RCREG2                           00000000
_RCSTA                            00000000
_RCSTA1                           00000000
_RCSTA1bits                       00000000
_RCSTA2                           00000000
_RCSTA2bits                       00000000
_RCSTAbits                        00000000
_SPBRG                            00000000
_SPBRG1                           00000000
_SPBRG2                           00000000
_SPBRGH                           00000000
_SPBRGH1                          00000000
_SPBRGH2                          00000000
_SSP1ADD                          00000000
_SSP1BUF                          00000000
_SSP1CON1                         00000000
_SSP1CON1bits                     00000000
_SSP1CON2                         00000000
_SSP1CON2bits                     00000000
_SSP1STAT                         00000000
_SSP1STATbits                     00000000
_SSP2ADD                          00000000
_SSP2BUF                          00000000
_SSP2CON1                         00000000
_SSP2CON1bits                     00000000
_SSP2CON2                         00000000
_SSP2CON2bits                     00000000
_SSP2STAT                         00000000
_SSP2STATbits                     00000000
_SSPADD                           00000000
_SSPBUF                           00000000
_SSPCON1                          00000000
_SSPCON1bits                      00000000
_SSPCON2                          00000000
_SSPCON2bits                      00000000
_SSPSTAT                          00000000
_SSPSTATbits                      00000000
_STATUS                           00000000
_STATUSbits                       00000000
_STKPTR                           00000000
_STKPTRbits                       00000000
_T0CON                            00000000
_T0CONbits                        00000000
_T1CON                            00000000
_T1CONbits                        00000000
_T2CON                            00000000
_T2CONbits                        00000000
_T3CON                            00000000
_T3CONbits                        00000000
_T4CON                            00000000
_T4CONbits                        00000000
_TABLAT                           00000000
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_TBLPTR                           00000000
_TBLPTRH                          00000000
_TBLPTRL                          00000000
_TBLPTRU                          00000000
_TMR0H                            00000000
_TMR0L                            00000000
_TMR1H                            00000000
_TMR1L                            00000000
_TMR2                             00000000
_TMR3H                            00000000
_TMR3L                            00000000
_TMR4                             00000000
_TOS                              00000000
_TOSH                             00000000
_TOSL                             00000000
_TOSU                             00000000
_TRISA                            00000000
_TRISAbits                        00000000
_TRISB                            00000000
_TRISBbits                        00000000
_TRISC                            00000000
_TRISCbits                        00000000
_TRISD                            00000000
_TRISDbits                        00000000
_TRISE                            00000000
_TRISEbits                        00000000
_TRISF                            00000000
_TRISFbits                        00000000
_TRISG                            00000000
_TRISGbits                        00000000
_TRISH                            00000000
_TRISHbits                        00000000
_TRISJ                            00000000
_TRISJbits                        00000000
_TXREG                            00000000
_TXREG1                           00000000
_TXREG2                           00000000
_TXSTA                            00000000
_TXSTA1                           00000000
_TXSTA1bits                       00000000
_TXSTA2                           00000000
_TXSTA2bits                       00000000
_TXSTAbits                        00000000
_WDTCON                           00000000
_WDTCONbits                       00000000
_WREG                             00000000
__18F97J60                        00000001
__gptrget1                        00000000
__gptrput1                        00000000
__mulint                          00000000
__str_0                           0000015C
__str_1                           00000168
__str_2                           00000176
__str_3                           00000178
gpasm-0.13.7 beta               Objects/pic.asm10-25-2013  17:17:44         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_actionButton1                    00000000
_actionButton2                    00000000
_bin                              00000038
_blink                            00000000
_changeTime                       00000000
_checkAlarm                       00000000
_count                            0000003F
_currentMode                      0000003E
_firstLine                        00000000
_firstTab                         0000001E
_increment                        00000000
_info_A                           00000000
_init_board                       00000000
_isAlarm                          0000003A
_main                             00000000
_move                             00000000
_posA                             00000036
_posC                             00000034
_ringtone                         0000003C
_secondLine                       0000000F
_secondTab                        0000002A
_setAlarm                         00000000
_stdin                            00000000
_stdout                           00000000
_strlcpy                          00000000
_strlen                           00000000
_temp1                            00000041
_temp2                            00000051
_tempA                            00000061
_ultoa                            00000000
ivec_0x1_HighISR                  00000008
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
r0x09                             00000009
r0x0a                             0000000A
r0x0b                             0000000B
r0x0c                             0000000C
r0x0d                             0000000D
r0x0e                             0000000E
r0x0f                             0000000F
r0x10                             00000010
r0x11                             00000011
r0x12                             00000012
r0x13                             00000013
r0x14                             00000014
r0x15                             00000015


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed


gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;--------------------------------------------------------
               00002 ; File Created by SDCC : free open source ANSI-C Compiler
               00003 ; Version 2.9.4 #5595 (Mar 20 2013) (Mac OS X ppc)
               00004 ; This file was generated Thu Mar 28 17:24:31 2013
               00005 ;--------------------------------------------------------
               00006 ; PIC16 port for the Microchip 16-bit core micros
               00007 ;--------------------------------------------------------
               00008         list    p=18f97j60
               00009 
               00010         radix dec
               00011 
               00012 ;--------------------------------------------------------
               00013 ; public variables in this module
               00014 ;--------------------------------------------------------
               00015         global _increment
               00016         global _checkAlarm
               00017         global _changeTime
               00018         global _setAlarm
               00019         global _move
               00020         global _actionButton1
               00021         global _actionButton2
               00022         global _blink
               00023         global _main
               00024         global _init_board
               00025         global _DisplayWORD
               00026         global _DisplayString
               00027         global _strlcpy
               00028         global _textFirstLine
               00029         global _textSecondLine
               00030         global _tabFirst
               00031         global _tabSecond
               00032         global _posC
               00033         global _posA
               00034         global _bin
               00035         global _isAlarm
               00036         global _ringtone
               00037         global _currentMode
               00038         global _count
               00039         global _temp1
               00040         global _temp2
               00041         global _HighISR
               00042 
               00043 ;--------------------------------------------------------
               00044 ; extern variables in this module
               00045 ;--------------------------------------------------------
               00046         extern __gptrget1
               00047         extern __gptrput1
               00048         extern _EBSTCONbits
               00049         extern _MISTATbits
               00050         extern _EFLOCONbits
               00051         extern _MACON1bits
               00052         extern _MACON2bits
               00053         extern _MACON3bits
               00054         extern _MACON4bits
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00055         extern _MACLCON1bits
               00056         extern _MACLCON2bits
               00057         extern _MICONbits
               00058         extern _MICMDbits
               00059         extern _EWOLIEbits
               00060         extern _EWOLIRbits
               00061         extern _ERXFCONbits
               00062         extern _EIEbits
               00063         extern _ESTATbits
               00064         extern _ECON2bits
               00065         extern _EIRbits
               00066         extern _EDATAbits
               00067         extern _SSP2CON2bits
               00068         extern _SSP2CON1bits
               00069         extern _SSP2STATbits
               00070         extern _ECCP2DELbits
               00071         extern _ECCP2ASbits
               00072         extern _ECCP3DELbits
               00073         extern _ECCP3ASbits
               00074         extern _RCSTA2bits
               00075         extern _TXSTA2bits
               00076         extern _CCP5CONbits
               00077         extern _CCP4CONbits
               00078         extern _T4CONbits
               00079         extern _ECCP1DELbits
               00080         extern _BAUDCON2bits
               00081         extern _BAUDCTL2bits
               00082         extern _BAUDCONbits
               00083         extern _BAUDCON1bits
               00084         extern _BAUDCTLbits
               00085         extern _BAUDCTL1bits
               00086         extern _PORTAbits
               00087         extern _PORTBbits
               00088         extern _PORTCbits
               00089         extern _PORTDbits
               00090         extern _PORTEbits
               00091         extern _PORTFbits
               00092         extern _PORTGbits
               00093         extern _PORTHbits
               00094         extern _PORTJbits
               00095         extern _LATAbits
               00096         extern _LATBbits
               00097         extern _LATCbits
               00098         extern _LATDbits
               00099         extern _LATEbits
               00100         extern _LATFbits
               00101         extern _LATGbits
               00102         extern _LATHbits
               00103         extern _LATJbits
               00104         extern _DDRAbits
               00105         extern _TRISAbits
               00106         extern _DDRBbits
               00107         extern _TRISBbits
               00108         extern _DDRCbits
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00109         extern _TRISCbits
               00110         extern _DDRDbits
               00111         extern _TRISDbits
               00112         extern _DDREbits
               00113         extern _TRISEbits
               00114         extern _DDRFbits
               00115         extern _TRISFbits
               00116         extern _DDRGbits
               00117         extern _TRISGbits
               00118         extern _DDRHbits
               00119         extern _TRISHbits
               00120         extern _DDRJbits
               00121         extern _TRISJbits
               00122         extern _OSCTUNEbits
               00123         extern _MEMCONbits
               00124         extern _PIE1bits
               00125         extern _PIR1bits
               00126         extern _IPR1bits
               00127         extern _PIE2bits
               00128         extern _PIR2bits
               00129         extern _IPR2bits
               00130         extern _PIE3bits
               00131         extern _PIR3bits
               00132         extern _IPR3bits
               00133         extern _EECON1bits
               00134         extern _RCSTAbits
               00135         extern _RCSTA1bits
               00136         extern _TXSTAbits
               00137         extern _TXSTA1bits
               00138         extern _PSPCONbits
               00139         extern _T3CONbits
               00140         extern _CMCONbits
               00141         extern _CVRCONbits
               00142         extern _ECCP1ASbits
               00143         extern _CCP3CONbits
               00144         extern _ECCP3CONbits
               00145         extern _CCP2CONbits
               00146         extern _ECCP2CONbits
               00147         extern _CCP1CONbits
               00148         extern _ECCP1CONbits
               00149         extern _ADCON2bits
               00150         extern _ADCON1bits
               00151         extern _ADCON0bits
               00152         extern _SSP1CON2bits
               00153         extern _SSPCON2bits
               00154         extern _SSP1CON1bits
               00155         extern _SSPCON1bits
               00156         extern _SSP1STATbits
               00157         extern _SSPSTATbits
               00158         extern _T2CONbits
               00159         extern _T1CONbits
               00160         extern _RCONbits
               00161         extern _WDTCONbits
               00162         extern _ECON1bits
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00163         extern _OSCCONbits
               00164         extern _T0CONbits
               00165         extern _STATUSbits
               00166         extern _INTCON3bits
               00167         extern _INTCON2bits
               00168         extern _INTCONbits
               00169         extern _STKPTRbits
               00170         extern _stdin
               00171         extern _stdout
               00172         extern _LCDText
               00173         extern _MAADR5
               00174         extern _MAADR6
               00175         extern _MAADR3
               00176         extern _MAADR4
               00177         extern _MAADR1
               00178         extern _MAADR2
               00179         extern _EBSTSD
               00180         extern _EBSTCON
               00181         extern _EBSTCS
               00182         extern _EBSTCSL
               00183         extern _EBSTCSH
               00184         extern _MISTAT
               00185         extern _EFLOCON
               00186         extern _EPAUS
               00187         extern _EPAUSL
               00188         extern _EPAUSH
               00189         extern _MACON1
               00190         extern _MACON2
               00191         extern _MACON3
               00192         extern _MACON4
               00193         extern _MABBIPG
               00194         extern _MAIPG
               00195         extern _MAIPGL
               00196         extern _MAIPGH
               00197         extern _MACLCON1
               00198         extern _MACLCON2
               00199         extern _MAMXFL
               00200         extern _MAMXFLL
               00201         extern _MAMXFLH
               00202         extern _MICON
               00203         extern _MICMD
               00204         extern _MIREGADR
               00205         extern _MIWR
               00206         extern _MIWRL
               00207         extern _MIWRH
               00208         extern _MIRD
               00209         extern _MIRDL
               00210         extern _MIRDH
               00211         extern _EHT0
               00212         extern _EHT1
               00213         extern _EHT2
               00214         extern _EHT3
               00215         extern _EHT4
               00216         extern _EHT5
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00217         extern _EHT6
               00218         extern _EHT7
               00219         extern _EPMM0
               00220         extern _EPMM1
               00221         extern _EPMM2
               00222         extern _EPMM3
               00223         extern _EPMM4
               00224         extern _EPMM5
               00225         extern _EPMM6
               00226         extern _EPMM7
               00227         extern _EPMCS
               00228         extern _EPMCSL
               00229         extern _EPMCSH
               00230         extern _EPMO
               00231         extern _EPMOL
               00232         extern _EPMOH
               00233         extern _EWOLIE
               00234         extern _EWOLIR
               00235         extern _ERXFCON
               00236         extern _EPKTCNT
               00237         extern _EWRPT
               00238         extern _EWRPTL
               00239         extern _EWRPTH
               00240         extern _ETXST
               00241         extern _ETXSTL
               00242         extern _ETXSTH
               00243         extern _ETXND
               00244         extern _ETXNDL
               00245         extern _ETXNDH
               00246         extern _ERXST
               00247         extern _ERXSTL
               00248         extern _ERXSTH
               00249         extern _ERXND
               00250         extern _ERXNDL
               00251         extern _ERXNDH
               00252         extern _ERXRDPT
               00253         extern _ERXRDPTL
               00254         extern _ERXRDPTH
               00255         extern _ERXWRPT
               00256         extern _ERXWRPTL
               00257         extern _ERXWRPTH
               00258         extern _EDMAST
               00259         extern _EDMASTL
               00260         extern _EDMASTH
               00261         extern _EDMAND
               00262         extern _EDMANDL
               00263         extern _EDMANDH
               00264         extern _EDMADST
               00265         extern _EDMADSTL
               00266         extern _EDMADSTH
               00267         extern _EDMACS
               00268         extern _EDMACSL
               00269         extern _EDMACSH
               00270         extern _EIE
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00271         extern _ESTAT
               00272         extern _ECON2
               00273         extern _EIR
               00274         extern _EDATA
               00275         extern _SSP2CON2
               00276         extern _SSP2CON1
               00277         extern _SSP2STAT
               00278         extern _SSP2ADD
               00279         extern _SSP2BUF
               00280         extern _ECCP2DEL
               00281         extern _ECCP2AS
               00282         extern _ECCP3DEL
               00283         extern _ECCP3AS
               00284         extern _RCSTA2
               00285         extern _TXSTA2
               00286         extern _TXREG2
               00287         extern _RCREG2
               00288         extern _SPBRG2
               00289         extern _CCP5CON
               00290         extern _CCPR5
               00291         extern _CCPR5L
               00292         extern _CCPR5H
               00293         extern _CCP4CON
               00294         extern _CCPR4
               00295         extern _CCPR4L
               00296         extern _CCPR4H
               00297         extern _T4CON
               00298         extern _PR4
               00299         extern _TMR4
               00300         extern _ECCP1DEL
               00301         extern _ERDPT
               00302         extern _ERDPTL
               00303         extern _ERDPTH
               00304         extern _BAUDCON2
               00305         extern _BAUDCTL2
               00306         extern _SPBRGH2
               00307         extern _BAUDCON
               00308         extern _BAUDCON1
               00309         extern _BAUDCTL
               00310         extern _BAUDCTL1
               00311         extern _SPBRGH
               00312         extern _SPBRGH1
               00313         extern _PORTA
               00314         extern _PORTB
               00315         extern _PORTC
               00316         extern _PORTD
               00317         extern _PORTE
               00318         extern _PORTF
               00319         extern _PORTG
               00320         extern _PORTH
               00321         extern _PORTJ
               00322         extern _LATA
               00323         extern _LATB
               00324         extern _LATC
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00325         extern _LATD
               00326         extern _LATE
               00327         extern _LATF
               00328         extern _LATG
               00329         extern _LATH
               00330         extern _LATJ
               00331         extern _DDRA
               00332         extern _TRISA
               00333         extern _DDRB
               00334         extern _TRISB
               00335         extern _DDRC
               00336         extern _TRISC
               00337         extern _DDRD
               00338         extern _TRISD
               00339         extern _DDRE
               00340         extern _TRISE
               00341         extern _DDRF
               00342         extern _TRISF
               00343         extern _DDRG
               00344         extern _TRISG
               00345         extern _DDRH
               00346         extern _TRISH
               00347         extern _DDRJ
               00348         extern _TRISJ
               00349         extern _OSCTUNE
               00350         extern _MEMCON
               00351         extern _PIE1
               00352         extern _PIR1
               00353         extern _IPR1
               00354         extern _PIE2
               00355         extern _PIR2
               00356         extern _IPR2
               00357         extern _PIE3
               00358         extern _PIR3
               00359         extern _IPR3
               00360         extern _EECON1
               00361         extern _EECON2
               00362         extern _RCSTA
               00363         extern _RCSTA1
               00364         extern _TXSTA
               00365         extern _TXSTA1
               00366         extern _TXREG
               00367         extern _TXREG1
               00368         extern _RCREG
               00369         extern _RCREG1
               00370         extern _SPBRG
               00371         extern _SPBRG1
               00372         extern _PSPCON
               00373         extern _T3CON
               00374         extern _TMR3L
               00375         extern _TMR3H
               00376         extern _CMCON
               00377         extern _CVRCON
               00378         extern _ECCP1AS
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00379         extern _CCP3CON
               00380         extern _ECCP3CON
               00381         extern _CCPR3
               00382         extern _CCPR3L
               00383         extern _CCPR3H
               00384         extern _CCP2CON
               00385         extern _ECCP2CON
               00386         extern _CCPR2
               00387         extern _CCPR2L
               00388         extern _CCPR2H
               00389         extern _CCP1CON
               00390         extern _ECCP1CON
               00391         extern _CCPR1
               00392         extern _CCPR1L
               00393         extern _CCPR1H
               00394         extern _ADCON2
               00395         extern _ADCON1
               00396         extern _ADCON0
               00397         extern _ADRES
               00398         extern _ADRESL
               00399         extern _ADRESH
               00400         extern _SSP1CON2
               00401         extern _SSPCON2
               00402         extern _SSP1CON1
               00403         extern _SSPCON1
               00404         extern _SSP1STAT
               00405         extern _SSPSTAT
               00406         extern _SSP1ADD
               00407         extern _SSPADD
               00408         extern _SSP1BUF
               00409         extern _SSPBUF
               00410         extern _T2CON
               00411         extern _PR2
               00412         extern _TMR2
               00413         extern _T1CON
               00414         extern _TMR1L
               00415         extern _TMR1H
               00416         extern _RCON
               00417         extern _WDTCON
               00418         extern _ECON1
               00419         extern _OSCCON
               00420         extern _T0CON
               00421         extern _TMR0L
               00422         extern _TMR0H
               00423         extern _STATUS
               00424         extern _FSR2L
               00425         extern _FSR2H
               00426         extern _PLUSW2
               00427         extern _PREINC2
               00428         extern _POSTDEC2
               00429         extern _POSTINC2
               00430         extern _INDF2
               00431         extern _BSR
               00432         extern _FSR1L
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00433         extern _FSR1H
               00434         extern _PLUSW1
               00435         extern _PREINC1
               00436         extern _POSTDEC1
               00437         extern _POSTINC1
               00438         extern _INDF1
               00439         extern _WREG
               00440         extern _FSR0L
               00441         extern _FSR0H
               00442         extern _PLUSW0
               00443         extern _PREINC0
               00444         extern _POSTDEC0
               00445         extern _POSTINC0
               00446         extern _INDF0
               00447         extern _INTCON3
               00448         extern _INTCON2
               00449         extern _INTCON
               00450         extern _PROD
               00451         extern _PRODL
               00452         extern _PRODH
               00453         extern _TABLAT
               00454         extern _TBLPTR
               00455         extern _TBLPTRL
               00456         extern _TBLPTRH
               00457         extern _TBLPTRU
               00458         extern _PC
               00459         extern _PCL
               00460         extern _PCLATH
               00461         extern _PCLATU
               00462         extern _STKPTR
               00463         extern _TOS
               00464         extern _TOSL
               00465         extern _TOSH
               00466         extern _TOSU
               00467         extern _ultoa
               00468         extern _strlen
               00469         extern _LCDInit
               00470         extern _LCDUpdate
               00471         extern __mulint
               00472 ;--------------------------------------------------------
               00473 ;       Equates to used internal registers
               00474 ;--------------------------------------------------------
  00000FD8     00475 STATUS  equ     0xfd8
  00000FF9     00476 PCL     equ     0xff9
  00000FFA     00477 PCLATH  equ     0xffa
  00000FFB     00478 PCLATU  equ     0xffb
  00000FE8     00479 WREG    equ     0xfe8
  00000FE0     00480 BSR     equ     0xfe0
  00000FE9     00481 FSR0L   equ     0xfe9
  00000FEA     00482 FSR0H   equ     0xfea
  00000FE1     00483 FSR1L   equ     0xfe1
  00000FD9     00484 FSR2L   equ     0xfd9
  00000FEF     00485 INDF0   equ     0xfef
  00000FEE     00486 POSTINC0        equ     0xfee
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
  00000FE5     00487 POSTDEC1        equ     0xfe5
  00000FE4     00488 PREINC1 equ     0xfe4
  00000FDB     00489 PLUSW2  equ     0xfdb
  00000FF3     00490 PRODL   equ     0xff3
  00000FF4     00491 PRODH   equ     0xff4
               00492 
               00493 
               00494         idata
               00495 _textFirstLine  db      0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x30, 0x30, 0x3a, 0x30, 0x30, 0x3a
               00496         db      0x30, 0x30, 0x00
               00497 _textSecondLine db      0x41, 0x6c, 0x61, 0x72, 0x6d, 0x20, 0x20, 0x4e, 0x20, 0x30, 0x30, 0x3a
               00498         db      0x30, 0x30, 0x00
               00499 _tabFirst       db      0x06, 0x00, 0x07, 0x00, 0x09, 0x00, 0x0a, 0x00, 0x0c, 0x00, 0x0d, 0x00
               00500 _tabSecond      db      0x07, 0x00, 0x09, 0x00, 0x0a, 0x00, 0x0c, 0x00, 0x0d, 0x00
               00501 _posC   db      0x00, 0x00
               00502 _posA   db      0x00, 0x00
               00503 _bin    db      0x00, 0x00
               00504 _isAlarm        db      0x00, 0x00
               00505 _ringtone       db      0x00, 0x00
               00506 _currentMode    db      0x00, 0x00
               00507 _count  db      0x00, 0x00
               00508 _temp1  db      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20
               00509         db      0x20, 0x20, 0x20, 0x00
               00510 _temp2  db      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20
               00511         db      0x20, 0x20, 0x20, 0x00
               00512 
               00513 
               00514 ; Internal registers
               00515 .registers      udata_ovr       0x0000
               00516 r0x00   res     1
               00517 r0x01   res     1
               00518 r0x02   res     1
               00519 r0x03   res     1
               00520 r0x04   res     1
               00521 r0x05   res     1
               00522 r0x06   res     1
               00523 r0x07   res     1
               00524 r0x08   res     1
               00525 r0x09   res     1
               00526 r0x0a   res     1
               00527 r0x0b   res     1
               00528 r0x0c   res     1
               00529 r0x0d   res     1
               00530 r0x0e   res     1
               00531 r0x0f   res     1
               00532 r0x10   res     1
               00533 r0x11   res     1
               00534 r0x12   res     1
               00535 r0x13   res     1
               00536 r0x14   res     1
               00537 r0x15   res     1
               00538 
               00539 udata_pic_0     udata
               00540 _DisplayWORD_WDigit_1_1 res     6
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00541 
               00542 ;--------------------------------------------------------
               00543 ; interrupt vector 
               00544 ;--------------------------------------------------------
               00545 
               00546 ;--------------------------------------------------------
               00547 ; global & static initialisations
               00548 ;--------------------------------------------------------
               00549 ; ; Starting pCode block for absolute section
               00550 ; ;-----------------------------------------
               00551 S_pic_ivec_0x1_HighISR  code    0X000008
0008 00552 ivec_0x1_HighISR:
0008 EF00 F000 00553         GOTO    _HighISR
               00554 
               00555 ; I code from now on!
               00556 ; ; Starting pCode block
               00557 S_pic__main     code
0000 00558 _main:
               00559 ;       .line   325; pic.c      LED0_TRIS = 0; // Configure 1st led pin as output (yellow)
0000 9000      00560         BCF     _TRISJbits, 0
               00561 ;       .line   326; pic.c      LED1_TRIS = 0; // Configure 2nd led pin as output (red)
0002 9200      00562         BCF     _TRISJbits, 1
               00563 ;       .line   327; pic.c      LED2_TRIS = 0; // Configure 3rd led pin as output (red)
0004 9400      00564         BCF     _TRISJbits, 2
               00565 ;       .line   329; pic.c      BUTTON0_TRIS = 1; // Configure button0 as input
0006 8600      00566         BSF     _TRISBbits, 3
               00567 ;       .line   330; pic.c      BUTTON1_TRIS = 1; // Configure button1 as input
0008 8200      00568         BSF     _TRISBbits, 1
               00569 ;       .line   332; pic.c      RCONbits.IPEN      = 1;   // Enable interrupts priority levels
000A 8E00      00570         BSF     _RCONbits, 7
               00571 ;       .line   333; pic.c      INTCON3bits.INT1F  = 0;   // Clear INT1 flag
000C 9000      00572         BCF     _INTCON3bits, 0
               00573 ;       .line   334; pic.c      INTCON3bits.INT3F  = 0;   // Clear INT3 flag
000E 9400      00574         BCF     _INTCON3bits, 2
               00575 ;       .line   335; pic.c      INTCON3bits.INT1P  = 1;   // Connect INT1 interrupt (button 1) to high priority
0010 8C00      00576         BSF     _INTCON3bits, 6
               00577 ;       .line   337; pic.c      INTCON2bits.INTEDG1= 0;   // INT1 interrupts on falling edge
0012 9A00      00578         BCF     _INTCON2bits, 5
               00579 ;       .line   338; pic.c      INTCON2bits.INTEDG3= 0;   // INT3 interrupts on falling edge
0014 9600      00580         BCF     _INTCON2bits, 3
               00581 ;       .line   339; pic.c      INTCONbits.GIE     = 1;   // Enable high priority interrupts
0016 8E00      00582         BSF     _INTCONbits, 7
               00583 ;       .line   340; pic.c      INTCON3bits.INT1E  = 1;   // Enable INT1 interrupt (button 1)
0018 8600      00584         BSF     _INTCON3bits, 3
               00585 ;       .line   341; pic.c      INTCON3bits.INT3E  = 1;   // Enable INT3 interupt (button 0)
001A 8A00      00586         BSF     _INTCON3bits, 5
               00587 ;       .line   343; pic.c      T0CONbits.T0CS   = 0; //use timer0 instruction cycle clock
001C 9A00      00588         BCF     _T0CONbits, 5
               00589 ;       .line   344; pic.c      LCDInit();
001E EC00 F000 00590         CALL    _LCDInit
               00591 ;       .line   345; pic.c      init_board();
0022 EC00 F000 00592         CALL    _init_board
               00593 ;       .line   347; pic.c      DisplayString(FIRST_LINE,textFirstLine);
0026 0E00      00594         MOVLW   HIGH(_textFirstLine)
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0028 6E00      00595         MOVWF   r0x01
002A 0E00      00596         MOVLW   LOW(_textFirstLine)
002C 6E00      00597         MOVWF   r0x00
002E 0E80      00598         MOVLW   0x80
0030 6E00      00599         MOVWF   r0x02
0032 5000      00600         MOVF    r0x02, W
0034 6EE5      00601         MOVWF   POSTDEC1
0036 5000      00602         MOVF    r0x01, W
0038 6EE5      00603         MOVWF   POSTDEC1
003A 5000      00604         MOVF    r0x00, W
003C 6EE5      00605         MOVWF   POSTDEC1
003E 0E00      00606         MOVLW   0x00
0040 6EE5      00607         MOVWF   POSTDEC1
0042 EC00 F000 00608         CALL    _DisplayString
0046 0E04      00609         MOVLW   0x04
0048 26E1      00610         ADDWF   FSR1L, F
               00611 ;       .line   348; pic.c      DisplayString(SECOND_LINE,textSecondLine);
004A 0E00      00612         MOVLW   HIGH(_textSecondLine)
004C 6E00      00613         MOVWF   r0x01
004E 0E00      00614         MOVLW   LOW(_textSecondLine)
0050 6E00      00615         MOVWF   r0x00
0052 0E80      00616         MOVLW   0x80
0054 6E00      00617         MOVWF   r0x02
0056 5000      00618         MOVF    r0x02, W
0058 6EE5      00619         MOVWF   POSTDEC1
005A 5000      00620         MOVF    r0x01, W
005C 6EE5      00621         MOVWF   POSTDEC1
005E 5000      00622         MOVF    r0x00, W
0060 6EE5      00623         MOVWF   POSTDEC1
0062 0E10      00624         MOVLW   0x10
0064 6EE5      00625         MOVWF   POSTDEC1
0066 EC00 F000 00626         CALL    _DisplayString
006A 0E04      00627         MOVLW   0x04
006C 26E1      00628         ADDWF   FSR1L, F
               00629 ;       .line   350; pic.c      INTCON2bits.TMR0IP       = 1; // Interruption du au timer = interruption haute
006E 8400      00630         BSF     _INTCON2bits, 2
               00631 ;       .line   351; pic.c      INTCONbits.TMR0IF = 0; // reset flag
0070 9400      00632         BCF     _INTCONbits, 2
               00633 ;       .line   352; pic.c      T0CONbits.T08BIT = 1; // use timer0 8-bit counter
0072 8C00      00634         BSF     _T0CONbits, 6
               00635 ;       .line   353; pic.c      T0CONbits.PSA = 1; // disable timer0 prescaler
0074 8600      00636         BSF     _T0CONbits, 3
               00637 ;       .line   354; pic.c      INTCONbits.TMR0IE = 1; // On active les interuptions TMR0
0076 8A00      00638         BSF     _INTCONbits, 5
               00639 ;       .line   355; pic.c      LED1_IO = 0; //turn off the led
0078 9200      00640         BCF     _LATJbits, 1
               00641 ;       .line   356; pic.c      LED2_IO = 0;
007A 9400      00642         BCF     _LATJbits, 2
               00643 ;       .line   357; pic.c      LED0_IO = 0;
007C 9000      00644         BCF     _LATJbits, 0
007E 0012      00645         RETURN  
               00646 
               00647 ; ; Starting pCode block
               00648 S_pic__strlcpy  code
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0000 00649 _strlcpy:
               00650 ;       .line   443; pic.c      size_t strlcpy(char *dst, const char *src, size_t siz)
0000 CFD9 FFE5 00651         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00652         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00653         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00654         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00655         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00656         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00657         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 00658         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 00659         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 00660         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 00661         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 00662         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 00663         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 00664         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 00665         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 00666         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 00667         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 00668         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 00669         MOVFF   r0x10, POSTDEC1
004C C000 FFE5 00670         MOVFF   r0x11, POSTDEC1
0050 C000 FFE5 00671         MOVFF   r0x12, POSTDEC1
0054 C000 FFE5 00672         MOVFF   r0x13, POSTDEC1
0058 C000 FFE5 00673         MOVFF   r0x14, POSTDEC1
005C C000 FFE5 00674         MOVFF   r0x15, POSTDEC1
0060 0E02      00675         MOVLW   0x02
0062 CFDB F000 00676         MOVFF   PLUSW2, r0x00
0066 0E03      00677         MOVLW   0x03
0068 CFDB F000 00678         MOVFF   PLUSW2, r0x01
006C 0E04      00679         MOVLW   0x04
006E CFDB F000 00680         MOVFF   PLUSW2, r0x02
0072 0E05      00681         MOVLW   0x05
0074 CFDB F000 00682         MOVFF   PLUSW2, r0x03
0078 0E06      00683         MOVLW   0x06
007A CFDB F000 00684         MOVFF   PLUSW2, r0x04
007E 0E07      00685         MOVLW   0x07
0080 CFDB F000 00686         MOVFF   PLUSW2, r0x05
0084 0E08      00687         MOVLW   0x08
0086 CFDB F000 00688         MOVFF   PLUSW2, r0x06
008A 0E09      00689         MOVLW   0x09
008C CFDB F000 00690         MOVFF   PLUSW2, r0x07
               00691 ;       .line   445; pic.c      char       *d = dst;
0090 C000 F000 00692         MOVFF   r0x00, r0x08
0094 C000 F000 00693         MOVFF   r0x01, r0x09
0098 C000 F000 00694         MOVFF   r0x02, r0x0a
               00695 ;       .line   446; pic.c      const char *s = src;
009C C000 F000 00696         MOVFF   r0x03, r0x0b
00A0 C000 F000 00697         MOVFF   r0x04, r0x0c
00A4 C000 F000 00698         MOVFF   r0x05, r0x0d
               00699 ;       .line   447; pic.c      size_t      n = siz;
00A8 C000 F000 00700         MOVFF   r0x06, r0x0e
00AC C000 F000 00701         MOVFF   r0x07, r0x0f
               00702 ;       .line   450; pic.c      if (n != 0)
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00B0 5000      00703         MOVF    r0x06, W
00B2 1000      00704         IORWF   r0x07, W
00B4 B4D8      00705         BTFSC   STATUS, 2
00B6 D000      00706         BRA     _00407_DS_
               00707 ;       .line   452; pic.c      while (--n != 0)
00B8 C000 F000 00708         MOVFF   r0x03, r0x10
00BC C000 F000 00709         MOVFF   r0x04, r0x11
00C0 C000 F000 00710         MOVFF   r0x05, r0x12
00C4 C000 F000 00711         MOVFF   r0x06, r0x13
00C8 C000 F000 00712         MOVFF   r0x07, r0x14
00CC 00713 _00403_DS_:
00CC 0EFF      00714         MOVLW   0xff
00CE 2600      00715         ADDWF   r0x13, F
00D0 A0D8      00716         BTFSS   STATUS, 0
00D2 0600      00717         DECF    r0x14, F
00D4 5000      00718         MOVF    r0x13, W
00D6 1000      00719         IORWF   r0x14, W
00D8 E000      00720         BZ      _00422_DS_
               00721 ;       .line   454; pic.c      if ((*d++ = *s++) == '\0')
00DA C000 FFE9 00722         MOVFF   r0x10, FSR0L
00DE C000 FFF3 00723         MOVFF   r0x11, PRODL
00E2 5000      00724         MOVF    r0x12, W
00E4 EC00 F000 00725         CALL    __gptrget1
00E8 6E00      00726         MOVWF   r0x15
00EA 2A00      00727         INCF    r0x10, F
00EC B0D8      00728         BTFSC   STATUS, 0
00EE 2A00      00729         INCF    r0x11, F
00F0 B0D8      00730         BTFSC   STATUS, 0
00F2 2A00      00731         INCF    r0x12, F
00F4 C000 FFE5 00732         MOVFF   r0x15, POSTDEC1
00F8 C000 FFE9 00733         MOVFF   r0x00, FSR0L
00FC C000 FFF3 00734         MOVFF   r0x01, PRODL
0100 5000      00735         MOVF    r0x02, W
0102 EC00 F000 00736         CALL    __gptrput1
0106 2A00      00737         INCF    r0x00, F
0108 B0D8      00738         BTFSC   STATUS, 0
010A 2A00      00739         INCF    r0x01, F
010C B0D8      00740         BTFSC   STATUS, 0
010E 2A00      00741         INCF    r0x02, F
0110 5000      00742         MOVF    r0x15, W
0112 E100      00743         BNZ     _00403_DS_
0114 00744 _00422_DS_:
               00745 ;       .line   455; pic.c      break;
0114 C000 F000 00746         MOVFF   r0x10, r0x0b
0118 C000 F000 00747         MOVFF   r0x11, r0x0c
011C C000 F000 00748         MOVFF   r0x12, r0x0d
0120 C000 F000 00749         MOVFF   r0x00, r0x08
0124 C000 F000 00750         MOVFF   r0x01, r0x09
0128 C000 F000 00751         MOVFF   r0x02, r0x0a
012C C000 F000 00752         MOVFF   r0x13, r0x0e
0130 C000 F000 00753         MOVFF   r0x14, r0x0f
0134 00754 _00407_DS_:
               00755 ;       .line   460; pic.c      if (n == 0)
0134 5000      00756         MOVF    r0x0e, W
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0136 1000      00757         IORWF   r0x0f, W
0138 E100      00758         BNZ     _00414_DS_
               00759 ;       .line   462; pic.c      if (siz != 0)
013A 5000      00760         MOVF    r0x06, W
013C 1000      00761         IORWF   r0x07, W
013E E000      00762         BZ      _00421_DS_
               00763 ;       .line   463; pic.c      *d = '\0';          /* NUL-terminate dst */
0140 0E00      00764         MOVLW   0x00
0142 6EE5      00765         MOVWF   POSTDEC1
0144 C000 FFE9 00766         MOVFF   r0x08, FSR0L
0148 C000 FFF3 00767         MOVFF   r0x09, PRODL
014C 5000      00768         MOVF    r0x0a, W
014E EC00 F000 00769         CALL    __gptrput1
0152 00770 _00421_DS_:
               00771 ;       .line   464; pic.c      while (*s++)
0152 C000 F000 00772         MOVFF   r0x0b, r0x00
0156 C000 F000 00773         MOVFF   r0x0c, r0x01
015A C000 F000 00774         MOVFF   r0x0d, r0x02
015E 00775 _00410_DS_:
015E C000 FFE9 00776         MOVFF   r0x00, FSR0L
0162 C000 FFF3 00777         MOVFF   r0x01, PRODL
0166 5000      00778         MOVF    r0x02, W
0168 EC00 F000 00779         CALL    __gptrget1
016C 6E00      00780         MOVWF   r0x06
016E 2A00      00781         INCF    r0x00, F
0170 B0D8      00782         BTFSC   STATUS, 0
0172 2A00      00783         INCF    r0x01, F
0174 B0D8      00784         BTFSC   STATUS, 0
0176 2A00      00785         INCF    r0x02, F
0178 5000      00786         MOVF    r0x06, W
017A E100      00787         BNZ     _00410_DS_
017C C000 F000 00788         MOVFF   r0x00, r0x0b
0180 C000 F000 00789         MOVFF   r0x01, r0x0c
0184 C000 F000 00790         MOVFF   r0x02, r0x0d
0188 00791 _00414_DS_:
               00792 ;       .line   470; pic.c      return (s - src - 1);       /* count does not include NUL */
0188 5000      00793         MOVF    r0x03, W
018A 5C00      00794         SUBWF   r0x0b, W
018C 6E00      00795         MOVWF   r0x03
018E 5000      00796         MOVF    r0x04, W
0190 5800      00797         SUBWFB  r0x0c, W
0192 6E00      00798         MOVWF   r0x04
0194 0EFF      00799         MOVLW   0xff
0196 2600      00800         ADDWF   r0x03, F
0198 A0D8      00801         BTFSS   STATUS, 0
019A 0600      00802         DECF    r0x04, F
019C C000 FFF3 00803         MOVFF   r0x04, PRODL
01A0 5000      00804         MOVF    r0x03, W
01A2 CFE4 F000 00805         MOVFF   PREINC1, r0x15
01A6 CFE4 F000 00806         MOVFF   PREINC1, r0x14
01AA CFE4 F000 00807         MOVFF   PREINC1, r0x13
01AE CFE4 F000 00808         MOVFF   PREINC1, r0x12
01B2 CFE4 F000 00809         MOVFF   PREINC1, r0x11
01B6 CFE4 F000 00810         MOVFF   PREINC1, r0x10
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01BA CFE4 F000 00811         MOVFF   PREINC1, r0x0f
01BE CFE4 F000 00812         MOVFF   PREINC1, r0x0e
01C2 CFE4 F000 00813         MOVFF   PREINC1, r0x0d
01C6 CFE4 F000 00814         MOVFF   PREINC1, r0x0c
01CA CFE4 F000 00815         MOVFF   PREINC1, r0x0b
01CE CFE4 F000 00816         MOVFF   PREINC1, r0x0a
01D2 CFE4 F000 00817         MOVFF   PREINC1, r0x09
01D6 CFE4 F000 00818         MOVFF   PREINC1, r0x08
01DA CFE4 F000 00819         MOVFF   PREINC1, r0x07
01DE CFE4 F000 00820         MOVFF   PREINC1, r0x06
01E2 CFE4 F000 00821         MOVFF   PREINC1, r0x05
01E6 CFE4 F000 00822         MOVFF   PREINC1, r0x04
01EA CFE4 F000 00823         MOVFF   PREINC1, r0x03
01EE CFE4 F000 00824         MOVFF   PREINC1, r0x02
01F2 CFE4 F000 00825         MOVFF   PREINC1, r0x01
01F6 CFE4 F000 00826         MOVFF   PREINC1, r0x00
01FA CFE4 FFD9 00827         MOVFF   PREINC1, FSR2L
01FE 0012      00828         RETURN  
               00829 
               00830 ; ; Starting pCode block
               00831 S_pic__DisplayString    code
0000 00832 _DisplayString:
               00833 ;       .line   398; pic.c      void DisplayString(BYTE pos, char* text)
0000 CFD9 FFE5 00834         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00835         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00836         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00837         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00838         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00839         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00840         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 00841         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 00842         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 00843         MOVFF   r0x07, POSTDEC1
0028 0E02      00844         MOVLW   0x02
002A CFDB F000 00845         MOVFF   PLUSW2, r0x00
002E 0E03      00846         MOVLW   0x03
0030 CFDB F000 00847         MOVFF   PLUSW2, r0x01
0034 0E04      00848         MOVLW   0x04
0036 CFDB F000 00849         MOVFF   PLUSW2, r0x02
003A 0E05      00850         MOVLW   0x05
003C CFDB F000 00851         MOVFF   PLUSW2, r0x03
               00852 ;       .line   400; pic.c      BYTE l= strlen(text)+1;
0040 5000      00853         MOVF    r0x03, W
0042 6EE5      00854         MOVWF   POSTDEC1
0044 5000      00855         MOVF    r0x02, W
0046 6EE5      00856         MOVWF   POSTDEC1
0048 5000      00857         MOVF    r0x01, W
004A 6EE5      00858         MOVWF   POSTDEC1
004C EC00 F000 00859         CALL    _strlen
0050 6E00      00860         MOVWF   r0x04
0052 CFF3 F000 00861         MOVFF   PRODL, r0x05
0056 0E03      00862         MOVLW   0x03
0058 26E1      00863         ADDWF   FSR1L, F
005A 2A00      00864         INCF    r0x04, F
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00865 ;       .line   401; pic.c      BYTE max= 32-pos;
005C 5000      00866         MOVF    r0x00, W
005E 0820      00867         SUBLW   0x20
0060 6E00      00868         MOVWF   r0x05
               00869 ;       .line   402; pic.c      strlcpy((char*)&LCDText[pos], text,(l<max)?l:max );
0062 6A00      00870         CLRF    r0x06
0064 0E00      00871         MOVLW   LOW(_LCDText)
0066 2600      00872         ADDWF   r0x00, F
0068 0E00      00873         MOVLW   HIGH(_LCDText)
006A 2200      00874         ADDWFC  r0x06, F
006C 5000      00875         MOVF    r0x06, W
006E 6E00      00876         MOVWF   r0x06
0070 5000      00877         MOVF    r0x00, W
0072 6E00      00878         MOVWF   r0x00
0074 0E80      00879         MOVLW   0x80
0076 6E00      00880         MOVWF   r0x07
0078 5000      00881         MOVF    r0x05, W
007A 5C00      00882         SUBWF   r0x04, W
007C E300      00883         BNC     _00394_DS_
007E C000 F000 00884         MOVFF   r0x05, r0x04
0082 00885 _00394_DS_:
0082 6A00      00886         CLRF    r0x05
0084 5000      00887         MOVF    r0x05, W
0086 6EE5      00888         MOVWF   POSTDEC1
0088 5000      00889         MOVF    r0x04, W
008A 6EE5      00890         MOVWF   POSTDEC1
008C 5000      00891         MOVF    r0x03, W
008E 6EE5      00892         MOVWF   POSTDEC1
0090 5000      00893         MOVF    r0x02, W
0092 6EE5      00894         MOVWF   POSTDEC1
0094 5000      00895         MOVF    r0x01, W
0096 6EE5      00896         MOVWF   POSTDEC1
0098 5000      00897         MOVF    r0x07, W
009A 6EE5      00898         MOVWF   POSTDEC1
009C 5000      00899         MOVF    r0x06, W
009E 6EE5      00900         MOVWF   POSTDEC1
00A0 5000      00901         MOVF    r0x00, W
00A2 6EE5      00902         MOVWF   POSTDEC1
00A4 EC00 F000 00903         CALL    _strlcpy
00A8 0E08      00904         MOVLW   0x08
00AA 26E1      00905         ADDWF   FSR1L, F
               00906 ;       .line   403; pic.c      LCDUpdate();
00AC EC00 F000 00907         CALL    _LCDUpdate
00B0 CFE4 F000 00908         MOVFF   PREINC1, r0x07
00B4 CFE4 F000 00909         MOVFF   PREINC1, r0x06
00B8 CFE4 F000 00910         MOVFF   PREINC1, r0x05
00BC CFE4 F000 00911         MOVFF   PREINC1, r0x04
00C0 CFE4 F000 00912         MOVFF   PREINC1, r0x03
00C4 CFE4 F000 00913         MOVFF   PREINC1, r0x02
00C8 CFE4 F000 00914         MOVFF   PREINC1, r0x01
00CC CFE4 F000 00915         MOVFF   PREINC1, r0x00
00D0 CFE4 FFD9 00916         MOVFF   PREINC1, FSR2L
00D4 0012      00917         RETURN  
               00918 
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00919 ; ; Starting pCode block
               00920 S_pic__DisplayWORD      code
0000 00921 _DisplayWORD:
               00922 ;       .line   376; pic.c      void DisplayWORD(BYTE pos, WORD w) //WORD is a 16 bits unsigned
0000 CFD9 FFE5 00923         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00924         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00925         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00926         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00927         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00928         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00929         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 00930         MOVFF   r0x05, POSTDEC1
0020 0E02      00931         MOVLW   0x02
0022 CFDB F000 00932         MOVFF   PLUSW2, r0x00
0026 0E03      00933         MOVLW   0x03
0028 CFDB F000 00934         MOVFF   PLUSW2, r0x01
002C 0E04      00935         MOVLW   0x04
002E CFDB F000 00936         MOVFF   PLUSW2, r0x02
               00937 ;       .line   384; pic.c      ultoa(w, WDigit, radix);      
0032 6A00      00938         CLRF    r0x03
0034 6A00      00939         CLRF    r0x04
0036 0E0A      00940         MOVLW   0x0a
0038 6EE5      00941         MOVWF   POSTDEC1
003A 0E00      00942         MOVLW   HIGH(_DisplayWORD_WDigit_1_1)
003C 6EE5      00943         MOVWF   POSTDEC1
003E 0E00      00944         MOVLW   LOW(_DisplayWORD_WDigit_1_1)
0040 6EE5      00945         MOVWF   POSTDEC1
0042 5000      00946         MOVF    r0x04, W
0044 6EE5      00947         MOVWF   POSTDEC1
0046 5000      00948         MOVF    r0x03, W
0048 6EE5      00949         MOVWF   POSTDEC1
004A 5000      00950         MOVF    r0x02, W
004C 6EE5      00951         MOVWF   POSTDEC1
004E 5000      00952         MOVF    r0x01, W
0050 6EE5      00953         MOVWF   POSTDEC1
0052 EC00 F000 00954         CALL    _ultoa
0056 0E07      00955         MOVLW   0x07
0058 26E1      00956         ADDWF   FSR1L, F
               00957 ;       .line   385; pic.c      for(j = 0; j < strlen((char*)WDigit); j++)
005A 6A00      00958         CLRF    r0x01
005C 00959 _00375_DS_:
005C 0E00      00960         MOVLW   HIGH(_DisplayWORD_WDigit_1_1)
005E 6E00      00961         MOVWF   r0x03
0060 0E00      00962         MOVLW   LOW(_DisplayWORD_WDigit_1_1)
0062 6E00      00963         MOVWF   r0x02
0064 0E80      00964         MOVLW   0x80
0066 6E00      00965         MOVWF   r0x04
0068 5000      00966         MOVF    r0x04, W
006A 6EE5      00967         MOVWF   POSTDEC1
006C 5000      00968         MOVF    r0x03, W
006E 6EE5      00969         MOVWF   POSTDEC1
0070 5000      00970         MOVF    r0x02, W
0072 6EE5      00971         MOVWF   POSTDEC1
0074 EC00 F000 00972         CALL    _strlen
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0078 6E00      00973         MOVWF   r0x02
007A CFF3 F000 00974         MOVFF   PRODL, r0x03
007E 0E03      00975         MOVLW   0x03
0080 26E1      00976         ADDWF   FSR1L, F
0082 C000 F000 00977         MOVFF   r0x01, r0x04
0086 6A00      00978         CLRF    r0x05
0088 5000      00979         MOVF    r0x05, W
008A 0F80      00980         ADDLW   0x80
008C 6EF3      00981         MOVWF   PRODL
008E 5000      00982         MOVF    r0x03, W
0090 0F80      00983         ADDLW   0x80
0092 5CF3      00984         SUBWF   PRODL, W
0094 E100      00985         BNZ     _00385_DS_
0096 5000      00986         MOVF    r0x02, W
0098 5C00      00987         SUBWF   r0x04, W
009A 00988 _00385_DS_:
009A E200      00989         BC      _00378_DS_
               00990 ;       .line   387; pic.c      LCDText[LCDPos++] = WDigit[j];
009C C000 F000 00991         MOVFF   r0x00, r0x02
00A0 2A00      00992         INCF    r0x00, F
00A2 6A00      00993         CLRF    r0x03
00A4 0E00      00994         MOVLW   LOW(_LCDText)
00A6 2600      00995         ADDWF   r0x02, F
00A8 0E00      00996         MOVLW   HIGH(_LCDText)
00AA 2200      00997         ADDWFC  r0x03, F
00AC 0E00      00998         MOVLW   LOW(_DisplayWORD_WDigit_1_1)
00AE 2400      00999         ADDWF   r0x01, W
00B0 6E00      01000         MOVWF   r0x04
00B2 6A00      01001         CLRF    r0x05
00B4 0E00      01002         MOVLW   HIGH(_DisplayWORD_WDigit_1_1)
00B6 2200      01003         ADDWFC  r0x05, F
00B8 C000 FFE9 01004         MOVFF   r0x04, FSR0L
00BC C000 FFEA 01005         MOVFF   r0x05, FSR0H
00C0 CFEF F000 01006         MOVFF   INDF0, r0x04
00C4 C000 FFE9 01007         MOVFF   r0x02, FSR0L
00C8 C000 FFEA 01008         MOVFF   r0x03, FSR0H
00CC C000 FFEF 01009         MOVFF   r0x04, INDF0
               01010 ;       .line   385; pic.c      for(j = 0; j < strlen((char*)WDigit); j++)
00D0 2A00      01011         INCF    r0x01, F
00D2 D000      01012         BRA     _00375_DS_
00D4 01013 _00378_DS_:
               01014 ;       .line   389; pic.c      if(LCDPos < 32u)
00D4 C000 F000 01015         MOVFF   r0x00, r0x01
00D8 6A00      01016         CLRF    r0x02
00DA 0E00      01017         MOVLW   0x00
00DC 5C00      01018         SUBWF   r0x02, W
00DE E100      01019         BNZ     _00386_DS_
00E0 0E20      01020         MOVLW   0x20
00E2 5C00      01021         SUBWF   r0x01, W
00E4 01022 _00386_DS_:
00E4 E200      01023         BC      _00374_DS_
               01024 ;       .line   390; pic.c      LCDText[LCDPos] = 0;
00E6 6A00      01025         CLRF    r0x01
00E8 0E00      01026         MOVLW   LOW(_LCDText)
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00EA 2600      01027         ADDWF   r0x00, F
00EC 0E00      01028         MOVLW   HIGH(_LCDText)
00EE 2200      01029         ADDWFC  r0x01, F
00F0 C000 FFE9 01030         MOVFF   r0x00, FSR0L
00F4 C000 FFEA 01031         MOVFF   r0x01, FSR0H
00F8 0E00      01032         MOVLW   0x00
00FA 6EEF      01033         MOVWF   INDF0
00FC 01034 _00374_DS_:
               01035 ;       .line   391; pic.c      LCDUpdate();
00FC EC00 F000 01036         CALL    _LCDUpdate
0100 CFE4 F000 01037         MOVFF   PREINC1, r0x05
0104 CFE4 F000 01038         MOVFF   PREINC1, r0x04
0108 CFE4 F000 01039         MOVFF   PREINC1, r0x03
010C CFE4 F000 01040         MOVFF   PREINC1, r0x02
0110 CFE4 F000 01041         MOVFF   PREINC1, r0x01
0114 CFE4 F000 01042         MOVFF   PREINC1, r0x00
0118 CFE4 FFD9 01043         MOVFF   PREINC1, FSR2L
011C 0012      01044         RETURN  
               01045 
               01046 ; ; Starting pCode block
               01047 S_pic__init_board       code
0000 01048 _init_board:
               01049 ;       .line   360; pic.c      void init_board(void) {
0000 CFD9 FFE5 01050         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01051         MOVFF   FSR1L, FSR2L
               01052 ;       .line   361; pic.c      TRISJbits.TRISJ0=0; // configure PORTJ0 for output (LED)
0008 9000      01053         BCF     _TRISJbits, 0
               01054 ;       .line   362; pic.c      TRISJbits.TRISJ1=0; // configure PORTJ1 for output (LED)
000A 9200      01055         BCF     _TRISJbits, 1
000C CFE4 FFD9 01056         MOVFF   PREINC1, FSR2L
0010 0012      01057         RETURN  
               01058 
               01059 ; ; Starting pCode block
               01060 S_pic__blink    code
0000 01061 _blink:
               01062 ;       .line   273; pic.c      void blink()
0000 CFD9 FFE5 01063         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01064         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01065         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01066         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01067         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01068         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01069         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01070         MOVFF   r0x05, POSTDEC1
               01071 ;       .line   275; pic.c      strlcpy(temp1,textFirstLine,16);
0020 0E00      01072         MOVLW   HIGH(_temp1)
0022 6E00      01073         MOVWF   r0x01
0024 0E00      01074         MOVLW   LOW(_temp1)
0026 6E00      01075         MOVWF   r0x00
0028 0E80      01076         MOVLW   0x80
002A 6E00      01077         MOVWF   r0x02
002C 0E00      01078         MOVLW   HIGH(_textFirstLine)
002E 6E00      01079         MOVWF   r0x04
0030 0E00      01080         MOVLW   LOW(_textFirstLine)
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0032 6E00      01081         MOVWF   r0x03
0034 0E80      01082         MOVLW   0x80
0036 6E00      01083         MOVWF   r0x05
0038 0E00      01084         MOVLW   0x00
003A 6EE5      01085         MOVWF   POSTDEC1
003C 0E10      01086         MOVLW   0x10
003E 6EE5      01087         MOVWF   POSTDEC1
0040 5000      01088         MOVF    r0x05, W
0042 6EE5      01089         MOVWF   POSTDEC1
0044 5000      01090         MOVF    r0x04, W
0046 6EE5      01091         MOVWF   POSTDEC1
0048 5000      01092         MOVF    r0x03, W
004A 6EE5      01093         MOVWF   POSTDEC1
004C 5000      01094         MOVF    r0x02, W
004E 6EE5      01095         MOVWF   POSTDEC1
0050 5000      01096         MOVF    r0x01, W
0052 6EE5      01097         MOVWF   POSTDEC1
0054 5000      01098         MOVF    r0x00, W
0056 6EE5      01099         MOVWF   POSTDEC1
0058 EC00 F000 01100         CALL    _strlcpy
005C 0E08      01101         MOVLW   0x08
005E 26E1      01102         ADDWF   FSR1L, F
               01103 ;       .line   276; pic.c      strlcpy(temp2,textSecondLine,16);
0060 0E00      01104         MOVLW   HIGH(_temp2)
0062 6E00      01105         MOVWF   r0x01
0064 0E00      01106         MOVLW   LOW(_temp2)
0066 6E00      01107         MOVWF   r0x00
0068 0E80      01108         MOVLW   0x80
006A 6E00      01109         MOVWF   r0x02
006C 0E00      01110         MOVLW   HIGH(_textSecondLine)
006E 6E00      01111         MOVWF   r0x04
0070 0E00      01112         MOVLW   LOW(_textSecondLine)
0072 6E00      01113         MOVWF   r0x03
0074 0E80      01114         MOVLW   0x80
0076 6E00      01115         MOVWF   r0x05
0078 0E00      01116         MOVLW   0x00
007A 6EE5      01117         MOVWF   POSTDEC1
007C 0E10      01118         MOVLW   0x10
007E 6EE5      01119         MOVWF   POSTDEC1
0080 5000      01120         MOVF    r0x05, W
0082 6EE5      01121         MOVWF   POSTDEC1
0084 5000      01122         MOVF    r0x04, W
0086 6EE5      01123         MOVWF   POSTDEC1
0088 5000      01124         MOVF    r0x03, W
008A 6EE5      01125         MOVWF   POSTDEC1
008C 5000      01126         MOVF    r0x02, W
008E 6EE5      01127         MOVWF   POSTDEC1
0090 5000      01128         MOVF    r0x01, W
0092 6EE5      01129         MOVWF   POSTDEC1
0094 5000      01130         MOVF    r0x00, W
0096 6EE5      01131         MOVWF   POSTDEC1
0098 EC00 F000 01132         CALL    _strlcpy
009C 0E08      01133         MOVLW   0x08
009E 26E1      01134         ADDWF   FSR1L, F
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00A0 0000      01135         BANKSEL _bin
               01136 ;       .line   278; pic.c      if(bin)
00A2 5100      01137         MOVF    _bin, W, B
00A4 0000      01138         BANKSEL (_bin + 1)
00A6 1100      01139         IORWF   (_bin + 1), W, B
00A8 B4D8      01140         BTFSC   STATUS, 2
00AA D000      01141         BRA     _00342_DS_
00AC 0000      01142         BANKSEL _currentMode
               01143 ;       .line   280; pic.c      if(currentMode==MODE1)
00AE 5100      01144         MOVF    _currentMode, W, B
00B0 0A01      01145         XORLW   0x01
00B2 E100      01146         BNZ     _00351_DS_
00B4 0000      01147         BANKSEL (_currentMode + 1)
00B6 5100      01148         MOVF    (_currentMode + 1), W, B
00B8 E000      01149         BZ      _00352_DS_
00BA 01150 _00351_DS_:
00BA D000      01151         BRA     _00339_DS_
00BC 01152 _00352_DS_:
               01153 ;       .line   282; pic.c      temp1[0]=' ';
00BC 0E20      01154         MOVLW   0x20
00BE 0000      01155         BANKSEL _temp1
00C0 6F00      01156         MOVWF   _temp1, B
               01157 ;       .line   283; pic.c      temp1[1]=' ';
00C2 0E20      01158         MOVLW   0x20
00C4 0000      01159         BANKSEL (_temp1 + 1)
00C6 6F00      01160         MOVWF   (_temp1 + 1), B
               01161 ;       .line   284; pic.c      temp1[2]=' ';
00C8 0E20      01162         MOVLW   0x20
00CA 0000      01163         BANKSEL (_temp1 + 2)
00CC 6F00      01164         MOVWF   (_temp1 + 2), B
               01165 ;       .line   285; pic.c      temp1[3]=' ';
00CE 0E20      01166         MOVLW   0x20
00D0 0000      01167         BANKSEL (_temp1 + 3)
00D2 6F00      01168         MOVWF   (_temp1 + 3), B
               01169 ;       .line   286; pic.c      temp1[4]=' ';
00D4 0E20      01170         MOVLW   0x20
00D6 0000      01171         BANKSEL (_temp1 + 4)
00D8 6F00      01172         MOVWF   (_temp1 + 4), B
               01173 ;       .line   287; pic.c      DisplayString(FIRST_LINE,temp1);                        
00DA 0E00      01174         MOVLW   HIGH(_temp1)
00DC 6E00      01175         MOVWF   r0x01
00DE 0E00      01176         MOVLW   LOW(_temp1)
00E0 6E00      01177         MOVWF   r0x00
00E2 0E80      01178         MOVLW   0x80
00E4 6E00      01179         MOVWF   r0x02
00E6 5000      01180         MOVF    r0x02, W
00E8 6EE5      01181         MOVWF   POSTDEC1
00EA 5000      01182         MOVF    r0x01, W
00EC 6EE5      01183         MOVWF   POSTDEC1
00EE 5000      01184         MOVF    r0x00, W
00F0 6EE5      01185         MOVWF   POSTDEC1
00F2 0E00      01186         MOVLW   0x00
00F4 6EE5      01187         MOVWF   POSTDEC1
00F6 EC00 F000 01188         CALL    _DisplayString
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00FA 0E04      01189         MOVLW   0x04
00FC 26E1      01190         ADDWF   FSR1L, F
               01191 ;       .line   288; pic.c      DisplayString(SECOND_LINE,temp2);
00FE 0E00      01192         MOVLW   HIGH(_temp2)
0100 6E00      01193         MOVWF   r0x01
0102 0E00      01194         MOVLW   LOW(_temp2)
0104 6E00      01195         MOVWF   r0x00
0106 0E80      01196         MOVLW   0x80
0108 6E00      01197         MOVWF   r0x02
010A 5000      01198         MOVF    r0x02, W
010C 6EE5      01199         MOVWF   POSTDEC1
010E 5000      01200         MOVF    r0x01, W
0110 6EE5      01201         MOVWF   POSTDEC1
0112 5000      01202         MOVF    r0x00, W
0114 6EE5      01203         MOVWF   POSTDEC1
0116 0E10      01204         MOVLW   0x10
0118 6EE5      01205         MOVWF   POSTDEC1
011A EC00 F000 01206         CALL    _DisplayString
011E 0E04      01207         MOVLW   0x04
0120 26E1      01208         ADDWF   FSR1L, F
0122 D000      01209         BRA     _00340_DS_
0124 01210 _00339_DS_:
0124 0000      01211         BANKSEL _currentMode
               01212 ;       .line   290; pic.c      else if(currentMode==MODE2)
0126 5100      01213         MOVF    _currentMode, W, B
0128 0A02      01214         XORLW   0x02
012A E100      01215         BNZ     _00353_DS_
012C 0000      01216         BANKSEL (_currentMode + 1)
012E 5100      01217         MOVF    (_currentMode + 1), W, B
0130 E000      01218         BZ      _00354_DS_
0132 01219 _00353_DS_:
0132 D000      01220         BRA     _00336_DS_
0134 01221 _00354_DS_:
               01222 ;       .line   292; pic.c      temp2[0]=' ';
0134 0E20      01223         MOVLW   0x20
0136 0000      01224         BANKSEL _temp2
0138 6F00      01225         MOVWF   _temp2, B
               01226 ;       .line   293; pic.c      temp2[1]=' ';
013A 0E20      01227         MOVLW   0x20
013C 0000      01228         BANKSEL (_temp2 + 1)
013E 6F00      01229         MOVWF   (_temp2 + 1), B
               01230 ;       .line   294; pic.c      temp2[2]=' ';
0140 0E20      01231         MOVLW   0x20
0142 0000      01232         BANKSEL (_temp2 + 2)
0144 6F00      01233         MOVWF   (_temp2 + 2), B
               01234 ;       .line   295; pic.c      temp2[3]=' ';
0146 0E20      01235         MOVLW   0x20
0148 0000      01236         BANKSEL (_temp2 + 3)
014A 6F00      01237         MOVWF   (_temp2 + 3), B
               01238 ;       .line   296; pic.c      temp2[4]=' ';           
014C 0E20      01239         MOVLW   0x20
014E 0000      01240         BANKSEL (_temp2 + 4)
0150 6F00      01241         MOVWF   (_temp2 + 4), B
               01242 ;       .line   297; pic.c      DisplayString(FIRST_LINE,temp1);                        
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0152 0E00      01243         MOVLW   HIGH(_temp1)
0154 6E00      01244         MOVWF   r0x01
0156 0E00      01245         MOVLW   LOW(_temp1)
0158 6E00      01246         MOVWF   r0x00
015A 0E80      01247         MOVLW   0x80
015C 6E00      01248         MOVWF   r0x02
015E 5000      01249         MOVF    r0x02, W
0160 6EE5      01250         MOVWF   POSTDEC1
0162 5000      01251         MOVF    r0x01, W
0164 6EE5      01252         MOVWF   POSTDEC1
0166 5000      01253         MOVF    r0x00, W
0168 6EE5      01254         MOVWF   POSTDEC1
016A 0E00      01255         MOVLW   0x00
016C 6EE5      01256         MOVWF   POSTDEC1
016E EC00 F000 01257         CALL    _DisplayString
0172 0E04      01258         MOVLW   0x04
0174 26E1      01259         ADDWF   FSR1L, F
               01260 ;       .line   298; pic.c      DisplayString(SECOND_LINE,temp2);
0176 0E00      01261         MOVLW   HIGH(_temp2)
0178 6E00      01262         MOVWF   r0x01
017A 0E00      01263         MOVLW   LOW(_temp2)
017C 6E00      01264         MOVWF   r0x00
017E 0E80      01265         MOVLW   0x80
0180 6E00      01266         MOVWF   r0x02
0182 5000      01267         MOVF    r0x02, W
0184 6EE5      01268         MOVWF   POSTDEC1
0186 5000      01269         MOVF    r0x01, W
0188 6EE5      01270         MOVWF   POSTDEC1
018A 5000      01271         MOVF    r0x00, W
018C 6EE5      01272         MOVWF   POSTDEC1
018E 0E10      01273         MOVLW   0x10
0190 6EE5      01274         MOVWF   POSTDEC1
0192 EC00 F000 01275         CALL    _DisplayString
0196 0E04      01276         MOVLW   0x04
0198 26E1      01277         ADDWF   FSR1L, F
019A D000      01278         BRA     _00340_DS_
019C 01279 _00336_DS_:
019C 0000      01280         BANKSEL _currentMode
               01281 ;       .line   300; pic.c      else if(currentMode==MODE3)
019E 5100      01282         MOVF    _currentMode, W, B
01A0 0A03      01283         XORLW   0x03
01A2 E100      01284         BNZ     _00355_DS_
01A4 0000      01285         BANKSEL (_currentMode + 1)
01A6 5100      01286         MOVF    (_currentMode + 1), W, B
01A8 E000      01287         BZ      _00356_DS_
01AA 01288 _00355_DS_:
01AA D000      01289         BRA     _00333_DS_
01AC 01290 _00356_DS_:
01AC 0000      01291         BANKSEL (_posC + 1)
               01292 ;       .line   302; pic.c      temp1[tabFirst[posC]]=' ';
01AE 5100      01293         MOVF    (_posC + 1), W, B
01B0 6EE5      01294         MOVWF   POSTDEC1
01B2 0000      01295         BANKSEL _posC
01B4 5100      01296         MOVF    _posC, W, B
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01B6 6EE5      01297         MOVWF   POSTDEC1
01B8 0E00      01298         MOVLW   0x00
01BA 6EE5      01299         MOVWF   POSTDEC1
01BC 0E02      01300         MOVLW   0x02
01BE 6EE5      01301         MOVWF   POSTDEC1
01C0 EC00 F000 01302         CALL    __mulint
01C4 6E00      01303         MOVWF   r0x00
01C6 CFF3 F000 01304         MOVFF   PRODL, r0x01
01CA 0E04      01305         MOVLW   0x04
01CC 26E1      01306         ADDWF   FSR1L, F
01CE 0E00      01307         MOVLW   LOW(_tabFirst)
01D0 2600      01308         ADDWF   r0x00, F
01D2 0E00      01309         MOVLW   HIGH(_tabFirst)
01D4 2200      01310         ADDWFC  r0x01, F
01D6 C000 FFE9 01311         MOVFF   r0x00, FSR0L
01DA C000 FFEA 01312         MOVFF   r0x01, FSR0H
01DE CFEE F000 01313         MOVFF   POSTINC0, r0x00
01E2 CFEF F000 01314         MOVFF   INDF0, r0x01
01E6 0E00      01315         MOVLW   LOW(_temp1)
01E8 2600      01316         ADDWF   r0x00, F
01EA 0E00      01317         MOVLW   HIGH(_temp1)
01EC 2200      01318         ADDWFC  r0x01, F
01EE C000 FFE9 01319         MOVFF   r0x00, FSR0L
01F2 C000 FFEA 01320         MOVFF   r0x01, FSR0H
01F6 0E20      01321         MOVLW   0x20
01F8 6EEF      01322         MOVWF   INDF0
               01323 ;       .line   303; pic.c      DisplayString(FIRST_LINE,temp1);                        
01FA 0E00      01324         MOVLW   HIGH(_temp1)
01FC 6E00      01325         MOVWF   r0x01
01FE 0E00      01326         MOVLW   LOW(_temp1)
0200 6E00      01327         MOVWF   r0x00
0202 0E80      01328         MOVLW   0x80
0204 6E00      01329         MOVWF   r0x02
0206 5000      01330         MOVF    r0x02, W
0208 6EE5      01331         MOVWF   POSTDEC1
020A 5000      01332         MOVF    r0x01, W
020C 6EE5      01333         MOVWF   POSTDEC1
020E 5000      01334         MOVF    r0x00, W
0210 6EE5      01335         MOVWF   POSTDEC1
0212 0E00      01336         MOVLW   0x00
0214 6EE5      01337         MOVWF   POSTDEC1
0216 EC00 F000 01338         CALL    _DisplayString
021A 0E04      01339         MOVLW   0x04
021C 26E1      01340         ADDWF   FSR1L, F
               01341 ;       .line   304; pic.c      DisplayString(SECOND_LINE,temp2);
021E 0E00      01342         MOVLW   HIGH(_temp2)
0220 6E00      01343         MOVWF   r0x01
0222 0E00      01344         MOVLW   LOW(_temp2)
0224 6E00      01345         MOVWF   r0x00
0226 0E80      01346         MOVLW   0x80
0228 6E00      01347         MOVWF   r0x02
022A 5000      01348         MOVF    r0x02, W
022C 6EE5      01349         MOVWF   POSTDEC1
022E 5000      01350         MOVF    r0x01, W
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0230 6EE5      01351         MOVWF   POSTDEC1
0232 5000      01352         MOVF    r0x00, W
0234 6EE5      01353         MOVWF   POSTDEC1
0236 0E10      01354         MOVLW   0x10
0238 6EE5      01355         MOVWF   POSTDEC1
023A EC00 F000 01356         CALL    _DisplayString
023E 0E04      01357         MOVLW   0x04
0240 26E1      01358         ADDWF   FSR1L, F
0242 D000      01359         BRA     _00340_DS_
0244 01360 _00333_DS_:
0244 0000      01361         BANKSEL _currentMode
               01362 ;       .line   306; pic.c      else if(currentMode==MODE4)
0246 5100      01363         MOVF    _currentMode, W, B
0248 0A04      01364         XORLW   0x04
024A E100      01365         BNZ     _00357_DS_
024C 0000      01366         BANKSEL (_currentMode + 1)
024E 5100      01367         MOVF    (_currentMode + 1), W, B
0250 E000      01368         BZ      _00358_DS_
0252 01369 _00357_DS_:
0252 D000      01370         BRA     _00340_DS_
0254 01371 _00358_DS_:
0254 0000      01372         BANKSEL (_posA + 1)
               01373 ;       .line   308; pic.c      temp2[tabSecond[posA]]=' ';
0256 5100      01374         MOVF    (_posA + 1), W, B
0258 6EE5      01375         MOVWF   POSTDEC1
025A 0000      01376         BANKSEL _posA
025C 5100      01377         MOVF    _posA, W, B
025E 6EE5      01378         MOVWF   POSTDEC1
0260 0E00      01379         MOVLW   0x00
0262 6EE5      01380         MOVWF   POSTDEC1
0264 0E02      01381         MOVLW   0x02
0266 6EE5      01382         MOVWF   POSTDEC1
0268 EC00 F000 01383         CALL    __mulint
026C 6E00      01384         MOVWF   r0x00
026E CFF3 F000 01385         MOVFF   PRODL, r0x01
0272 0E04      01386         MOVLW   0x04
0274 26E1      01387         ADDWF   FSR1L, F
0276 0E00      01388         MOVLW   LOW(_tabSecond)
0278 2600      01389         ADDWF   r0x00, F
027A 0E00      01390         MOVLW   HIGH(_tabSecond)
027C 2200      01391         ADDWFC  r0x01, F
027E C000 FFE9 01392         MOVFF   r0x00, FSR0L
0282 C000 FFEA 01393         MOVFF   r0x01, FSR0H
0286 CFEE F000 01394         MOVFF   POSTINC0, r0x00
028A CFEF F000 01395         MOVFF   INDF0, r0x01
028E 0E00      01396         MOVLW   LOW(_temp2)
0290 2600      01397         ADDWF   r0x00, F
0292 0E00      01398         MOVLW   HIGH(_temp2)
0294 2200      01399         ADDWFC  r0x01, F
0296 C000 FFE9 01400         MOVFF   r0x00, FSR0L
029A C000 FFEA 01401         MOVFF   r0x01, FSR0H
029E 0E20      01402         MOVLW   0x20
02A0 6EEF      01403         MOVWF   INDF0
               01404 ;       .line   309; pic.c      DisplayString(FIRST_LINE,temp1);                        
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02A2 0E00      01405         MOVLW   HIGH(_temp1)
02A4 6E00      01406         MOVWF   r0x01
02A6 0E00      01407         MOVLW   LOW(_temp1)
02A8 6E00      01408         MOVWF   r0x00
02AA 0E80      01409         MOVLW   0x80
02AC 6E00      01410         MOVWF   r0x02
02AE 5000      01411         MOVF    r0x02, W
02B0 6EE5      01412         MOVWF   POSTDEC1
02B2 5000      01413         MOVF    r0x01, W
02B4 6EE5      01414         MOVWF   POSTDEC1
02B6 5000      01415         MOVF    r0x00, W
02B8 6EE5      01416         MOVWF   POSTDEC1
02BA 0E00      01417         MOVLW   0x00
02BC 6EE5      01418         MOVWF   POSTDEC1
02BE EC00 F000 01419         CALL    _DisplayString
02C2 0E04      01420         MOVLW   0x04
02C4 26E1      01421         ADDWF   FSR1L, F
               01422 ;       .line   310; pic.c      DisplayString(SECOND_LINE,temp2);
02C6 0E00      01423         MOVLW   HIGH(_temp2)
02C8 6E00      01424         MOVWF   r0x01
02CA 0E00      01425         MOVLW   LOW(_temp2)
02CC 6E00      01426         MOVWF   r0x00
02CE 0E80      01427         MOVLW   0x80
02D0 6E00      01428         MOVWF   r0x02
02D2 5000      01429         MOVF    r0x02, W
02D4 6EE5      01430         MOVWF   POSTDEC1
02D6 5000      01431         MOVF    r0x01, W
02D8 6EE5      01432         MOVWF   POSTDEC1
02DA 5000      01433         MOVF    r0x00, W
02DC 6EE5      01434         MOVWF   POSTDEC1
02DE 0E10      01435         MOVLW   0x10
02E0 6EE5      01436         MOVWF   POSTDEC1
02E2 EC00 F000 01437         CALL    _DisplayString
02E6 0E04      01438         MOVLW   0x04
02E8 26E1      01439         ADDWF   FSR1L, F
02EA 01440 _00340_DS_:
               01441 ;       .line   313; pic.c      bin--;  
02EA 0EFF      01442         MOVLW   0xff
02EC 0000      01443         BANKSEL _bin
02EE 2700      01444         ADDWF   _bin, F, B
02F0 E200      01445         BC      _10401_DS_
02F2 0000      01446         BANKSEL (_bin + 1)
02F4 0700      01447         DECF    (_bin + 1), F, B
02F6 01448 _10401_DS_:
02F6 D000      01449         BRA     _00344_DS_
02F8 01450 _00342_DS_:
               01451 ;       .line   317; pic.c      DisplayString(FIRST_LINE,textFirstLine);
02F8 0E00      01452         MOVLW   HIGH(_textFirstLine)
02FA 6E00      01453         MOVWF   r0x01
02FC 0E00      01454         MOVLW   LOW(_textFirstLine)
02FE 6E00      01455         MOVWF   r0x00
0300 0E80      01456         MOVLW   0x80
0302 6E00      01457         MOVWF   r0x02
0304 5000      01458         MOVF    r0x02, W
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0306 6EE5      01459         MOVWF   POSTDEC1
0308 5000      01460         MOVF    r0x01, W
030A 6EE5      01461         MOVWF   POSTDEC1
030C 5000      01462         MOVF    r0x00, W
030E 6EE5      01463         MOVWF   POSTDEC1
0310 0E00      01464         MOVLW   0x00
0312 6EE5      01465         MOVWF   POSTDEC1
0314 EC00 F000 01466         CALL    _DisplayString
0318 0E04      01467         MOVLW   0x04
031A 26E1      01468         ADDWF   FSR1L, F
               01469 ;       .line   318; pic.c      DisplayString(SECOND_LINE,textSecondLine);
031C 0E00      01470         MOVLW   HIGH(_textSecondLine)
031E 6E00      01471         MOVWF   r0x01
0320 0E00      01472         MOVLW   LOW(_textSecondLine)
0322 6E00      01473         MOVWF   r0x00
0324 0E80      01474         MOVLW   0x80
0326 6E00      01475         MOVWF   r0x02
0328 5000      01476         MOVF    r0x02, W
032A 6EE5      01477         MOVWF   POSTDEC1
032C 5000      01478         MOVF    r0x01, W
032E 6EE5      01479         MOVWF   POSTDEC1
0330 5000      01480         MOVF    r0x00, W
0332 6EE5      01481         MOVWF   POSTDEC1
0334 0E10      01482         MOVLW   0x10
0336 6EE5      01483         MOVWF   POSTDEC1
0338 EC00 F000 01484         CALL    _DisplayString
033C 0E04      01485         MOVLW   0x04
033E 26E1      01486         ADDWF   FSR1L, F
0340 0000      01487         BANKSEL _bin
               01488 ;       .line   319; pic.c      bin++;
0342 2B00      01489         INCF    _bin, F, B
0344 E300      01490         BNC     _20402_DS_
0346 0000      01491         BANKSEL (_bin + 1)
0348 2B00      01492         INCF    (_bin + 1), F, B
034A 01493 _20402_DS_:
034A 01494 _00344_DS_:
034A CFE4 F000 01495         MOVFF   PREINC1, r0x05
034E CFE4 F000 01496         MOVFF   PREINC1, r0x04
0352 CFE4 F000 01497         MOVFF   PREINC1, r0x03
0356 CFE4 F000 01498         MOVFF   PREINC1, r0x02
035A CFE4 F000 01499         MOVFF   PREINC1, r0x01
035E CFE4 F000 01500         MOVFF   PREINC1, r0x00
0362 CFE4 FFD9 01501         MOVFF   PREINC1, FSR2L
0366 0012      01502         RETURN  
               01503 
               01504 ; ; Starting pCode block
               01505 S_pic__actionButton2    code
0000 01506 _actionButton2:
               01507 ;       .line   247; pic.c      void actionButton2()
0000 CFD9 FFE5 01508         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01509         MOVFF   FSR1L, FSR2L
               01510 ;       .line   249; pic.c      switch(currentMode)
0008 80D8      01511         BSF     STATUS, 0
000A 0000      01512         BANKSEL (_currentMode + 1)
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
000C AF00      01513         BTFSS   (_currentMode + 1), 7, B
000E 90D8      01514         BCF     STATUS, 0
0010 B0D8      01515         BTFSC   STATUS, 0
0012 D000      01516         BRA     _00320_DS_
0014 0000      01517         BANKSEL (_currentMode + 1)
0016 5100      01518         MOVF    (_currentMode + 1), W, B
0018 0F80      01519         ADDLW   0x80
001A 0F80      01520         ADDLW   0x80
001C E100      01521         BNZ     _00324_DS_
001E 0E05      01522         MOVLW   0x05
0020 0000      01523         BANKSEL _currentMode
0022 5D00      01524         SUBWF   _currentMode, W, B
0024 01525 _00324_DS_:
0024 B0D8      01526         BTFSC   STATUS, 0
0026 D000      01527         BRA     _00320_DS_
0028 C000 FFE5 01528         MOVFF   r0x00, POSTDEC1
002C C000 FFE5 01529         MOVFF   r0x01, POSTDEC1
0030 6A00      01530         CLRF    r0x01
0032 0000      01531         BANKSEL _currentMode
0034 3500      01532         RLCF    _currentMode, W, B
0036 3600      01533         RLCF    r0x01, F
0038 34E8      01534         RLCF    WREG, W
003A 3600      01535         RLCF    r0x01, F
003C 0BFC      01536         ANDLW   0xfc
003E 6E00      01537         MOVWF   r0x00
0040 0E00      01538         MOVLW   UPPER(_00325_DS_)
0042 6EFB      01539         MOVWF   PCLATU
0044 0E00      01540         MOVLW   HIGH(_00325_DS_)
0046 6EFA      01541         MOVWF   PCLATH
0048 0E00      01542         MOVLW   LOW(_00325_DS_)
004A 2600      01543         ADDWF   r0x00, F
004C 5000      01544         MOVF    r0x01, W
004E 22FA      01545         ADDWFC  PCLATH, F
0050 B0D8      01546         BTFSC   STATUS, 0
0052 2AFB      01547         INCF    PCLATU, F
0054 5000      01548         MOVF    r0x00, W
0056 CFE4 F000 01549         MOVFF   PREINC1, r0x01
005A CFE4 F000 01550         MOVFF   PREINC1, r0x00
005E 6EF9      01551         MOVWF   PCL
0060 01552 _00325_DS_:
0060 EF00 F000 01553         GOTO    _00313_DS_
0064 EF00 F000 01554         GOTO    _00314_DS_
0068 EF00 F000 01555         GOTO    _00315_DS_
006C EF00 F000 01556         GOTO    _00316_DS_
0070 EF00 F000 01557         GOTO    _00317_DS_
0074 01558 _00313_DS_:
               01559 ;       .line   252; pic.c      currentMode=MODE1;
0074 0E01      01560         MOVLW   0x01
0076 0000      01561         BANKSEL _currentMode
0078 6F00      01562         MOVWF   _currentMode, B
007A 0000      01563         BANKSEL (_currentMode + 1)
007C 6B00      01564         CLRF    (_currentMode + 1), B
               01565 ;       .line   253; pic.c      break;
007E D000      01566         BRA     _00320_DS_
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0080 01567 _00314_DS_:
               01568 ;       .line   255; pic.c      currentMode=MODE3;
0080 0E03      01569         MOVLW   0x03
0082 0000      01570         BANKSEL _currentMode
0084 6F00      01571         MOVWF   _currentMode, B
0086 0000      01572         BANKSEL (_currentMode + 1)
0088 6B00      01573         CLRF    (_currentMode + 1), B
               01574 ;       .line   256; pic.c      break;
008A D000      01575         BRA     _00320_DS_
008C 01576 _00315_DS_:
               01577 ;       .line   258; pic.c      currentMode=MODE4;
008C 0E04      01578         MOVLW   0x04
008E 0000      01579         BANKSEL _currentMode
0090 6F00      01580         MOVWF   _currentMode, B
0092 0000      01581         BANKSEL (_currentMode + 1)
0094 6B00      01582         CLRF    (_currentMode + 1), B
               01583 ;       .line   259; pic.c      break;
0096 D000      01584         BRA     _00320_DS_
0098 01585 _00316_DS_:
               01586 ;       .line   261; pic.c      changeTime();
0098 EC00 F000 01587         CALL    _changeTime
               01588 ;       .line   262; pic.c      break;
009C D000      01589         BRA     _00320_DS_
009E 01590 _00317_DS_:
               01591 ;       .line   264; pic.c      setAlarm();
009E EC00 F000 01592         CALL    _setAlarm
00A2 01593 _00320_DS_:
               01594 ;       .line   269; pic.c      }
00A2 CFE4 FFD9 01595         MOVFF   PREINC1, FSR2L
00A6 0012      01596         RETURN  
               01597 
               01598 ; ; Starting pCode block
               01599 S_pic__actionButton1    code
0000 01600 _actionButton1:
               01601 ;       .line   220; pic.c      void actionButton1()
0000 CFD9 FFE5 01602         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01603         MOVFF   FSR1L, FSR2L
               01604 ;       .line   222; pic.c      switch(currentMode)
0008 80D8      01605         BSF     STATUS, 0
000A 0000      01606         BANKSEL (_currentMode + 1)
000C AF00      01607         BTFSS   (_currentMode + 1), 7, B
000E 90D8      01608         BCF     STATUS, 0
0010 B0D8      01609         BTFSC   STATUS, 0
0012 D000      01610         BRA     _00303_DS_
0014 0000      01611         BANKSEL (_currentMode + 1)
0016 5100      01612         MOVF    (_currentMode + 1), W, B
0018 0F80      01613         ADDLW   0x80
001A 0F80      01614         ADDLW   0x80
001C E100      01615         BNZ     _00307_DS_
001E 0E05      01616         MOVLW   0x05
0020 0000      01617         BANKSEL _currentMode
0022 5D00      01618         SUBWF   _currentMode, W, B
0024 01619 _00307_DS_:
0024 B0D8      01620         BTFSC   STATUS, 0
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0026 D000      01621         BRA     _00303_DS_
0028 C000 FFE5 01622         MOVFF   r0x00, POSTDEC1
002C C000 FFE5 01623         MOVFF   r0x01, POSTDEC1
0030 6A00      01624         CLRF    r0x01
0032 0000      01625         BANKSEL _currentMode
0034 3500      01626         RLCF    _currentMode, W, B
0036 3600      01627         RLCF    r0x01, F
0038 34E8      01628         RLCF    WREG, W
003A 3600      01629         RLCF    r0x01, F
003C 0BFC      01630         ANDLW   0xfc
003E 6E00      01631         MOVWF   r0x00
0040 0E00      01632         MOVLW   UPPER(_00308_DS_)
0042 6EFB      01633         MOVWF   PCLATU
0044 0E00      01634         MOVLW   HIGH(_00308_DS_)
0046 6EFA      01635         MOVWF   PCLATH
0048 0E00      01636         MOVLW   LOW(_00308_DS_)
004A 2600      01637         ADDWF   r0x00, F
004C 5000      01638         MOVF    r0x01, W
004E 22FA      01639         ADDWFC  PCLATH, F
0050 B0D8      01640         BTFSC   STATUS, 0
0052 2AFB      01641         INCF    PCLATU, F
0054 5000      01642         MOVF    r0x00, W
0056 CFE4 F000 01643         MOVFF   PREINC1, r0x01
005A CFE4 F000 01644         MOVFF   PREINC1, r0x00
005E 6EF9      01645         MOVWF   PCL
0060 01646 _00308_DS_:
0060 EF00 F000 01647         GOTO    _00296_DS_
0064 EF00 F000 01648         GOTO    _00297_DS_
0068 EF00 F000 01649         GOTO    _00298_DS_
006C EF00 F000 01650         GOTO    _00299_DS_
0070 EF00 F000 01651         GOTO    _00300_DS_
0074 01652 _00296_DS_:
               01653 ;       .line   225; pic.c      currentMode=MODE1;
0074 0E01      01654         MOVLW   0x01
0076 0000      01655         BANKSEL _currentMode
0078 6F00      01656         MOVWF   _currentMode, B
007A 0000      01657         BANKSEL (_currentMode + 1)
007C 6B00      01658         CLRF    (_currentMode + 1), B
               01659 ;       .line   226; pic.c      break;
007E D000      01660         BRA     _00303_DS_
0080 01661 _00297_DS_:
               01662 ;       .line   228; pic.c      currentMode=MODE2;
0080 0E02      01663         MOVLW   0x02
0082 0000      01664         BANKSEL _currentMode
0084 6F00      01665         MOVWF   _currentMode, B
0086 0000      01666         BANKSEL (_currentMode + 1)
0088 6B00      01667         CLRF    (_currentMode + 1), B
               01668 ;       .line   229; pic.c      break;
008A D000      01669         BRA     _00303_DS_
008C 01670 _00298_DS_:
               01671 ;       .line   231; pic.c      currentMode=MODE1;
008C 0E01      01672         MOVLW   0x01
008E 0000      01673         BANKSEL _currentMode
0090 6F00      01674         MOVWF   _currentMode, B
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0092 0000      01675         BANKSEL (_currentMode + 1)
0094 6B00      01676         CLRF    (_currentMode + 1), B
               01677 ;       .line   232; pic.c      break;
0096 D000      01678         BRA     _00303_DS_
0098 01679 _00299_DS_:
               01680 ;       .line   234; pic.c      move();
0098 EC00 F000 01681         CALL    _move
               01682 ;       .line   235; pic.c      break;
009C D000      01683         BRA     _00303_DS_
009E 01684 _00300_DS_:
               01685 ;       .line   237; pic.c      move();
009E EC00 F000 01686         CALL    _move
00A2 01687 _00303_DS_:
               01688 ;       .line   242; pic.c      }
00A2 CFE4 FFD9 01689         MOVFF   PREINC1, FSR2L
00A6 0012      01690         RETURN  
               01691 
               01692 ; ; Starting pCode block
               01693 S_pic__move     code
0000 01694 _move:
               01695 ;       .line   195; pic.c      void move()
0000 CFD9 FFE5 01696         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01697         MOVFF   FSR1L, FSR2L
0008 0000      01698         BANKSEL _currentMode
               01699 ;       .line   197; pic.c      if(currentMode==MODE3)
000A 5100      01700         MOVF    _currentMode, W, B
000C 0A03      01701         XORLW   0x03
000E E100      01702         BNZ     _00284_DS_
0010 0000      01703         BANKSEL (_currentMode + 1)
0012 5100      01704         MOVF    (_currentMode + 1), W, B
0014 E000      01705         BZ      _00285_DS_
0016 01706 _00284_DS_:
0016 D000      01707         BRA     _00276_DS_
0018 01708 _00285_DS_:
0018 0000      01709         BANKSEL _posC
               01710 ;       .line   199; pic.c      if(posC==LONGC)
001A 5100      01711         MOVF    _posC, W, B
001C 0A05      01712         XORLW   0x05
001E E100      01713         BNZ     _00286_DS_
0020 0000      01714         BANKSEL (_posC + 1)
0022 5100      01715         MOVF    (_posC + 1), W, B
0024 E000      01716         BZ      _00287_DS_
0026 01717 _00286_DS_:
0026 D000      01718         BRA     _00268_DS_
0028 01719 _00287_DS_:
0028 0000      01720         BANKSEL _posC
               01721 ;       .line   201; pic.c      posC=0;
002A 6B00      01722         CLRF    _posC, B
002C 0000      01723         BANKSEL (_posC + 1)
002E 6B00      01724         CLRF    (_posC + 1), B
0030 0000      01725         BANKSEL _currentMode
               01726 ;       .line   202; pic.c      currentMode=MODE0;      
0032 6B00      01727         CLRF    _currentMode, B
0034 0000      01728         BANKSEL (_currentMode + 1)
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0036 6B00      01729         CLRF    (_currentMode + 1), B
0038 D000      01730         BRA     _00278_DS_
003A 01731 _00268_DS_:
003A 0000      01732         BANKSEL _posC
               01733 ;       .line   205; pic.c      posC++;
003C 2B00      01734         INCF    _posC, F, B
003E E300      01735         BNC     _30403_DS_
0040 0000      01736         BANKSEL (_posC + 1)
0042 2B00      01737         INCF    (_posC + 1), F, B
0044 01738 _30403_DS_:
0044 D000      01739         BRA     _00278_DS_
0046 01740 _00276_DS_:
0046 0000      01741         BANKSEL _currentMode
               01742 ;       .line   208; pic.c      else if(currentMode==MODE4)     
0048 5100      01743         MOVF    _currentMode, W, B
004A 0A04      01744         XORLW   0x04
004C E100      01745         BNZ     _00288_DS_
004E 0000      01746         BANKSEL (_currentMode + 1)
0050 5100      01747         MOVF    (_currentMode + 1), W, B
0052 E000      01748         BZ      _00289_DS_
0054 01749 _00288_DS_:
0054 D000      01750         BRA     _00278_DS_
0056 01751 _00289_DS_:
0056 0000      01752         BANKSEL _posA
               01753 ;       .line   210; pic.c      if(posA==LONGA)
0058 5100      01754         MOVF    _posA, W, B
005A 0A04      01755         XORLW   0x04
005C E100      01756         BNZ     _00290_DS_
005E 0000      01757         BANKSEL (_posA + 1)
0060 5100      01758         MOVF    (_posA + 1), W, B
0062 E000      01759         BZ      _00291_DS_
0064 01760 _00290_DS_:
0064 D000      01761         BRA     _00271_DS_
0066 01762 _00291_DS_:
0066 0000      01763         BANKSEL _posA
               01764 ;       .line   212; pic.c      posA=0;
0068 6B00      01765         CLRF    _posA, B
006A 0000      01766         BANKSEL (_posA + 1)
006C 6B00      01767         CLRF    (_posA + 1), B
006E 0000      01768         BANKSEL _currentMode
               01769 ;       .line   213; pic.c      currentMode=MODE0;              
0070 6B00      01770         CLRF    _currentMode, B
0072 0000      01771         BANKSEL (_currentMode + 1)
0074 6B00      01772         CLRF    (_currentMode + 1), B
0076 D000      01773         BRA     _00278_DS_
0078 01774 _00271_DS_:
0078 0000      01775         BANKSEL _posA
               01776 ;       .line   216; pic.c      posA++;
007A 2B00      01777         INCF    _posA, F, B
007C E300      01778         BNC     _40404_DS_
007E 0000      01779         BANKSEL (_posA + 1)
0080 2B00      01780         INCF    (_posA + 1), F, B
0082 01781 _40404_DS_:
0082 01782 _00278_DS_:
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0082 CFE4 FFD9 01783         MOVFF   PREINC1, FSR2L
0086 0012      01784         RETURN  
               01785 
               01786 ; ; Starting pCode block
               01787 S_pic__setAlarm code
0000 01788 _setAlarm:
               01789 ;       .line   168; pic.c      void setAlarm()
0000 CFD9 FFE5 01790         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01791         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01792         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01793         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01794         MOVFF   r0x02, POSTDEC1
0014 0000      01795         BANKSEL _posA
               01796 ;       .line   171; pic.c      if(posA!=0)
0016 5100      01797         MOVF    _posA, W, B
0018 0000      01798         BANKSEL (_posA + 1)
001A 1100      01799         IORWF   (_posA + 1), W, B
001C B4D8      01800         BTFSC   STATUS, 2
001E D000      01801         BRA     _00244_DS_
0020 0000      01802         BANKSEL (_posA + 1)
               01803 ;       .line   173; pic.c      textSecondLine[tabSecond[posA]]++;
0022 5100      01804         MOVF    (_posA + 1), W, B
0024 6EE5      01805         MOVWF   POSTDEC1
0026 0000      01806         BANKSEL _posA
0028 5100      01807         MOVF    _posA, W, B
002A 6EE5      01808         MOVWF   POSTDEC1
002C 0E00      01809         MOVLW   0x00
002E 6EE5      01810         MOVWF   POSTDEC1
0030 0E02      01811         MOVLW   0x02
0032 6EE5      01812         MOVWF   POSTDEC1
0034 EC00 F000 01813         CALL    __mulint
0038 6E00      01814         MOVWF   r0x00
003A CFF3 F000 01815         MOVFF   PRODL, r0x01
003E 0E04      01816         MOVLW   0x04
0040 26E1      01817         ADDWF   FSR1L, F
0042 0E00      01818         MOVLW   LOW(_tabSecond)
0044 2600      01819         ADDWF   r0x00, F
0046 0E00      01820         MOVLW   HIGH(_tabSecond)
0048 2200      01821         ADDWFC  r0x01, F
004A C000 FFE9 01822         MOVFF   r0x00, FSR0L
004E C000 FFEA 01823         MOVFF   r0x01, FSR0H
0052 CFEE F000 01824         MOVFF   POSTINC0, r0x00
0056 CFEF F000 01825         MOVFF   INDF0, r0x01
005A 0E00      01826         MOVLW   LOW(_textSecondLine)
005C 2600      01827         ADDWF   r0x00, F
005E 0E00      01828         MOVLW   HIGH(_textSecondLine)
0060 2200      01829         ADDWFC  r0x01, F
0062 C000 FFE9 01830         MOVFF   r0x00, FSR0L
0066 C000 FFEA 01831         MOVFF   r0x01, FSR0H
006A CFEF F000 01832         MOVFF   INDF0, r0x02
006E 2A00      01833         INCF    r0x02, F
0070 C000 FFE9 01834         MOVFF   r0x00, FSR0L
0074 C000 FFEA 01835         MOVFF   r0x01, FSR0H
0078 C000 FFEF 01836         MOVFF   r0x02, INDF0
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
007C 0000      01837         BANKSEL (_textSecondLine + 13)
               01838 ;       .line   174; pic.c      if((textSecondLine[13]>=':')||(textSecondLine[10]>=':')||(textSecondLine[12]>='6')||(textSecondLine[9]>=':'))
007E 5100      01839         MOVF    (_textSecondLine + 13), W, B
0080 0F80      01840         ADDLW   0x80
0082 0F46      01841         ADDLW   0x46
0084 E200      01842         BC      _00231_DS_
0086 0000      01843         BANKSEL (_textSecondLine + 10)
0088 5100      01844         MOVF    (_textSecondLine + 10), W, B
008A 0F80      01845         ADDLW   0x80
008C 0F46      01846         ADDLW   0x46
008E E200      01847         BC      _00231_DS_
0090 0000      01848         BANKSEL (_textSecondLine + 12)
0092 5100      01849         MOVF    (_textSecondLine + 12), W, B
0094 0F80      01850         ADDLW   0x80
0096 0F4A      01851         ADDLW   0x4a
0098 E200      01852         BC      _00231_DS_
009A 0000      01853         BANKSEL (_textSecondLine + 9)
009C 5100      01854         MOVF    (_textSecondLine + 9), W, B
009E 0F80      01855         ADDLW   0x80
00A0 0F46      01856         ADDLW   0x46
00A2 E300      01857         BNC     _00232_DS_
00A4 01858 _00231_DS_:
               01859 ;       .line   175; pic.c      textSecondLine[tabSecond[posA]]='0';
00A4 C000 FFE9 01860         MOVFF   r0x00, FSR0L
00A8 C000 FFEA 01861         MOVFF   r0x01, FSR0H
00AC 0E30      01862         MOVLW   0x30
00AE 6EEF      01863         MOVWF   INDF0
00B0 01864 _00232_DS_:
               01865 ;       .line   176; pic.c      if(((textSecondLine[9]>='2')&&(textSecondLine[10]>='4'))||(textSecondLine[9]>='3'))//24h
00B0 C000 F000 01866         MOVFF   (_textSecondLine + 9), r0x02
00B4 5000      01867         MOVF    r0x02, W
00B6 0F80      01868         ADDLW   0x80
00B8 0F4E      01869         ADDLW   0x4e
00BA E300      01870         BNC     _00239_DS_
00BC 0000      01871         BANKSEL (_textSecondLine + 10)
00BE 5100      01872         MOVF    (_textSecondLine + 10), W, B
00C0 0F80      01873         ADDLW   0x80
00C2 0F4C      01874         ADDLW   0x4c
00C4 E200      01875         BC      _00236_DS_
00C6 01876 _00239_DS_:
00C6 5000      01877         MOVF    r0x02, W
00C8 0F80      01878         ADDLW   0x80
00CA 0F4D      01879         ADDLW   0x4d
00CC E300      01880         BNC     _00246_DS_
00CE 01881 _00236_DS_:
               01882 ;       .line   177; pic.c      textSecondLine[tabSecond[posA]]='0';
00CE C000 FFE9 01883         MOVFF   r0x00, FSR0L
00D2 C000 FFEA 01884         MOVFF   r0x01, FSR0H
00D6 0E30      01885         MOVLW   0x30
00D8 6EEF      01886         MOVWF   INDF0
00DA D000      01887         BRA     _00246_DS_
00DC 01888 _00244_DS_:
00DC 0000      01889         BANKSEL (_textSecondLine + 7)
               01890 ;       .line   181; pic.c      if(textSecondLine[7]=='N')
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00DE 5100      01891         MOVF    (_textSecondLine + 7), W, B
00E0 0A4E      01892         XORLW   0x4e
00E2 E100      01893         BNZ     _00241_DS_
               01894 ;       .line   183; pic.c      isAlarm=1;
00E4 0E01      01895         MOVLW   0x01
00E6 0000      01896         BANKSEL _isAlarm
00E8 6F00      01897         MOVWF   _isAlarm, B
00EA 0000      01898         BANKSEL (_isAlarm + 1)
00EC 6B00      01899         CLRF    (_isAlarm + 1), B
               01900 ;       .line   184; pic.c      textSecondLine[7]='Y';
00EE 0E59      01901         MOVLW   0x59
00F0 0000      01902         BANKSEL (_textSecondLine + 7)
00F2 6F00      01903         MOVWF   (_textSecondLine + 7), B
00F4 D000      01904         BRA     _00246_DS_
00F6 01905 _00241_DS_:
               01906 ;       .line   188; pic.c      textSecondLine[7]='N';
00F6 0E4E      01907         MOVLW   0x4e
00F8 0000      01908         BANKSEL (_textSecondLine + 7)
00FA 6F00      01909         MOVWF   (_textSecondLine + 7), B
00FC 0000      01910         BANKSEL _isAlarm
               01911 ;       .line   189; pic.c      isAlarm=0;              
00FE 6B00      01912         CLRF    _isAlarm, B
0100 0000      01913         BANKSEL (_isAlarm + 1)
0102 6B00      01914         CLRF    (_isAlarm + 1), B
0104 01915 _00246_DS_:
0104 CFE4 F000 01916         MOVFF   PREINC1, r0x02
0108 CFE4 F000 01917         MOVFF   PREINC1, r0x01
010C CFE4 F000 01918         MOVFF   PREINC1, r0x00
0110 CFE4 FFD9 01919         MOVFF   PREINC1, FSR2L
0114 0012      01920         RETURN  
               01921 
               01922 ; ; Starting pCode block
               01923 S_pic__changeTime       code
0000 01924 _changeTime:
               01925 ;       .line   157; pic.c      void changeTime()
0000 CFD9 FFE5 01926         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01927         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01928         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01929         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01930         MOVFF   r0x02, POSTDEC1
0014 0000      01931         BANKSEL (_posC + 1)
               01932 ;       .line   159; pic.c      textFirstLine[tabFirst[posC]]++;
0016 5100      01933         MOVF    (_posC + 1), W, B
0018 6EE5      01934         MOVWF   POSTDEC1
001A 0000      01935         BANKSEL _posC
001C 5100      01936         MOVF    _posC, W, B
001E 6EE5      01937         MOVWF   POSTDEC1
0020 0E00      01938         MOVLW   0x00
0022 6EE5      01939         MOVWF   POSTDEC1
0024 0E02      01940         MOVLW   0x02
0026 6EE5      01941         MOVWF   POSTDEC1
0028 EC00 F000 01942         CALL    __mulint
002C 6E00      01943         MOVWF   r0x00
002E CFF3 F000 01944         MOVFF   PRODL, r0x01
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0032 0E04      01945         MOVLW   0x04
0034 26E1      01946         ADDWF   FSR1L, F
0036 0E00      01947         MOVLW   LOW(_tabFirst)
0038 2600      01948         ADDWF   r0x00, F
003A 0E00      01949         MOVLW   HIGH(_tabFirst)
003C 2200      01950         ADDWFC  r0x01, F
003E C000 FFE9 01951         MOVFF   r0x00, FSR0L
0042 C000 FFEA 01952         MOVFF   r0x01, FSR0H
0046 CFEE F000 01953         MOVFF   POSTINC0, r0x00
004A CFEF F000 01954         MOVFF   INDF0, r0x01
004E 0E00      01955         MOVLW   LOW(_textFirstLine)
0050 2600      01956         ADDWF   r0x00, F
0052 0E00      01957         MOVLW   HIGH(_textFirstLine)
0054 2200      01958         ADDWFC  r0x01, F
0056 C000 FFE9 01959         MOVFF   r0x00, FSR0L
005A C000 FFEA 01960         MOVFF   r0x01, FSR0H
005E CFEF F000 01961         MOVFF   INDF0, r0x02
0062 2A00      01962         INCF    r0x02, F
0064 C000 FFE9 01963         MOVFF   r0x00, FSR0L
0068 C000 FFEA 01964         MOVFF   r0x01, FSR0H
006C C000 FFEF 01965         MOVFF   r0x02, INDF0
0070 0000      01966         BANKSEL (_textFirstLine + 13)
               01967 ;       .line   161; pic.c      if((textFirstLine[13]>=':')||(textFirstLine[10]>=':')||(textFirstLine[12]>='6')||(textFirstLine[9]>='6')||(textFirstLine[7]>=':'))
0072 5100      01968         MOVF    (_textFirstLine + 13), W, B
0074 0F80      01969         ADDLW   0x80
0076 0F46      01970         ADDLW   0x46
0078 E200      01971         BC      _00202_DS_
007A 0000      01972         BANKSEL (_textFirstLine + 10)
007C 5100      01973         MOVF    (_textFirstLine + 10), W, B
007E 0F80      01974         ADDLW   0x80
0080 0F46      01975         ADDLW   0x46
0082 E200      01976         BC      _00202_DS_
0084 0000      01977         BANKSEL (_textFirstLine + 12)
0086 5100      01978         MOVF    (_textFirstLine + 12), W, B
0088 0F80      01979         ADDLW   0x80
008A 0F4A      01980         ADDLW   0x4a
008C E200      01981         BC      _00202_DS_
008E 0000      01982         BANKSEL (_textFirstLine + 9)
0090 5100      01983         MOVF    (_textFirstLine + 9), W, B
0092 0F80      01984         ADDLW   0x80
0094 0F4A      01985         ADDLW   0x4a
0096 E200      01986         BC      _00202_DS_
0098 0000      01987         BANKSEL (_textFirstLine + 7)
009A 5100      01988         MOVF    (_textFirstLine + 7), W, B
009C 0F80      01989         ADDLW   0x80
009E 0F46      01990         ADDLW   0x46
00A0 E300      01991         BNC     _00203_DS_
00A2 01992 _00202_DS_:
               01993 ;       .line   162; pic.c      textFirstLine[tabFirst[posC]]='0';
00A2 C000 FFE9 01994         MOVFF   r0x00, FSR0L
00A6 C000 FFEA 01995         MOVFF   r0x01, FSR0H
00AA 0E30      01996         MOVLW   0x30
00AC 6EEF      01997         MOVWF   INDF0
00AE 01998 _00203_DS_:
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01999 ;       .line   163; pic.c      if(((textFirstLine[6]>='2')&&(textFirstLine[7]>='4'))||(textFirstLine[6]>='3'))//24h 
00AE C000 F000 02000         MOVFF   (_textFirstLine + 6), r0x02
00B2 5000      02001         MOVF    r0x02, W
00B4 0F80      02002         ADDLW   0x80
00B6 0F4E      02003         ADDLW   0x4e
00B8 E300      02004         BNC     _00211_DS_
00BA 0000      02005         BANKSEL (_textFirstLine + 7)
00BC 5100      02006         MOVF    (_textFirstLine + 7), W, B
00BE 0F80      02007         ADDLW   0x80
00C0 0F4C      02008         ADDLW   0x4c
00C2 E200      02009         BC      _00208_DS_
00C4 02010 _00211_DS_:
00C4 5000      02011         MOVF    r0x02, W
00C6 0F80      02012         ADDLW   0x80
00C8 0F4D      02013         ADDLW   0x4d
00CA E300      02014         BNC     _00212_DS_
00CC 02015 _00208_DS_:
               02016 ;       .line   164; pic.c      textFirstLine[tabFirst[posC]]='0';
00CC C000 FFE9 02017         MOVFF   r0x00, FSR0L
00D0 C000 FFEA 02018         MOVFF   r0x01, FSR0H
00D4 0E30      02019         MOVLW   0x30
00D6 6EEF      02020         MOVWF   INDF0
00D8 02021 _00212_DS_:
00D8 CFE4 F000 02022         MOVFF   PREINC1, r0x02
00DC CFE4 F000 02023         MOVFF   PREINC1, r0x01
00E0 CFE4 F000 02024         MOVFF   PREINC1, r0x00
00E4 CFE4 FFD9 02025         MOVFF   PREINC1, FSR2L
00E8 0012      02026         RETURN  
               02027 
               02028 ; ; Starting pCode block
               02029 S_pic__checkAlarm       code
0000 02030 _checkAlarm:
               02031 ;       .line   147; pic.c      void checkAlarm()
0000 CFD9 FFE5 02032         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 02033         MOVFF   FSR1L, FSR2L
0008 0000      02034         BANKSEL (_textFirstLine + 6)
               02035 ;       .line   149; pic.c      if((textFirstLine[6]==textSecondLine[9])&&(textFirstLine[7]==textSecondLine[10])&&(textFirstLine[9]==textSecondLine[12])
000A 5100      02036         MOVF    (_textFirstLine + 6), W, B
000C 0000      02037         BANKSEL (_textSecondLine + 9)
000E 1900      02038         XORWF   (_textSecondLine + 9), W, B
0010 E100      02039         BNZ     _00178_DS_
0012 02040 _00187_DS_:
0012 0000      02041         BANKSEL (_textFirstLine + 7)
0014 5100      02042         MOVF    (_textFirstLine + 7), W, B
0016 0000      02043         BANKSEL (_textSecondLine + 10)
0018 1900      02044         XORWF   (_textSecondLine + 10), W, B
001A E100      02045         BNZ     _00178_DS_
001C 02046 _00189_DS_:
001C 0000      02047         BANKSEL (_textFirstLine + 9)
001E 5100      02048         MOVF    (_textFirstLine + 9), W, B
0020 0000      02049         BANKSEL (_textSecondLine + 12)
0022 1900      02050         XORWF   (_textSecondLine + 12), W, B
0024 E100      02051         BNZ     _00178_DS_
0026 02052 _00191_DS_:
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0026 0000      02053         BANKSEL (_textFirstLine + 10)
               02054 ;       .line   150; pic.c      &&(textFirstLine[10]==textSecondLine[13])&&(textFirstLine[12]=='0')&&(textFirstLine[13]=='0'))
0028 5100      02055         MOVF    (_textFirstLine + 10), W, B
002A 0000      02056         BANKSEL (_textSecondLine + 13)
002C 1900      02057         XORWF   (_textSecondLine + 13), W, B
002E E100      02058         BNZ     _00178_DS_
0030 02059 _00193_DS_:
0030 0000      02060         BANKSEL (_textFirstLine + 12)
0032 5100      02061         MOVF    (_textFirstLine + 12), W, B
0034 0A30      02062         XORLW   0x30
0036 E100      02063         BNZ     _00178_DS_
0038 02064 _00195_DS_:
0038 0000      02065         BANKSEL (_textFirstLine + 13)
003A 5100      02066         MOVF    (_textFirstLine + 13), W, B
003C 0A30      02067         XORLW   0x30
003E E100      02068         BNZ     _00178_DS_
               02069 ;       .line   152; pic.c      ringtone=30;//30 seconds of ringtone    
0040 0E1E      02070         MOVLW   0x1e
0042 0000      02071         BANKSEL _ringtone
0044 6F00      02072         MOVWF   _ringtone, B
0046 0000      02073         BANKSEL (_ringtone + 1)
0048 6B00      02074         CLRF    (_ringtone + 1), B
004A 02075 _00178_DS_:
004A CFE4 FFD9 02076         MOVFF   PREINC1, FSR2L
004E 0012      02077         RETURN  
               02078 
               02079 ; ; Starting pCode block
               02080 S_pic__increment        code
0000 02081 _increment:
               02082 ;       .line   106; pic.c      void increment()
0000 CFD9 FFE5 02083         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 02084         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 02085         MOVFF   r0x00, POSTDEC1
               02086 ;       .line   108; pic.c      textFirstLine[13]++;
000C C000 F000 02087         MOVFF   (_textFirstLine + 13), r0x00
0010 2A00      02088         INCF    r0x00, F
0012 5000      02089         MOVF    r0x00, W
0014 0000      02090         BANKSEL (_textFirstLine + 13)
0016 6F00      02091         MOVWF   (_textFirstLine + 13), B
               02092 ;       .line   109; pic.c      if(textFirstLine[13]==':')// char after '9'
0018 5000      02093         MOVF    r0x00, W
001A 0A3A      02094         XORLW   0x3a
001C E000      02095         BZ      _00156_DS_
001E D000      02096         BRA     _00147_DS_
0020 02097 _00156_DS_:
               02098 ;       .line   111; pic.c      textFirstLine[13]='0';
0020 0E30      02099         MOVLW   0x30
0022 0000      02100         BANKSEL (_textFirstLine + 13)
0024 6F00      02101         MOVWF   (_textFirstLine + 13), B
               02102 ;       .line   112; pic.c      textFirstLine[12]++;
0026 C000 F000 02103         MOVFF   (_textFirstLine + 12), r0x00
002A 2A00      02104         INCF    r0x00, F
002C 5000      02105         MOVF    r0x00, W
002E 0000      02106         BANKSEL (_textFirstLine + 12)
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0030 6F00      02107         MOVWF   (_textFirstLine + 12), B
               02108 ;       .line   114; pic.c      if(textFirstLine[12]=='6')// 60 sec
0032 5000      02109         MOVF    r0x00, W
0034 0A36      02110         XORLW   0x36
0036 E000      02111         BZ      _00158_DS_
0038 D000      02112         BRA     _00147_DS_
003A 02113 _00158_DS_:
               02114 ;       .line   116; pic.c      textFirstLine[12]='0';
003A 0E30      02115         MOVLW   0x30
003C 0000      02116         BANKSEL (_textFirstLine + 12)
003E 6F00      02117         MOVWF   (_textFirstLine + 12), B
               02118 ;       .line   117; pic.c      textFirstLine[10]++;
0040 C000 F000 02119         MOVFF   (_textFirstLine + 10), r0x00
0044 2A00      02120         INCF    r0x00, F
0046 5000      02121         MOVF    r0x00, W
0048 0000      02122         BANKSEL (_textFirstLine + 10)
004A 6F00      02123         MOVWF   (_textFirstLine + 10), B
               02124 ;       .line   119; pic.c      if(textFirstLine[10]==':')
004C 5000      02125         MOVF    r0x00, W
004E 0A3A      02126         XORLW   0x3a
0050 E100      02127         BNZ     _00147_DS_
               02128 ;       .line   121; pic.c      textFirstLine[10]='0';
0052 0E30      02129         MOVLW   0x30
0054 0000      02130         BANKSEL (_textFirstLine + 10)
0056 6F00      02131         MOVWF   (_textFirstLine + 10), B
               02132 ;       .line   122; pic.c      textFirstLine[9]++;
0058 C000 F000 02133         MOVFF   (_textFirstLine + 9), r0x00
005C 2A00      02134         INCF    r0x00, F
005E 5000      02135         MOVF    r0x00, W
0060 0000      02136         BANKSEL (_textFirstLine + 9)
0062 6F00      02137         MOVWF   (_textFirstLine + 9), B
               02138 ;       .line   124; pic.c      if(textFirstLine[9]=='6')
0064 5000      02139         MOVF    r0x00, W
0066 0A36      02140         XORLW   0x36
0068 E100      02141         BNZ     _00147_DS_
               02142 ;       .line   126; pic.c      textFirstLine[9]='0';
006A 0E30      02143         MOVLW   0x30
006C 0000      02144         BANKSEL (_textFirstLine + 9)
006E 6F00      02145         MOVWF   (_textFirstLine + 9), B
               02146 ;       .line   127; pic.c      textFirstLine[7]++;
0070 C000 F000 02147         MOVFF   (_textFirstLine + 7), r0x00
0074 2A00      02148         INCF    r0x00, F
0076 5000      02149         MOVF    r0x00, W
0078 0000      02150         BANKSEL (_textFirstLine + 7)
007A 6F00      02151         MOVWF   (_textFirstLine + 7), B
               02152 ;       .line   128; pic.c      if(textFirstLine[7]=='4')// 24h
007C 5000      02153         MOVF    r0x00, W
007E 0A34      02154         XORLW   0x34
0080 E100      02155         BNZ     _00147_DS_
               02156 ;       .line   130; pic.c      textFirstLine[7]='0';
0082 0E30      02157         MOVLW   0x30
0084 0000      02158         BANKSEL (_textFirstLine + 7)
0086 6F00      02159         MOVWF   (_textFirstLine + 7), B
               02160 ;       .line   131; pic.c      textFirstLine[6]++;
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0088 C000 F000 02161         MOVFF   (_textFirstLine + 6), r0x00
008C 2A00      02162         INCF    r0x00, F
008E 5000      02163         MOVF    r0x00, W
0090 0000      02164         BANKSEL (_textFirstLine + 6)
0092 6F00      02165         MOVWF   (_textFirstLine + 6), B
               02166 ;       .line   132; pic.c      if(textFirstLine[6]=='3')//24h
0094 5000      02167         MOVF    r0x00, W
0096 0A33      02168         XORLW   0x33
0098 E100      02169         BNZ     _00147_DS_
               02170 ;       .line   134; pic.c      textFirstLine[6]='0';
009A 0E30      02171         MOVLW   0x30
009C 0000      02172         BANKSEL (_textFirstLine + 6)
009E 6F00      02173         MOVWF   (_textFirstLine + 6), B
00A0 02174 _00147_DS_:
00A0 CFE4 F000 02175         MOVFF   PREINC1, r0x00
00A4 CFE4 FFD9 02176         MOVFF   PREINC1, FSR2L
00A8 0012      02177         RETURN  
               02178 
               02179 ; ; Starting pCode block
               02180 S_pic__HighISR  code
0000 02181 _HighISR:
               02182 ;       .line   56; pic.c       void HighISR (void) __interrupt (1)
0000 CFE8 FFE5 02183         MOVFF   WREG, POSTDEC1
0004 CFD8 FFE5 02184         MOVFF   STATUS, POSTDEC1
0008 CFE0 FFE5 02185         MOVFF   BSR, POSTDEC1
000C CFF3 FFE5 02186         MOVFF   PRODL, POSTDEC1
0010 CFF4 FFE5 02187         MOVFF   PRODH, POSTDEC1
0014 CFE9 FFE5 02188         MOVFF   FSR0L, POSTDEC1
0018 CFEA FFE5 02189         MOVFF   FSR0H, POSTDEC1
001C CFFA FFE5 02190         MOVFF   PCLATH, POSTDEC1
0020 CFFB FFE5 02191         MOVFF   PCLATU, POSTDEC1
0024 CFD9 FFE5 02192         MOVFF   FSR2L, POSTDEC1
0028 CFE1 FFD9 02193         MOVFF   FSR1L, FSR2L
002C C000 FFE5 02194         MOVFF   r0x00, POSTDEC1
0030 C000 FFE5 02195         MOVFF   r0x01, POSTDEC1
0034 C000 FFE5 02196         MOVFF   r0x02, POSTDEC1
               02197 ;       .line   59; pic.c       if(INTCON3bits.INT1F)
0038 A000      02198         BTFSS   _INTCON3bits, 0
003A D000      02199         BRA     _00106_DS_
               02200 ;       .line   62; pic.c       actionButton1();
003C EC00 F000 02201         CALL    _actionButton1
               02202 ;       .line   63; pic.c       INTCON3bits.INT1F  = 0;  
0040 9000      02203         BCF     _INTCON3bits, 0
0042 02204 _00106_DS_:
               02205 ;       .line   66; pic.c       if(INTCON3bits.INT3F)
0042 A400      02206         BTFSS   _INTCON3bits, 2
0044 D000      02207         BRA     _00108_DS_
               02208 ;       .line   69; pic.c       actionButton2();
0046 EC00 F000 02209         CALL    _actionButton2
               02210 ;       .line   70; pic.c       INTCON3bits.INT3F  = 0; 
004A 9400      02211         BCF     _INTCON3bits, 2
004C 02212 _00108_DS_:
               02213 ;       .line   74; pic.c       if(INTCONbits.TMR0IF)
004C A400      02214         BTFSS   _INTCONbits, 2
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
004E D000      02215         BRA     _00120_DS_
0050 0000      02216         BANKSEL _count
               02217 ;       .line   77; pic.c       count++;
0052 2B00      02218         INCF    _count, F, B
0054 E300      02219         BNC     _50405_DS_
0056 0000      02220         BANKSEL (_count + 1)
0058 2B00      02221         INCF    (_count + 1), F, B
005A 02222 _50405_DS_:
               02223 ;       .line   78; pic.c       if(count>=CLOCK) 
005A 0E5B      02224         MOVLW   0x5b
005C 0000      02225         BANKSEL (_count + 1)
005E 5D00      02226         SUBWF   (_count + 1), W, B
0060 E100      02227         BNZ     _00129_DS_
0062 0E01      02228         MOVLW   0x01
0064 0000      02229         BANKSEL _count
0066 5D00      02230         SUBWF   _count, W, B
0068 02231 _00129_DS_:
0068 A0D8      02232         BTFSS   STATUS, 0
006A D000      02233         BRA     _00117_DS_
               02234 ;       .line   80; pic.c       count=count-CLOCK;
006C 0EFF      02235         MOVLW   0xff
006E 0000      02236         BANKSEL _count
0070 2700      02237         ADDWF   _count, F, B
0072 0EA4      02238         MOVLW   0xa4
0074 0000      02239         BANKSEL (_count + 1)
0076 2300      02240         ADDWFC  (_count + 1), F, B
0078 0000      02241         BANKSEL _currentMode
               02242 ;       .line   81; pic.c       if(currentMode==MODE0)
007A 5100      02243         MOVF    _currentMode, W, B
007C 0000      02244         BANKSEL (_currentMode + 1)
007E 1100      02245         IORWF   (_currentMode + 1), W, B
0080 E100      02246         BNZ     _00110_DS_
               02247 ;       .line   83; pic.c       DisplayString(FIRST_LINE,textFirstLine);                        
0082 0E00      02248         MOVLW   HIGH(_textFirstLine)
0084 6E00      02249         MOVWF   r0x01
0086 0E00      02250         MOVLW   LOW(_textFirstLine)
0088 6E00      02251         MOVWF   r0x00
008A 0E80      02252         MOVLW   0x80
008C 6E00      02253         MOVWF   r0x02
008E 5000      02254         MOVF    r0x02, W
0090 6EE5      02255         MOVWF   POSTDEC1
0092 5000      02256         MOVF    r0x01, W
0094 6EE5      02257         MOVWF   POSTDEC1
0096 5000      02258         MOVF    r0x00, W
0098 6EE5      02259         MOVWF   POSTDEC1
009A 0E00      02260         MOVLW   0x00
009C 6EE5      02261         MOVWF   POSTDEC1
009E EC00 F000 02262         CALL    _DisplayString
00A2 0E04      02263         MOVLW   0x04
00A4 26E1      02264         ADDWF   FSR1L, F
               02265 ;       .line   84; pic.c       DisplayString(SECOND_LINE,textSecondLine);
00A6 0E00      02266         MOVLW   HIGH(_textSecondLine)
00A8 6E00      02267         MOVWF   r0x01
00AA 0E00      02268         MOVLW   LOW(_textSecondLine)
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00AC 6E00      02269         MOVWF   r0x00
00AE 0E80      02270         MOVLW   0x80
00B0 6E00      02271         MOVWF   r0x02
00B2 5000      02272         MOVF    r0x02, W
00B4 6EE5      02273         MOVWF   POSTDEC1
00B6 5000      02274         MOVF    r0x01, W
00B8 6EE5      02275         MOVWF   POSTDEC1
00BA 5000      02276         MOVF    r0x00, W
00BC 6EE5      02277         MOVWF   POSTDEC1
00BE 0E10      02278         MOVLW   0x10
00C0 6EE5      02279         MOVWF   POSTDEC1
00C2 EC00 F000 02280         CALL    _DisplayString
00C6 0E04      02281         MOVLW   0x04
00C8 26E1      02282         ADDWF   FSR1L, F
00CA D000      02283         BRA     _00111_DS_
00CC 02284 _00110_DS_:
               02285 ;       .line   87; pic.c       blink();
00CC EC00 F000 02286         CALL    _blink
00D0 02287 _00111_DS_:
00D0 0000      02288         BANKSEL _isAlarm
               02289 ;       .line   89; pic.c       if(isAlarm)
00D2 5100      02290         MOVF    _isAlarm, W, B
00D4 0000      02291         BANKSEL (_isAlarm + 1)
00D6 1100      02292         IORWF   (_isAlarm + 1), W, B
00D8 E000      02293         BZ      _00113_DS_
               02294 ;       .line   91; pic.c       checkAlarm();           
00DA EC00 F000 02295         CALL    _checkAlarm
00DE 02296 _00113_DS_:
00DE 0000      02297         BANKSEL (_ringtone + 1)
               02298 ;       .line   93; pic.c       if(ringtone>0)
00E0 5100      02299         MOVF    (_ringtone + 1), W, B
00E2 0F80      02300         ADDLW   0x80
00E4 0F80      02301         ADDLW   0x80
00E6 E100      02302         BNZ     _00130_DS_
00E8 0E01      02303         MOVLW   0x01
00EA 0000      02304         BANKSEL _ringtone
00EC 5D00      02305         SUBWF   _ringtone, W, B
00EE 02306 _00130_DS_:
00EE E300      02307         BNC     _00115_DS_
               02308 ;       .line   95; pic.c       ringtone--;             
00F0 0EFF      02309         MOVLW   0xff
00F2 0000      02310         BANKSEL _ringtone
00F4 2700      02311         ADDWF   _ringtone, F, B
00F6 E200      02312         BC      _60406_DS_
00F8 0000      02313         BANKSEL (_ringtone + 1)
00FA 0700      02314         DECF    (_ringtone + 1), F, B
00FC 02315 _60406_DS_:
               02316 ;       .line   96; pic.c       LED2_IO ^= 1;
00FC 6A00      02317         CLRF    r0x00
00FE B400      02318         BTFSC   _LATJbits, 2
0100 2A00      02319         INCF    r0x00, F
0102 0E01      02320         MOVLW   0x01
0104 1A00      02321         XORWF   r0x00, F
0106 5000      02322         MOVF    r0x00, W
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0108 0B01      02323         ANDLW   0x01
010A 44E8      02324         RLNCF   WREG, W
010C 44E8      02325         RLNCF   WREG, W
010E 6EF4      02326         MOVWF   PRODH
0110 5000      02327         MOVF    _LATJbits, W
0112 0BFB      02328         ANDLW   0xfb
0114 10F4      02329         IORWF   PRODH, W
0116 6E00      02330         MOVWF   _LATJbits
0118 02331 _00115_DS_:
               02332 ;       .line   98; pic.c       increment();
0118 EC00 F000 02333         CALL    _increment
011C 02334 _00117_DS_:
               02335 ;       .line   100; pic.c      INTCONbits.TMR0IF = 0;
011C 9400      02336         BCF     _INTCONbits, 2
011E 02337 _00120_DS_:
011E CFE4 F000 02338         MOVFF   PREINC1, r0x02
0122 CFE4 F000 02339         MOVFF   PREINC1, r0x01
0126 CFE4 F000 02340         MOVFF   PREINC1, r0x00
012A CFE4 FFD9 02341         MOVFF   PREINC1, FSR2L
012E CFE4 FFFB 02342         MOVFF   PREINC1, PCLATU
0132 CFE4 FFFA 02343         MOVFF   PREINC1, PCLATH
0136 CFE4 FFEA 02344         MOVFF   PREINC1, FSR0H
013A CFE4 FFE9 02345         MOVFF   PREINC1, FSR0L
013E CFE4 FFF4 02346         MOVFF   PREINC1, PRODH
0142 CFE4 FFF3 02347         MOVFF   PREINC1, PRODL
0146 CFE4 FFE0 02348         MOVFF   PREINC1, BSR
014A CFE4 FFD8 02349         MOVFF   PREINC1, STATUS
014E CFE4 FFE8 02350         MOVFF   PREINC1, WREG
0152 0010      02351         RETFIE  
               02352 
               02353 
               02354 
               02355 ; Statistics:
               02356 ; code size:     3606 (0x0e16) bytes ( 2.75%)
               02357 ;                1803 (0x070b) words
               02358 ; udata size:       6 (0x0006) bytes ( 0.16%)
               02359 ; access size:     22 (0x0016) bytes
               02360 
               02361 
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

BSR                               00000FE0
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
INDF0                             00000FEF
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
POSTINC0                          00000FEE
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
WREG                              00000FE8
_00106_DS_                        00000042
_00108_DS_                        0000004C
_00110_DS_                        000000CC
_00111_DS_                        000000D0
_00113_DS_                        000000DE
_00115_DS_                        00000118
_00117_DS_                        0000011C
_00120_DS_                        0000011E
_00129_DS_                        00000068
_00130_DS_                        000000EE
_00147_DS_                        000000A0
_00156_DS_                        00000020
_00158_DS_                        0000003A
_00178_DS_                        0000004A
_00187_DS_                        00000012
_00189_DS_                        0000001C
_00191_DS_                        00000026
_00193_DS_                        00000030
_00195_DS_                        00000038
_00202_DS_                        000000A2
_00203_DS_                        000000AE
_00208_DS_                        000000CC
_00211_DS_                        000000C4
_00212_DS_                        000000D8
_00231_DS_                        000000A4
_00232_DS_                        000000B0
_00236_DS_                        000000CE
_00239_DS_                        000000C6
_00241_DS_                        000000F6
_00244_DS_                        000000DC
_00246_DS_                        00000104
_00268_DS_                        0000003A
_00271_DS_                        00000078
_00276_DS_                        00000046
_00278_DS_                        00000082
_00284_DS_                        00000016
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_00285_DS_                        00000018
_00286_DS_                        00000026
_00287_DS_                        00000028
_00288_DS_                        00000054
_00289_DS_                        00000056
_00290_DS_                        00000064
_00291_DS_                        00000066
_00296_DS_                        00000074
_00297_DS_                        00000080
_00298_DS_                        0000008C
_00299_DS_                        00000098
_00300_DS_                        0000009E
_00303_DS_                        000000A2
_00307_DS_                        00000024
_00308_DS_                        00000060
_00313_DS_                        00000074
_00314_DS_                        00000080
_00315_DS_                        0000008C
_00316_DS_                        00000098
_00317_DS_                        0000009E
_00320_DS_                        000000A2
_00324_DS_                        00000024
_00325_DS_                        00000060
_00333_DS_                        00000244
_00336_DS_                        0000019C
_00339_DS_                        00000124
_00340_DS_                        000002EA
_00342_DS_                        000002F8
_00344_DS_                        0000034A
_00351_DS_                        000000BA
_00352_DS_                        000000BC
_00353_DS_                        00000132
_00354_DS_                        00000134
_00355_DS_                        000001AA
_00356_DS_                        000001AC
_00357_DS_                        00000252
_00358_DS_                        00000254
_00374_DS_                        000000FC
_00375_DS_                        0000005C
_00378_DS_                        000000D4
_00385_DS_                        0000009A
_00386_DS_                        000000E4
_00394_DS_                        00000082
_00403_DS_                        000000CC
_00407_DS_                        00000134
_00410_DS_                        0000015E
_00414_DS_                        00000188
_00421_DS_                        00000152
_00422_DS_                        00000114
_10401_DS_                        000002F6
_20402_DS_                        0000034A
_30403_DS_                        00000044
_40404_DS_                        00000082
_50405_DS_                        0000005A
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_60406_DS_                        000000FC
_ADCON0                           00000000
_ADCON0bits                       00000000
_ADCON1                           00000000
_ADCON1bits                       00000000
_ADCON2                           00000000
_ADCON2bits                       00000000
_ADRES                            00000000
_ADRESH                           00000000
_ADRESL                           00000000
_BAUDCON                          00000000
_BAUDCON1                         00000000
_BAUDCON1bits                     00000000
_BAUDCON2                         00000000
_BAUDCON2bits                     00000000
_BAUDCONbits                      00000000
_BAUDCTL                          00000000
_BAUDCTL1                         00000000
_BAUDCTL1bits                     00000000
_BAUDCTL2                         00000000
_BAUDCTL2bits                     00000000
_BAUDCTLbits                      00000000
_BSR                              00000000
_CCP1CON                          00000000
_CCP1CONbits                      00000000
_CCP2CON                          00000000
_CCP2CONbits                      00000000
_CCP3CON                          00000000
_CCP3CONbits                      00000000
_CCP4CON                          00000000
_CCP4CONbits                      00000000
_CCP5CON                          00000000
_CCP5CONbits                      00000000
_CCPR1                            00000000
_CCPR1H                           00000000
_CCPR1L                           00000000
_CCPR2                            00000000
_CCPR2H                           00000000
_CCPR2L                           00000000
_CCPR3                            00000000
_CCPR3H                           00000000
_CCPR3L                           00000000
_CCPR4                            00000000
_CCPR4H                           00000000
_CCPR4L                           00000000
_CCPR5                            00000000
_CCPR5H                           00000000
_CCPR5L                           00000000
_CMCON                            00000000
_CMCONbits                        00000000
_CVRCON                           00000000
_CVRCONbits                       00000000
_DDRA                             00000000
_DDRAbits                         00000000
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_DDRB                             00000000
_DDRBbits                         00000000
_DDRC                             00000000
_DDRCbits                         00000000
_DDRD                             00000000
_DDRDbits                         00000000
_DDRE                             00000000
_DDREbits                         00000000
_DDRF                             00000000
_DDRFbits                         00000000
_DDRG                             00000000
_DDRGbits                         00000000
_DDRH                             00000000
_DDRHbits                         00000000
_DDRJ                             00000000
_DDRJbits                         00000000
_DisplayString                    00000000
_DisplayWORD                      00000000
_DisplayWORD_WDigit_1_1           00000000
_EBSTCON                          00000000
_EBSTCONbits                      00000000
_EBSTCS                           00000000
_EBSTCSH                          00000000
_EBSTCSL                          00000000
_EBSTSD                           00000000
_ECCP1AS                          00000000
_ECCP1ASbits                      00000000
_ECCP1CON                         00000000
_ECCP1CONbits                     00000000
_ECCP1DEL                         00000000
_ECCP1DELbits                     00000000
_ECCP2AS                          00000000
_ECCP2ASbits                      00000000
_ECCP2CON                         00000000
_ECCP2CONbits                     00000000
_ECCP2DEL                         00000000
_ECCP2DELbits                     00000000
_ECCP3AS                          00000000
_ECCP3ASbits                      00000000
_ECCP3CON                         00000000
_ECCP3CONbits                     00000000
_ECCP3DEL                         00000000
_ECCP3DELbits                     00000000
_ECON1                            00000000
_ECON1bits                        00000000
_ECON2                            00000000
_ECON2bits                        00000000
_EDATA                            00000000
_EDATAbits                        00000000
_EDMACS                           00000000
_EDMACSH                          00000000
_EDMACSL                          00000000
_EDMADST                          00000000
_EDMADSTH                         00000000
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_EDMADSTL                         00000000
_EDMAND                           00000000
_EDMANDH                          00000000
_EDMANDL                          00000000
_EDMAST                           00000000
_EDMASTH                          00000000
_EDMASTL                          00000000
_EECON1                           00000000
_EECON1bits                       00000000
_EECON2                           00000000
_EFLOCON                          00000000
_EFLOCONbits                      00000000
_EHT0                             00000000
_EHT1                             00000000
_EHT2                             00000000
_EHT3                             00000000
_EHT4                             00000000
_EHT5                             00000000
_EHT6                             00000000
_EHT7                             00000000
_EIE                              00000000
_EIEbits                          00000000
_EIR                              00000000
_EIRbits                          00000000
_EPAUS                            00000000
_EPAUSH                           00000000
_EPAUSL                           00000000
_EPKTCNT                          00000000
_EPMCS                            00000000
_EPMCSH                           00000000
_EPMCSL                           00000000
_EPMM0                            00000000
_EPMM1                            00000000
_EPMM2                            00000000
_EPMM3                            00000000
_EPMM4                            00000000
_EPMM5                            00000000
_EPMM6                            00000000
_EPMM7                            00000000
_EPMO                             00000000
_EPMOH                            00000000
_EPMOL                            00000000
_ERDPT                            00000000
_ERDPTH                           00000000
_ERDPTL                           00000000
_ERXFCON                          00000000
_ERXFCONbits                      00000000
_ERXND                            00000000
_ERXNDH                           00000000
_ERXNDL                           00000000
_ERXRDPT                          00000000
_ERXRDPTH                         00000000
_ERXRDPTL                         00000000
_ERXST                            00000000
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_ERXSTH                           00000000
_ERXSTL                           00000000
_ERXWRPT                          00000000
_ERXWRPTH                         00000000
_ERXWRPTL                         00000000
_ESTAT                            00000000
_ESTATbits                        00000000
_ETXND                            00000000
_ETXNDH                           00000000
_ETXNDL                           00000000
_ETXST                            00000000
_ETXSTH                           00000000
_ETXSTL                           00000000
_EWOLIE                           00000000
_EWOLIEbits                       00000000
_EWOLIR                           00000000
_EWOLIRbits                       00000000
_EWRPT                            00000000
_EWRPTH                           00000000
_EWRPTL                           00000000
_FSR0H                            00000000
_FSR0L                            00000000
_FSR1H                            00000000
_FSR1L                            00000000
_FSR2H                            00000000
_FSR2L                            00000000
_HighISR                          00000000
_INDF0                            00000000
_INDF1                            00000000
_INDF2                            00000000
_INTCON                           00000000
_INTCON2                          00000000
_INTCON2bits                      00000000
_INTCON3                          00000000
_INTCON3bits                      00000000
_INTCONbits                       00000000
_IPR1                             00000000
_IPR1bits                         00000000
_IPR2                             00000000
_IPR2bits                         00000000
_IPR3                             00000000
_IPR3bits                         00000000
_LATA                             00000000
_LATAbits                         00000000
_LATB                             00000000
_LATBbits                         00000000
_LATC                             00000000
_LATCbits                         00000000
_LATD                             00000000
_LATDbits                         00000000
_LATE                             00000000
_LATEbits                         00000000
_LATF                             00000000
_LATFbits                         00000000
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_LATG                             00000000
_LATGbits                         00000000
_LATH                             00000000
_LATHbits                         00000000
_LATJ                             00000000
_LATJbits                         00000000
_LCDInit                          00000000
_LCDText                          00000000
_LCDUpdate                        00000000
_MAADR1                           00000000
_MAADR2                           00000000
_MAADR3                           00000000
_MAADR4                           00000000
_MAADR5                           00000000
_MAADR6                           00000000
_MABBIPG                          00000000
_MACLCON1                         00000000
_MACLCON1bits                     00000000
_MACLCON2                         00000000
_MACLCON2bits                     00000000
_MACON1                           00000000
_MACON1bits                       00000000
_MACON2                           00000000
_MACON2bits                       00000000
_MACON3                           00000000
_MACON3bits                       00000000
_MACON4                           00000000
_MACON4bits                       00000000
_MAIPG                            00000000
_MAIPGH                           00000000
_MAIPGL                           00000000
_MAMXFL                           00000000
_MAMXFLH                          00000000
_MAMXFLL                          00000000
_MEMCON                           00000000
_MEMCONbits                       00000000
_MICMD                            00000000
_MICMDbits                        00000000
_MICON                            00000000
_MICONbits                        00000000
_MIRD                             00000000
_MIRDH                            00000000
_MIRDL                            00000000
_MIREGADR                         00000000
_MISTAT                           00000000
_MISTATbits                       00000000
_MIWR                             00000000
_MIWRH                            00000000
_MIWRL                            00000000
_OSCCON                           00000000
_OSCCONbits                       00000000
_OSCTUNE                          00000000
_OSCTUNEbits                      00000000
_PC                               00000000
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_PCL                              00000000
_PCLATH                           00000000
_PCLATU                           00000000
_PIE1                             00000000
_PIE1bits                         00000000
_PIE2                             00000000
_PIE2bits                         00000000
_PIE3                             00000000
_PIE3bits                         00000000
_PIR1                             00000000
_PIR1bits                         00000000
_PIR2                             00000000
_PIR2bits                         00000000
_PIR3                             00000000
_PIR3bits                         00000000
_PLUSW0                           00000000
_PLUSW1                           00000000
_PLUSW2                           00000000
_PORTA                            00000000
_PORTAbits                        00000000
_PORTB                            00000000
_PORTBbits                        00000000
_PORTC                            00000000
_PORTCbits                        00000000
_PORTD                            00000000
_PORTDbits                        00000000
_PORTE                            00000000
_PORTEbits                        00000000
_PORTF                            00000000
_PORTFbits                        00000000
_PORTG                            00000000
_PORTGbits                        00000000
_PORTH                            00000000
_PORTHbits                        00000000
_PORTJ                            00000000
_PORTJbits                        00000000
_POSTDEC0                         00000000
_POSTDEC1                         00000000
_POSTDEC2                         00000000
_POSTINC0                         00000000
_POSTINC1                         00000000
_POSTINC2                         00000000
_PR2                              00000000
_PR4                              00000000
_PREINC0                          00000000
_PREINC1                          00000000
_PREINC2                          00000000
_PROD                             00000000
_PRODH                            00000000
_PRODL                            00000000
_PSPCON                           00000000
_PSPCONbits                       00000000
_RCON                             00000000
_RCONbits                         00000000
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_RCREG                            00000000
_RCREG1                           00000000
_RCREG2                           00000000
_RCSTA                            00000000
_RCSTA1                           00000000
_RCSTA1bits                       00000000
_RCSTA2                           00000000
_RCSTA2bits                       00000000
_RCSTAbits                        00000000
_SPBRG                            00000000
_SPBRG1                           00000000
_SPBRG2                           00000000
_SPBRGH                           00000000
_SPBRGH1                          00000000
_SPBRGH2                          00000000
_SSP1ADD                          00000000
_SSP1BUF                          00000000
_SSP1CON1                         00000000
_SSP1CON1bits                     00000000
_SSP1CON2                         00000000
_SSP1CON2bits                     00000000
_SSP1STAT                         00000000
_SSP1STATbits                     00000000
_SSP2ADD                          00000000
_SSP2BUF                          00000000
_SSP2CON1                         00000000
_SSP2CON1bits                     00000000
_SSP2CON2                         00000000
_SSP2CON2bits                     00000000
_SSP2STAT                         00000000
_SSP2STATbits                     00000000
_SSPADD                           00000000
_SSPBUF                           00000000
_SSPCON1                          00000000
_SSPCON1bits                      00000000
_SSPCON2                          00000000
_SSPCON2bits                      00000000
_SSPSTAT                          00000000
_SSPSTATbits                      00000000
_STATUS                           00000000
_STATUSbits                       00000000
_STKPTR                           00000000
_STKPTRbits                       00000000
_T0CON                            00000000
_T0CONbits                        00000000
_T1CON                            00000000
_T1CONbits                        00000000
_T2CON                            00000000
_T2CONbits                        00000000
_T3CON                            00000000
_T3CONbits                        00000000
_T4CON                            00000000
_T4CONbits                        00000000
_TABLAT                           00000000
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_TBLPTR                           00000000
_TBLPTRH                          00000000
_TBLPTRL                          00000000
_TBLPTRU                          00000000
_TMR0H                            00000000
_TMR0L                            00000000
_TMR1H                            00000000
_TMR1L                            00000000
_TMR2                             00000000
_TMR3H                            00000000
_TMR3L                            00000000
_TMR4                             00000000
_TOS                              00000000
_TOSH                             00000000
_TOSL                             00000000
_TOSU                             00000000
_TRISA                            00000000
_TRISAbits                        00000000
_TRISB                            00000000
_TRISBbits                        00000000
_TRISC                            00000000
_TRISCbits                        00000000
_TRISD                            00000000
_TRISDbits                        00000000
_TRISE                            00000000
_TRISEbits                        00000000
_TRISF                            00000000
_TRISFbits                        00000000
_TRISG                            00000000
_TRISGbits                        00000000
_TRISH                            00000000
_TRISHbits                        00000000
_TRISJ                            00000000
_TRISJbits                        00000000
_TXREG                            00000000
_TXREG1                           00000000
_TXREG2                           00000000
_TXSTA                            00000000
_TXSTA1                           00000000
_TXSTA1bits                       00000000
_TXSTA2                           00000000
_TXSTA2bits                       00000000
_TXSTAbits                        00000000
_WDTCON                           00000000
_WDTCONbits                       00000000
_WREG                             00000000
__18F97J60                        00000001
__gptrget1                        00000000
__gptrput1                        00000000
__mulint                          00000000
_actionButton1                    00000000
_actionButton2                    00000000
_bin                              00000038
_blink                            00000000
gpasm-0.13.7 beta               Objects/pic.asm3-28-2013  17:24:31          PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_changeTime                       00000000
_checkAlarm                       00000000
_count                            00000040
_currentMode                      0000003E
_increment                        00000000
_init_board                       00000000
_isAlarm                          0000003A
_main                             00000000
_move                             00000000
_posA                             00000036
_posC                             00000034
_ringtone                         0000003C
_setAlarm                         00000000
_stdin                            00000000
_stdout                           00000000
_strlcpy                          00000000
_strlen                           00000000
_tabFirst                         0000001E
_tabSecond                        0000002A
_temp1                            00000042
_temp2                            00000052
_textFirstLine                    00000000
_textSecondLine                   0000000F
_ultoa                            00000000
ivec_0x1_HighISR                  00000008
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
r0x09                             00000009
r0x0a                             0000000A
r0x0b                             0000000B
r0x0c                             0000000C
r0x0d                             0000000D
r0x0e                             0000000E
r0x0f                             0000000F
r0x10                             00000010
r0x11                             00000011
r0x12                             00000012
r0x13                             00000013
r0x14                             00000014
r0x15                             00000015


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed


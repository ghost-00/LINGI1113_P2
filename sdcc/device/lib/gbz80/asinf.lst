                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:26:11 2013
                              5 ;--------------------------------------------------------
                              6 	.module asinf
                              7 	.optsdcc -mgbz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _asinf
                             13 ;--------------------------------------------------------
                             14 ;  ram data
                             15 ;--------------------------------------------------------
                             16 	.area _DATA
                             17 ;--------------------------------------------------------
                             18 ; overlayable items in  ram 
                             19 ;--------------------------------------------------------
                             20 	.area _OVERLAY
                             21 ;--------------------------------------------------------
                             22 ; external initialized ram data
                             23 ;--------------------------------------------------------
                             24 ;--------------------------------------------------------
                             25 ; global & static initialisations
                             26 ;--------------------------------------------------------
                             27 	.area _HOME
                             28 	.area _GSINIT
                             29 	.area _GSFINAL
                             30 	.area _GSINIT
                             31 ;--------------------------------------------------------
                             32 ; Home
                             33 ;--------------------------------------------------------
                             34 	.area _HOME
                             35 	.area _HOME
                             36 ;--------------------------------------------------------
                             37 ; code
                             38 ;--------------------------------------------------------
                             39 	.area _CODE
                             40 ;../asinf.c:26: float asinf(const float x) _FLOAT_FUNC_REENTRANT
                             41 ;	---------------------------------
                             42 ; Function asinf
                             43 ; ---------------------------------
   0000                      44 _asinf_start::
   0000                      45 _asinf:
                             46 	
   0000 F5                   47 	push	af
   0001 F5                   48 	push	af
                             49 ;../asinf.c:28: if (x == 1.0) return  HALF_PI;
   0002 21 80 3F             50 	ld	hl,#0x3F80
   0005 E5                   51 	push	hl
   0006 21 00 00             52 	ld	hl,#0x0000
   0009 E5                   53 	push	hl
   000A F8 0C                54 	lda	hl,12(sp)
   000C 2A                   55 	ld	a,(hl+)
   000D 66                   56 	ld	h,(hl)
   000E 6F                   57 	ld	l,a
   000F E5                   58 	push	hl
   0010 F8 0C                59 	lda	hl,12(sp)
   0012 2A                   60 	ld	a,(hl+)
   0013 66                   61 	ld	h,(hl)
   0014 6F                   62 	ld	l,a
   0015 E5                   63 	push	hl
   0016 CDr00s00             64 	call	___fseq
   0019 E8 08                65 	lda	sp,8(sp)
   001B 4B                   66 	ld	c,e
   001C AF                   67 	xor	a,a
   001D B1                   68 	or	a,c
   001E CAr2As00             69 	jp	Z,00108$
   0021 11 DB 0F             70 	ld	de,#0x0FDB
   0024 21 C9 3F             71 	ld	hl,#0x3FC9
   0027 C3r90s00             72 	jp	00110$
   002A                      73 00108$:
                             74 ;../asinf.c:29: else if (x ==-1.0) return -HALF_PI;
   002A 21 80 BF             75 	ld	hl,#0xBF80
   002D E5                   76 	push	hl
   002E 21 00 00             77 	ld	hl,#0x0000
   0031 E5                   78 	push	hl
   0032 F8 0C                79 	lda	hl,12(sp)
   0034 2A                   80 	ld	a,(hl+)
   0035 66                   81 	ld	h,(hl)
   0036 6F                   82 	ld	l,a
   0037 E5                   83 	push	hl
   0038 F8 0C                84 	lda	hl,12(sp)
   003A 2A                   85 	ld	a,(hl+)
   003B 66                   86 	ld	h,(hl)
   003C 6F                   87 	ld	l,a
   003D E5                   88 	push	hl
   003E CDr00s00             89 	call	___fseq
   0041 E8 08                90 	lda	sp,8(sp)
   0043 4B                   91 	ld	c,e
   0044 AF                   92 	xor	a,a
   0045 B1                   93 	or	a,c
   0046 CAr52s00             94 	jp	Z,00105$
   0049 11 DB 0F             95 	ld	de,#0x0FDB
   004C 21 C9 BF             96 	ld	hl,#0xBFC9
   004F C3r90s00             97 	jp	00110$
   0052                      98 00105$:
                             99 ;../asinf.c:30: else if (x == 0.0) return 0.0;
   0052 F8 06               100 	lda	hl,6(sp)
   0054 2A                  101 	ld	a,(hl+)
   0055 B6                  102 	or	a,(hl)
   0056 23                  103 	inc	hl
   0057 B6                  104 	or	a,(hl)
   0058 23                  105 	inc	hl
   0059 B6                  106 	or	a,(hl)
   005A C2r66s00            107 	jp	NZ,00102$
   005D 11 00 00            108 	ld	de,#0x0000
   0060 21 00 00            109 	ld	hl,#0x0000
   0063 C3r90s00            110 	jp	00110$
   0066                     111 00102$:
                            112 ;../asinf.c:31: else               return asincosf(x, false);
   0066 3E 00               113 	ld	a,#0x00
   0068 F5                  114 	push	af
   0069 33                  115 	inc	sp
   006A F8 09               116 	lda	hl,9(sp)
   006C 2A                  117 	ld	a,(hl+)
   006D 66                  118 	ld	h,(hl)
   006E 6F                  119 	ld	l,a
   006F E5                  120 	push	hl
   0070 F8 09               121 	lda	hl,9(sp)
   0072 2A                  122 	ld	a,(hl+)
   0073 66                  123 	ld	h,(hl)
   0074 6F                  124 	ld	l,a
   0075 E5                  125 	push	hl
   0076 CDr00s00            126 	call	_asincosf
   0079 E8 05               127 	lda	sp,5(sp)
   007B E5                  128 	push	hl
   007C F8 02               129 	lda	hl,2(sp)
   007E 73                  130 	ld	(hl),e
   007F 23                  131 	inc	hl
   0080 72                  132 	ld	(hl),d
   0081 D1                  133 	pop	de
   0082 23                  134 	inc	hl
   0083 73                  135 	ld	(hl),e
   0084 23                  136 	inc	hl
   0085 72                  137 	ld	(hl),d
   0086 F8 01               138 	lda	hl,1(sp)
   0088 2B                  139 	dec	hl
   0089 5E                  140 	ld	e,(hl)
   008A 23                  141 	inc	hl
   008B 56                  142 	ld	d,(hl)
   008C 23                  143 	inc	hl
   008D 2A                  144 	ld	a,(hl+)
   008E 66                  145 	ld	h,(hl)
   008F 6F                  146 	ld	l,a
   0090                     147 00110$:
   0090 E8 04               148 	lda	sp,4(sp)
   0092 C9                  149 	ret
   0093                     150 _asinf_end::
                            151 	.area _CODE
                            152 	.area _CABS

                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:26:13 2013
                              5 ;--------------------------------------------------------
                              6 	.module assert
                              7 	.optsdcc -mgbz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl __assert
                             13 ;--------------------------------------------------------
                             14 ;  ram data
                             15 ;--------------------------------------------------------
                             16 	.area _DATA
                             17 ;--------------------------------------------------------
                             18 ; overlayable items in  ram 
                             19 ;--------------------------------------------------------
                             20 	.area _OVERLAY
                             21 ;--------------------------------------------------------
                             22 ; external initialized ram data
                             23 ;--------------------------------------------------------
                             24 ;--------------------------------------------------------
                             25 ; global & static initialisations
                             26 ;--------------------------------------------------------
                             27 	.area _HOME
                             28 	.area _GSINIT
                             29 	.area _GSFINAL
                             30 	.area _GSINIT
                             31 ;--------------------------------------------------------
                             32 ; Home
                             33 ;--------------------------------------------------------
                             34 	.area _HOME
                             35 	.area _HOME
                             36 ;--------------------------------------------------------
                             37 ; code
                             38 ;--------------------------------------------------------
                             39 	.area _CODE
                             40 ;../assert.c:4: void _assert(char *expr, const char *filename, unsigned int linenumber)
                             41 ;	---------------------------------
                             42 ; Function _assert
                             43 ; ---------------------------------
   0000                      44 __assert_start::
   0000                      45 __assert:
                             46 	
                             47 ;../assert.c:6: printf("Assert(%s) failed at line %u in file %s.\n",
   0000 F8 04                48 	lda	hl,4(sp)
   0002 2A                   49 	ld	a,(hl+)
   0003 66                   50 	ld	h,(hl)
   0004 6F                   51 	ld	l,a
   0005 E5                   52 	push	hl
   0006 F8 08                53 	lda	hl,8(sp)
   0008 2A                   54 	ld	a,(hl+)
   0009 66                   55 	ld	h,(hl)
   000A 6F                   56 	ld	l,a
   000B E5                   57 	push	hl
   000C F8 06                58 	lda	hl,6(sp)
   000E 2A                   59 	ld	a,(hl+)
   000F 66                   60 	ld	h,(hl)
   0010 6F                   61 	ld	l,a
   0011 E5                   62 	push	hl
   0012 21r1Fs00             63 	ld	hl,#__str_0
   0015 E5                   64 	push	hl
   0016 CDr00s00             65 	call	_printf
   0019 E8 08                66 	lda	sp,8(sp)
                             67 ;../assert.c:8: while(1);
   001B                      68 00102$:
   001B C3r1Bs00             69 	jp	00102$
   001E                      70 00104$:
                             71 	
   001E C9                   72 	ret
   001F                      73 __assert_end::
   001F                      74 __str_0:
   001F 41 73 73 65 72 74    75 	.ascii "Assert(%s) failed at line %u in file %s."
        28 25 73 29 20 66
        61 69 6C 65 64 20
        61 74 20 6C 69 6E
        65 20 25 75 20 69
        6E 20 66 69 6C 65
        20 25 73 2E
   0047 0A                   76 	.db 0x0A
   0048 00                   77 	.db 0x00
                             78 	.area _CODE
                             79 	.area _CABS

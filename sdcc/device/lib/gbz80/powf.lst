                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:26:11 2013
                              5 ;--------------------------------------------------------
                              6 	.module powf
                              7 	.optsdcc -mgbz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _powf
                             13 ;--------------------------------------------------------
                             14 ;  ram data
                             15 ;--------------------------------------------------------
                             16 	.area _DATA
                             17 ;--------------------------------------------------------
                             18 ; overlayable items in  ram 
                             19 ;--------------------------------------------------------
                             20 	.area _OVERLAY
                             21 ;--------------------------------------------------------
                             22 ; external initialized ram data
                             23 ;--------------------------------------------------------
                             24 ;--------------------------------------------------------
                             25 ; global & static initialisations
                             26 ;--------------------------------------------------------
                             27 	.area _HOME
                             28 	.area _GSINIT
                             29 	.area _GSFINAL
                             30 	.area _GSINIT
                             31 ;--------------------------------------------------------
                             32 ; Home
                             33 ;--------------------------------------------------------
                             34 	.area _HOME
                             35 	.area _HOME
                             36 ;--------------------------------------------------------
                             37 ; code
                             38 ;--------------------------------------------------------
                             39 	.area _CODE
                             40 ;../powf.c:25: float powf(const float x, const float y)
                             41 ;	---------------------------------
                             42 ; Function powf
                             43 ; ---------------------------------
   0000                      44 _powf_start::
   0000                      45 _powf:
                             46 	
   0000 F5                   47 	push	af
   0001 F5                   48 	push	af
                             49 ;../powf.c:27: if(y == 0.0) return 1.0;
   0002 F8 0A                50 	lda	hl,10(sp)
   0004 2A                   51 	ld	a,(hl+)
   0005 B6                   52 	or	a,(hl)
   0006 23                   53 	inc	hl
   0007 B6                   54 	or	a,(hl)
   0008 23                   55 	inc	hl
   0009 B6                   56 	or	a,(hl)
   000A C2r16s00             57 	jp	NZ,00102$
   000D 11 00 00             58 	ld	de,#0x0000
   0010 21 80 3F             59 	ld	hl,#0x3F80
   0013 C3rD4s00             60 	jp	00107$
   0016                      61 00102$:
                             62 ;../powf.c:28: if(y==1.0) return x;
   0016 21 80 3F             63 	ld	hl,#0x3F80
   0019 E5                   64 	push	hl
   001A 21 00 00             65 	ld	hl,#0x0000
   001D E5                   66 	push	hl
   001E F8 10                67 	lda	hl,16(sp)
   0020 2A                   68 	ld	a,(hl+)
   0021 66                   69 	ld	h,(hl)
   0022 6F                   70 	ld	l,a
   0023 E5                   71 	push	hl
   0024 F8 10                72 	lda	hl,16(sp)
   0026 2A                   73 	ld	a,(hl+)
   0027 66                   74 	ld	h,(hl)
   0028 6F                   75 	ld	l,a
   0029 E5                   76 	push	hl
   002A CDr00s00             77 	call	___fseq
   002D E8 08                78 	lda	sp,8(sp)
   002F 4B                   79 	ld	c,e
   0030 AF                   80 	xor	a,a
   0031 B1                   81 	or	a,c
   0032 CAr42s00             82 	jp	Z,00104$
   0035 F8 07                83 	lda	hl,7(sp)
   0037 2B                   84 	dec	hl
   0038 5E                   85 	ld	e,(hl)
   0039 23                   86 	inc	hl
   003A 56                   87 	ld	d,(hl)
   003B 23                   88 	inc	hl
   003C 2A                   89 	ld	a,(hl+)
   003D 66                   90 	ld	h,(hl)
   003E 6F                   91 	ld	l,a
   003F C3rD4s00             92 	jp	00107$
   0042                      93 00104$:
                             94 ;../powf.c:29: if(x <= 0.0) return 0.0;
   0042 21 00 00             95 	ld	hl,#0x0000
   0045 E5                   96 	push	hl
   0046 21 00 00             97 	ld	hl,#0x0000
   0049 E5                   98 	push	hl
   004A F8 0C                99 	lda	hl,12(sp)
   004C 2A                  100 	ld	a,(hl+)
   004D 66                  101 	ld	h,(hl)
   004E 6F                  102 	ld	l,a
   004F E5                  103 	push	hl
   0050 F8 0C               104 	lda	hl,12(sp)
   0052 2A                  105 	ld	a,(hl+)
   0053 66                  106 	ld	h,(hl)
   0054 6F                  107 	ld	l,a
   0055 E5                  108 	push	hl
   0056 CDr00s00            109 	call	___fsgt
   0059 E8 08               110 	lda	sp,8(sp)
   005B 4B                  111 	ld	c,e
   005C AF                  112 	xor	a,a
   005D B1                  113 	or	a,c
   005E C2r6As00            114 	jp	NZ,00106$
   0061 11 00 00            115 	ld	de,#0x0000
   0064 21 00 00            116 	ld	hl,#0x0000
   0067 C3rD4s00            117 	jp	00107$
   006A                     118 00106$:
                            119 ;../powf.c:30: return expf(logf(x) * y);
   006A F8 08               120 	lda	hl,8(sp)
   006C 2A                  121 	ld	a,(hl+)
   006D 66                  122 	ld	h,(hl)
   006E 6F                  123 	ld	l,a
   006F E5                  124 	push	hl
   0070 F8 08               125 	lda	hl,8(sp)
   0072 2A                  126 	ld	a,(hl+)
   0073 66                  127 	ld	h,(hl)
   0074 6F                  128 	ld	l,a
   0075 E5                  129 	push	hl
   0076 CDr00s00            130 	call	_logf
   0079 E8 04               131 	lda	sp,4(sp)
   007B E5                  132 	push	hl
   007C F8 02               133 	lda	hl,2(sp)
   007E 73                  134 	ld	(hl),e
   007F 23                  135 	inc	hl
   0080 72                  136 	ld	(hl),d
   0081 D1                  137 	pop	de
   0082 23                  138 	inc	hl
   0083 73                  139 	ld	(hl),e
   0084 23                  140 	inc	hl
   0085 72                  141 	ld	(hl),d
   0086 F8 0C               142 	lda	hl,12(sp)
   0088 2A                  143 	ld	a,(hl+)
   0089 66                  144 	ld	h,(hl)
   008A 6F                  145 	ld	l,a
   008B E5                  146 	push	hl
   008C F8 0C               147 	lda	hl,12(sp)
   008E 2A                  148 	ld	a,(hl+)
   008F 66                  149 	ld	h,(hl)
   0090 6F                  150 	ld	l,a
   0091 E5                  151 	push	hl
   0092 F8 06               152 	lda	hl,6(sp)
   0094 2A                  153 	ld	a,(hl+)
   0095 66                  154 	ld	h,(hl)
   0096 6F                  155 	ld	l,a
   0097 E5                  156 	push	hl
   0098 F8 06               157 	lda	hl,6(sp)
   009A 2A                  158 	ld	a,(hl+)
   009B 66                  159 	ld	h,(hl)
   009C 6F                  160 	ld	l,a
   009D E5                  161 	push	hl
   009E CDr00s00            162 	call	___fsmul
   00A1 E8 08               163 	lda	sp,8(sp)
   00A3 E5                  164 	push	hl
   00A4 F8 02               165 	lda	hl,2(sp)
   00A6 73                  166 	ld	(hl),e
   00A7 23                  167 	inc	hl
   00A8 72                  168 	ld	(hl),d
   00A9 D1                  169 	pop	de
   00AA 23                  170 	inc	hl
   00AB 73                  171 	ld	(hl),e
   00AC 23                  172 	inc	hl
   00AD 72                  173 	ld	(hl),d
   00AE F8 02               174 	lda	hl,2(sp)
   00B0 2A                  175 	ld	a,(hl+)
   00B1 66                  176 	ld	h,(hl)
   00B2 6F                  177 	ld	l,a
   00B3 E5                  178 	push	hl
   00B4 F8 02               179 	lda	hl,2(sp)
   00B6 2A                  180 	ld	a,(hl+)
   00B7 66                  181 	ld	h,(hl)
   00B8 6F                  182 	ld	l,a
   00B9 E5                  183 	push	hl
   00BA CDr00s00            184 	call	_expf
   00BD E8 04               185 	lda	sp,4(sp)
   00BF E5                  186 	push	hl
   00C0 F8 02               187 	lda	hl,2(sp)
   00C2 73                  188 	ld	(hl),e
   00C3 23                  189 	inc	hl
   00C4 72                  190 	ld	(hl),d
   00C5 D1                  191 	pop	de
   00C6 23                  192 	inc	hl
   00C7 73                  193 	ld	(hl),e
   00C8 23                  194 	inc	hl
   00C9 72                  195 	ld	(hl),d
   00CA F8 01               196 	lda	hl,1(sp)
   00CC 2B                  197 	dec	hl
   00CD 5E                  198 	ld	e,(hl)
   00CE 23                  199 	inc	hl
   00CF 56                  200 	ld	d,(hl)
   00D0 23                  201 	inc	hl
   00D1 2A                  202 	ld	a,(hl+)
   00D2 66                  203 	ld	h,(hl)
   00D3 6F                  204 	ld	l,a
   00D4                     205 00107$:
   00D4 E8 04               206 	lda	sp,4(sp)
   00D6 C9                  207 	ret
   00D7                     208 _powf_end::
                            209 	.area _CODE
                            210 	.area _CABS

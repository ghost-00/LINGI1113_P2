                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:26:12 2013
                              5 ;--------------------------------------------------------
                              6 	.module _strcpy
                              7 	.optsdcc -mgbz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strcpy
                             13 ;--------------------------------------------------------
                             14 ;  ram data
                             15 ;--------------------------------------------------------
                             16 	.area _DATA
                             17 ;--------------------------------------------------------
                             18 ; overlayable items in  ram 
                             19 ;--------------------------------------------------------
                             20 	.area _OVERLAY
                             21 ;--------------------------------------------------------
                             22 ; external initialized ram data
                             23 ;--------------------------------------------------------
                             24 ;--------------------------------------------------------
                             25 ; global & static initialisations
                             26 ;--------------------------------------------------------
                             27 	.area _HOME
                             28 	.area _GSINIT
                             29 	.area _GSFINAL
                             30 	.area _GSINIT
                             31 ;--------------------------------------------------------
                             32 ; Home
                             33 ;--------------------------------------------------------
                             34 	.area _HOME
                             35 	.area _HOME
                             36 ;--------------------------------------------------------
                             37 ; code
                             38 ;--------------------------------------------------------
                             39 	.area _CODE
                             40 ;../_strcpy.c:29: char * strcpy (
                             41 ;	---------------------------------
                             42 ; Function strcpy
                             43 ; ---------------------------------
   0000                      44 _strcpy_start::
   0000                      45 _strcpy:
                             46 	
   0000 F5                   47 	push	af
   0001 F5                   48 	push	af
                             49 ;../_strcpy.c:34: register char * to = d;
   0002 F8 06                50 	lda	hl,6(sp)
   0004 2A                   51 	ld	a,(hl+)
   0005 5E                   52 	ld	e,(hl)
   0006 F8 02                53 	lda	hl,2(sp)
   0008 22                   54 	ld	(hl+),a
   0009 73                   55 	ld	(hl),e
                             56 ;../_strcpy.c:35: register const char * from = s;
   000A F8 09                57 	lda	hl,9(sp)
   000C 2B                   58 	dec	hl
   000D 4E                   59 	ld	c,(hl)
   000E 23                   60 	inc	hl
   000F 46                   61 	ld	b,(hl)
                             62 ;../_strcpy.c:37: while (*to++ = *from++) ;
   0010 F8 02                63 	lda	hl,2(sp)
   0012 2A                   64 	ld	a,(hl+)
   0013 5E                   65 	ld	e,(hl)
   0014 F8 00                66 	lda	hl,0(sp)
   0016 22                   67 	ld	(hl+),a
   0017 73                   68 	ld	(hl),e
   0018                      69 00101$:
   0018 0A                   70 	ld	a,(bc)
   0019 03                   71 	inc	bc
   001A F8 01                72 	lda	hl,1(sp)
   001C 2B                   73 	dec	hl
   001D 5E                   74 	ld	e,(hl)
   001E 23                   75 	inc	hl
   001F 56                   76 	ld	d,(hl)
   0020 12                   77 	ld	(de),a
   0021 2B                   78 	dec	hl
   0022 34                   79 	inc	(hl)
   0023 20 02                80 	jr	NZ,00109$
   0025 23                   81 	inc	hl
   0026 34                   82 	inc	(hl)
   0027                      83 00109$:
   0027 B7                   84 	or	a,a
   0028 C2r18s00             85 	jp	NZ,00101$
                             86 ;../_strcpy.c:39: return d;
   002B F8 07                87 	lda	hl,7(sp)
   002D 2B                   88 	dec	hl
   002E 5E                   89 	ld	e,(hl)
   002F 23                   90 	inc	hl
   0030 56                   91 	ld	d,(hl)
   0031                      92 00104$:
   0031 E8 04                93 	lda	sp,4(sp)
   0033 C9                   94 	ret
   0034                      95 _strcpy_end::
                             96 	.area _CODE
                             97 	.area _CABS

                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:26:13 2013
                              5 ;--------------------------------------------------------
                              6 	.module puts
                              7 	.optsdcc -mgbz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _puts
                             13 ;--------------------------------------------------------
                             14 ;  ram data
                             15 ;--------------------------------------------------------
                             16 	.area _DATA
                             17 ;--------------------------------------------------------
                             18 ; overlayable items in  ram 
                             19 ;--------------------------------------------------------
                             20 	.area _OVERLAY
                             21 ;--------------------------------------------------------
                             22 ; external initialized ram data
                             23 ;--------------------------------------------------------
                             24 ;--------------------------------------------------------
                             25 ; global & static initialisations
                             26 ;--------------------------------------------------------
                             27 	.area _HOME
                             28 	.area _GSINIT
                             29 	.area _GSFINAL
                             30 	.area _GSINIT
                             31 ;--------------------------------------------------------
                             32 ; Home
                             33 ;--------------------------------------------------------
                             34 	.area _HOME
                             35 	.area _HOME
                             36 ;--------------------------------------------------------
                             37 ; code
                             38 ;--------------------------------------------------------
                             39 	.area _CODE
                             40 ;../puts.c:27: int puts (char *s)
                             41 ;	---------------------------------
                             42 ; Function puts
                             43 ; ---------------------------------
   0000                      44 _puts_start::
   0000                      45 _puts:
                             46 	
   0000 F5                   47 	push	af
   0001 F5                   48 	push	af
                             49 ;../puts.c:30: while (*s){
   0002 F8 06                50 	lda	hl,6(sp)
   0004 2A                   51 	ld	a,(hl+)
   0005 5E                   52 	ld	e,(hl)
   0006 F8 00                53 	lda	hl,0(sp)
   0008 22                   54 	ld	(hl+),a
   0009 73                   55 	ld	(hl),e
   000A 23                   56 	inc	hl
   000B 36 00                57 	ld	(hl),#0x00
   000D 23                   58 	inc	hl
   000E 36 00                59 	ld	(hl),#0x00
   0010                      60 00101$:
   0010 F8 01                61 	lda	hl,1(sp)
   0012 2B                   62 	dec	hl
   0013 5E                   63 	ld	e,(hl)
   0014 23                   64 	inc	hl
   0015 56                   65 	ld	d,(hl)
   0016 1A                   66 	ld	a,(de)
   0017 4F                   67 	ld	c,a
   0018 B7                   68 	or	a,a
   0019 CAr34s00             69 	jp	Z,00103$
                             70 ;../puts.c:31: putchar(*s++);
   001C 2B                   71 	dec	hl
   001D 34                   72 	inc	(hl)
   001E 20 02                73 	jr	NZ,00109$
   0020 23                   74 	inc	hl
   0021 34                   75 	inc	(hl)
   0022                      76 00109$:
   0022 79                   77 	ld	a,c
   0023 F5                   78 	push	af
   0024 33                   79 	inc	sp
   0025 CDr00s00             80 	call	_putchar
   0028 E8 01                81 	lda	sp,1(sp)
                             82 ;../puts.c:32: i++;
   002A F8 02                83 	lda	hl,2(sp)
   002C 34                   84 	inc	(hl)
   002D 20 02                85 	jr	NZ,00110$
   002F 23                   86 	inc	hl
   0030 34                   87 	inc	(hl)
   0031                      88 00110$:
   0031 C3r10s00             89 	jp	00101$
   0034                      90 00103$:
                             91 ;../puts.c:34: putchar('\n');
   0034 3E 0A                92 	ld	a,#0x0A
   0036 F5                   93 	push	af
   0037 33                   94 	inc	sp
   0038 CDr00s00             95 	call	_putchar
   003B E8 01                96 	lda	sp,1(sp)
                             97 ;../puts.c:35: return i+1;
   003D F8 02                98 	lda	hl,2(sp)
   003F 5E                   99 	ld	e,(hl)
   0040 23                  100 	inc	hl
   0041 56                  101 	ld	d,(hl)
   0042 13                  102 	inc	de
   0043                     103 00104$:
   0043 E8 04               104 	lda	sp,4(sp)
   0045 C9                  105 	ret
   0046                     106 _puts_end::
                            107 	.area _CODE
                            108 	.area _CABS

                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:26:13 2013
                              5 ;--------------------------------------------------------
                              6 	.module vprintf
                              7 	.optsdcc -mgbz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _vprintf
                             13 	.globl _printf
                             14 ;--------------------------------------------------------
                             15 ;  ram data
                             16 ;--------------------------------------------------------
                             17 	.area _DATA
                             18 ;--------------------------------------------------------
                             19 ; overlayable items in  ram 
                             20 ;--------------------------------------------------------
                             21 	.area _OVERLAY
                             22 ;--------------------------------------------------------
                             23 ; external initialized ram data
                             24 ;--------------------------------------------------------
                             25 ;--------------------------------------------------------
                             26 ; global & static initialisations
                             27 ;--------------------------------------------------------
                             28 	.area _HOME
                             29 	.area _GSINIT
                             30 	.area _GSFINAL
                             31 	.area _GSINIT
                             32 ;--------------------------------------------------------
                             33 ; Home
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _HOME
                             37 ;--------------------------------------------------------
                             38 ; code
                             39 ;--------------------------------------------------------
                             40 	.area _CODE
                             41 ;../vprintf.c:29: static void put_char_to_stdout( char c, void* p ) _REENTRANT
                             42 ;	---------------------------------
                             43 ; Function put_char_to_stdout
                             44 ; ---------------------------------
   0000                      45 _put_char_to_stdout:
                             46 	
                             47 ;../vprintf.c:32: putchar( c );
   0000 F8 02                48 	lda	hl,2(sp)
   0002 7E                   49 	ld	a,(hl)
   0003 F5                   50 	push	af
   0004 33                   51 	inc	sp
   0005 CDr00s00             52 	call	_putchar
   0008 E8 01                53 	lda	sp,1(sp)
   000A                      54 00101$:
                             55 	
   000A C9                   56 	ret
                             57 ;../vprintf.c:35: int vprintf (const char *format, va_list ap)
                             58 ;	---------------------------------
                             59 ; Function vprintf
                             60 ; ---------------------------------
   000B                      61 _vprintf_start::
   000B                      62 _vprintf:
                             63 	
                             64 ;../vprintf.c:37: return _print_format( put_char_to_stdout, NULL, format, ap );
   000B F8 04                65 	lda	hl,4(sp)
   000D 2A                   66 	ld	a,(hl+)
   000E 66                   67 	ld	h,(hl)
   000F 6F                   68 	ld	l,a
   0010 E5                   69 	push	hl
   0011 F8 04                70 	lda	hl,4(sp)
   0013 2A                   71 	ld	a,(hl+)
   0014 66                   72 	ld	h,(hl)
   0015 6F                   73 	ld	l,a
   0016 E5                   74 	push	hl
   0017 21 00 00             75 	ld	hl,#0x0000
   001A E5                   76 	push	hl
   001B 21r00s00             77 	ld	hl,#_put_char_to_stdout
   001E E5                   78 	push	hl
   001F CDr00s00             79 	call	__print_format
   0022 E8 08                80 	lda	sp,8(sp)
   0024                      81 00101$:
                             82 	
   0024 C9                   83 	ret
   0025                      84 _vprintf_end::
                             85 ;../vprintf.c:40: int printf (const char *format, ...)
                             86 ;	---------------------------------
                             87 ; Function printf
                             88 ; ---------------------------------
   0025                      89 _printf_start::
   0025                      90 _printf:
                             91 	
                             92 ;../vprintf.c:45: va_start (arg, format);
   0025 F8 02                93 	lda	hl,2(sp)
   0027 4D                   94 	ld	c,l
   0028 44                   95 	ld	b,h
   0029 03                   96 	inc	bc
   002A 03                   97 	inc	bc
                             98 ;../vprintf.c:46: i = _print_format( put_char_to_stdout, NULL, format, arg );
   002B C5                   99 	push	bc
   002C F8 04               100 	lda	hl,4(sp)
   002E 2A                  101 	ld	a,(hl+)
   002F 66                  102 	ld	h,(hl)
   0030 6F                  103 	ld	l,a
   0031 E5                  104 	push	hl
   0032 21 00 00            105 	ld	hl,#0x0000
   0035 E5                  106 	push	hl
   0036 21r00s00            107 	ld	hl,#_put_char_to_stdout
   0039 E5                  108 	push	hl
   003A CDr00s00            109 	call	__print_format
   003D E8 08               110 	lda	sp,8(sp)
   003F 42                  111 	ld	b,d
   0040 4B                  112 	ld	c,e
   0041 59                  113 	ld	e,c
   0042 50                  114 	ld	d,b
                            115 ;../vprintf.c:49: return i;
   0043                     116 00101$:
                            117 	
   0043 C9                  118 	ret
   0044                     119 _printf_end::
                            120 	.area _CODE
                            121 	.area _CABS

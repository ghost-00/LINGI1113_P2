                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:25:41 2013
                              5 ;--------------------------------------------------------
                              6 	.module tanhf
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _tanhf
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in internal ram 
                             34 ;--------------------------------------------------------
                             35 	.area OSEG    (OVR,DATA)
                             36 ;--------------------------------------------------------
                             37 ; indirectly addressable internal ram data
                             38 ;--------------------------------------------------------
                             39 	.area ISEG    (DATA)
                             40 ;--------------------------------------------------------
                             41 ; absolute internal ram data
                             42 ;--------------------------------------------------------
                             43 	.area IABS    (ABS,DATA)
                             44 	.area IABS    (ABS,DATA)
                             45 ;--------------------------------------------------------
                             46 ; bit data
                             47 ;--------------------------------------------------------
                             48 	.area BSEG    (BIT)
                             49 ;--------------------------------------------------------
                             50 ; paged external ram data
                             51 ;--------------------------------------------------------
                             52 	.area PSEG    (PAG,XDATA)
                             53 ;--------------------------------------------------------
                             54 ; external ram data
                             55 ;--------------------------------------------------------
                             56 	.area XSEG    (XDATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute external ram data
                             59 ;--------------------------------------------------------
                             60 	.area XABS    (ABS,XDATA)
                             61 ;--------------------------------------------------------
                             62 ; external initialized ram data
                             63 ;--------------------------------------------------------
                             64 	.area XISEG   (XDATA)
                             65 	.area HOME    (CODE)
                             66 	.area GSINIT0 (CODE)
                             67 	.area GSINIT1 (CODE)
                             68 	.area GSINIT2 (CODE)
                             69 	.area GSINIT3 (CODE)
                             70 	.area GSINIT4 (CODE)
                             71 	.area GSINIT5 (CODE)
                             72 	.area GSINIT  (CODE)
                             73 	.area GSFINAL (CODE)
                             74 	.area CSEG    (CODE)
                             75 ;--------------------------------------------------------
                             76 ; global & static initialisations
                             77 ;--------------------------------------------------------
                             78 	.area HOME    (CODE)
                             79 	.area GSINIT  (CODE)
                             80 	.area GSFINAL (CODE)
                             81 	.area GSINIT  (CODE)
                             82 ;--------------------------------------------------------
                             83 ; Home
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area HOME    (CODE)
                             87 ;--------------------------------------------------------
                             88 ; code
                             89 ;--------------------------------------------------------
                             90 	.area CSEG    (CODE)
                             91 ;------------------------------------------------------------
                             92 ;Allocation info for local variables in function 'tanhf'
                             93 ;------------------------------------------------------------
                             94 ;x                         Allocated to stack - offset 1
                             95 ;f                         Allocated to stack - offset 5
                             96 ;g                         Allocated to stack - offset 9
                             97 ;r                         Allocated to stack - offset 13
                             98 ;sloc0                     Allocated to stack - offset 17
                             99 ;------------------------------------------------------------
                            100 ;	tanhf.c:40: float tanhf(const float x) _FLOAT_FUNC_REENTRANT
                            101 ;	-----------------------------------------
                            102 ;	 function tanhf
                            103 ;	-----------------------------------------
   0000                     104 _tanhf:
                    0002    105 	ar2 = 0x02
                    0003    106 	ar3 = 0x03
                    0004    107 	ar4 = 0x04
                    0005    108 	ar5 = 0x05
                    0006    109 	ar6 = 0x06
                    0007    110 	ar7 = 0x07
                    0000    111 	ar0 = 0x00
                    0001    112 	ar1 = 0x01
   0000 C0*00               113 	push	_bp
   0002 85 81*00            114 	mov	_bp,sp
   0005 C0 82               115 	push	dpl
   0007 C0 83               116 	push	dph
   0009 C0 F0               117 	push	b
   000B C0 E0               118 	push	acc
   000D E5 81               119 	mov	a,sp
   000F 24 14               120 	add	a,#0x14
   0011 F5 81               121 	mov	sp,a
                            122 ;	tanhf.c:44: f=fabsf(x);
   0013 A8*00               123 	mov	r0,_bp
   0015 08                  124 	inc	r0
   0016 86 82               125 	mov	dpl,@r0
   0018 08                  126 	inc	r0
   0019 86 83               127 	mov	dph,@r0
   001B 08                  128 	inc	r0
   001C 86 F0               129 	mov	b,@r0
   001E 08                  130 	inc	r0
   001F E6                  131 	mov	a,@r0
   0020 12s00r00            132 	lcall	_fabsf
   0023 AA 82               133 	mov	r2,dpl
   0025 AB 83               134 	mov	r3,dph
   0027 AC F0               135 	mov	r4,b
   0029 FD                  136 	mov	r5,a
   002A E5*00               137 	mov	a,_bp
   002C 24 05               138 	add	a,#0x05
   002E F8                  139 	mov	r0,a
   002F A6 02               140 	mov	@r0,ar2
   0031 08                  141 	inc	r0
   0032 A6 03               142 	mov	@r0,ar3
   0034 08                  143 	inc	r0
   0035 A6 04               144 	mov	@r0,ar4
   0037 08                  145 	inc	r0
   0038 A6 05               146 	mov	@r0,ar5
                            147 ;	tanhf.c:45: if(f>SBIG) r=1.0;
   003A 74 B0               148 	mov	a,#0xB0
   003C C0 E0               149 	push	acc
   003E 74 2C               150 	mov	a,#0x2C
   0040 C0 E0               151 	push	acc
   0042 74 10               152 	mov	a,#0x10
   0044 C0 E0               153 	push	acc
   0046 74 41               154 	mov	a,#0x41
   0048 C0 E0               155 	push	acc
   004A E5*00               156 	mov	a,_bp
   004C 24 05               157 	add	a,#0x05
   004E F8                  158 	mov	r0,a
   004F 86 82               159 	mov	dpl,@r0
   0051 08                  160 	inc	r0
   0052 86 83               161 	mov	dph,@r0
   0054 08                  162 	inc	r0
   0055 86 F0               163 	mov	b,@r0
   0057 08                  164 	inc	r0
   0058 E6                  165 	mov	a,@r0
   0059 12s00r00            166 	lcall	___fsgt
   005C AC 82               167 	mov	r4,dpl
   005E E5 81               168 	mov	a,sp
   0060 24 FC               169 	add	a,#0xfc
   0062 F5 81               170 	mov	sp,a
   0064 EC                  171 	mov	a,r4
   0065 60 13               172 	jz	00108$
   0067 E5*00               173 	mov	a,_bp
   0069 24 0D               174 	add	a,#0x0d
   006B F8                  175 	mov	r0,a
   006C 76 00               176 	mov	@r0,#0x00
   006E 08                  177 	inc	r0
   006F 76 00               178 	mov	@r0,#0x00
   0071 08                  179 	inc	r0
   0072 76 80               180 	mov	@r0,#0x80
   0074 08                  181 	inc	r0
   0075 76 3F               182 	mov	@r0,#0x3F
   0077 02s03r6B            183 	ljmp	00109$
   007A                     184 00108$:
                            185 ;	tanhf.c:46: else if(f>K1)
   007A 74 54               186 	mov	a,#0x54
   007C C0 E0               187 	push	acc
   007E 74 9F               188 	mov	a,#0x9F
   0080 C0 E0               189 	push	acc
   0082 74 0C               190 	mov	a,#0x0C
   0084 C0 E0               191 	push	acc
   0086 74 3F               192 	mov	a,#0x3F
   0088 C0 E0               193 	push	acc
   008A E5*00               194 	mov	a,_bp
   008C 24 05               195 	add	a,#0x05
   008E F8                  196 	mov	r0,a
   008F 86 82               197 	mov	dpl,@r0
   0091 08                  198 	inc	r0
   0092 86 83               199 	mov	dph,@r0
   0094 08                  200 	inc	r0
   0095 86 F0               201 	mov	b,@r0
   0097 08                  202 	inc	r0
   0098 E6                  203 	mov	a,@r0
   0099 12s00r00            204 	lcall	___fsgt
   009C AC 82               205 	mov	r4,dpl
   009E E5 81               206 	mov	a,sp
   00A0 24 FC               207 	add	a,#0xfc
   00A2 F5 81               208 	mov	sp,a
   00A4 EC                  209 	mov	a,r4
   00A5 70 03               210 	jnz	00119$
   00A7 02s01rA8            211 	ljmp	00105$
   00AA                     212 00119$:
                            213 ;	tanhf.c:48: r=0.5-1.0/(expf(f+f)+1.0);
   00AA E5*00               214 	mov	a,_bp
   00AC 24 05               215 	add	a,#0x05
   00AE F8                  216 	mov	r0,a
   00AF E6                  217 	mov	a,@r0
   00B0 C0 E0               218 	push	acc
   00B2 08                  219 	inc	r0
   00B3 E6                  220 	mov	a,@r0
   00B4 C0 E0               221 	push	acc
   00B6 08                  222 	inc	r0
   00B7 E6                  223 	mov	a,@r0
   00B8 C0 E0               224 	push	acc
   00BA 08                  225 	inc	r0
   00BB E6                  226 	mov	a,@r0
   00BC C0 E0               227 	push	acc
   00BE E5*00               228 	mov	a,_bp
   00C0 24 05               229 	add	a,#0x05
   00C2 F8                  230 	mov	r0,a
   00C3 86 82               231 	mov	dpl,@r0
   00C5 08                  232 	inc	r0
   00C6 86 83               233 	mov	dph,@r0
   00C8 08                  234 	inc	r0
   00C9 86 F0               235 	mov	b,@r0
   00CB 08                  236 	inc	r0
   00CC E6                  237 	mov	a,@r0
   00CD 12s00r00            238 	lcall	___fsadd
   00D0 AA 82               239 	mov	r2,dpl
   00D2 AB 83               240 	mov	r3,dph
   00D4 AC F0               241 	mov	r4,b
   00D6 FD                  242 	mov	r5,a
   00D7 E5 81               243 	mov	a,sp
   00D9 24 FC               244 	add	a,#0xfc
   00DB F5 81               245 	mov	sp,a
   00DD 8A 82               246 	mov	dpl,r2
   00DF 8B 83               247 	mov	dph,r3
   00E1 8C F0               248 	mov	b,r4
   00E3 ED                  249 	mov	a,r5
   00E4 12s00r00            250 	lcall	_expf
   00E7 AA 82               251 	mov	r2,dpl
   00E9 AB 83               252 	mov	r3,dph
   00EB AC F0               253 	mov	r4,b
   00ED FD                  254 	mov	r5,a
   00EE E4                  255 	clr	a
   00EF C0 E0               256 	push	acc
   00F1 C0 E0               257 	push	acc
   00F3 74 80               258 	mov	a,#0x80
   00F5 C0 E0               259 	push	acc
   00F7 74 3F               260 	mov	a,#0x3F
   00F9 C0 E0               261 	push	acc
   00FB 8A 82               262 	mov	dpl,r2
   00FD 8B 83               263 	mov	dph,r3
   00FF 8C F0               264 	mov	b,r4
   0101 ED                  265 	mov	a,r5
   0102 12s00r00            266 	lcall	___fsadd
   0105 AA 82               267 	mov	r2,dpl
   0107 AB 83               268 	mov	r3,dph
   0109 AC F0               269 	mov	r4,b
   010B FD                  270 	mov	r5,a
   010C E5 81               271 	mov	a,sp
   010E 24 FC               272 	add	a,#0xfc
   0110 F5 81               273 	mov	sp,a
   0112 C0 02               274 	push	ar2
   0114 C0 03               275 	push	ar3
   0116 C0 04               276 	push	ar4
   0118 C0 05               277 	push	ar5
   011A 90 00 00            278 	mov	dptr,#0x0000
   011D 75 F0 80            279 	mov	b,#0x80
   0120 74 3F               280 	mov	a,#0x3F
   0122 12s00r00            281 	lcall	___fsdiv
   0125 AA 82               282 	mov	r2,dpl
   0127 AB 83               283 	mov	r3,dph
   0129 AC F0               284 	mov	r4,b
   012B FD                  285 	mov	r5,a
   012C E5 81               286 	mov	a,sp
   012E 24 FC               287 	add	a,#0xfc
   0130 F5 81               288 	mov	sp,a
   0132 C0 02               289 	push	ar2
   0134 C0 03               290 	push	ar3
   0136 C0 04               291 	push	ar4
   0138 C0 05               292 	push	ar5
   013A 90 00 00            293 	mov	dptr,#(0x00&0x00ff)
   013D E4                  294 	clr	a
   013E F5 F0               295 	mov	b,a
   0140 74 3F               296 	mov	a,#0x3F
   0142 12s00r00            297 	lcall	___fssub
   0145 AA 82               298 	mov	r2,dpl
   0147 AB 83               299 	mov	r3,dph
   0149 AC F0               300 	mov	r4,b
   014B FD                  301 	mov	r5,a
   014C E5 81               302 	mov	a,sp
   014E 24 FC               303 	add	a,#0xfc
   0150 F5 81               304 	mov	sp,a
   0152 E5*00               305 	mov	a,_bp
   0154 24 0D               306 	add	a,#0x0d
   0156 F8                  307 	mov	r0,a
   0157 A6 02               308 	mov	@r0,ar2
   0159 08                  309 	inc	r0
   015A A6 03               310 	mov	@r0,ar3
   015C 08                  311 	inc	r0
   015D A6 04               312 	mov	@r0,ar4
   015F 08                  313 	inc	r0
   0160 A6 05               314 	mov	@r0,ar5
                            315 ;	tanhf.c:49: r+=r;
   0162 E5*00               316 	mov	a,_bp
   0164 24 0D               317 	add	a,#0x0d
   0166 F8                  318 	mov	r0,a
   0167 E6                  319 	mov	a,@r0
   0168 C0 E0               320 	push	acc
   016A 08                  321 	inc	r0
   016B E6                  322 	mov	a,@r0
   016C C0 E0               323 	push	acc
   016E 08                  324 	inc	r0
   016F E6                  325 	mov	a,@r0
   0170 C0 E0               326 	push	acc
   0172 08                  327 	inc	r0
   0173 E6                  328 	mov	a,@r0
   0174 C0 E0               329 	push	acc
   0176 E5*00               330 	mov	a,_bp
   0178 24 0D               331 	add	a,#0x0d
   017A F8                  332 	mov	r0,a
   017B 86 82               333 	mov	dpl,@r0
   017D 08                  334 	inc	r0
   017E 86 83               335 	mov	dph,@r0
   0180 08                  336 	inc	r0
   0181 86 F0               337 	mov	b,@r0
   0183 08                  338 	inc	r0
   0184 E6                  339 	mov	a,@r0
   0185 12s00r00            340 	lcall	___fsadd
   0188 AA 82               341 	mov	r2,dpl
   018A AB 83               342 	mov	r3,dph
   018C AC F0               343 	mov	r4,b
   018E FD                  344 	mov	r5,a
   018F E5 81               345 	mov	a,sp
   0191 24 FC               346 	add	a,#0xfc
   0193 F5 81               347 	mov	sp,a
   0195 E5*00               348 	mov	a,_bp
   0197 24 0D               349 	add	a,#0x0d
   0199 F8                  350 	mov	r0,a
   019A A6 02               351 	mov	@r0,ar2
   019C 08                  352 	inc	r0
   019D A6 03               353 	mov	@r0,ar3
   019F 08                  354 	inc	r0
   01A0 A6 04               355 	mov	@r0,ar4
   01A2 08                  356 	inc	r0
   01A3 A6 05               357 	mov	@r0,ar5
   01A5 02s03r6B            358 	ljmp	00109$
   01A8                     359 00105$:
                            360 ;	tanhf.c:51: else if(f<EPS) r=f;
   01A8 E4                  361 	clr	a
   01A9 C0 E0               362 	push	acc
   01AB C0 E0               363 	push	acc
   01AD 74 80               364 	mov	a,#0x80
   01AF C0 E0               365 	push	acc
   01B1 74 39               366 	mov	a,#0x39
   01B3 C0 E0               367 	push	acc
   01B5 E5*00               368 	mov	a,_bp
   01B7 24 05               369 	add	a,#0x05
   01B9 F8                  370 	mov	r0,a
   01BA 86 82               371 	mov	dpl,@r0
   01BC 08                  372 	inc	r0
   01BD 86 83               373 	mov	dph,@r0
   01BF 08                  374 	inc	r0
   01C0 86 F0               375 	mov	b,@r0
   01C2 08                  376 	inc	r0
   01C3 E6                  377 	mov	a,@r0
   01C4 12s00r00            378 	lcall	___fslt
   01C7 AC 82               379 	mov	r4,dpl
   01C9 E5 81               380 	mov	a,sp
   01CB 24 FC               381 	add	a,#0xfc
   01CD F5 81               382 	mov	sp,a
   01CF EC                  383 	mov	a,r4
   01D0 60 1B               384 	jz	00102$
   01D2 E5*00               385 	mov	a,_bp
   01D4 24 05               386 	add	a,#0x05
   01D6 F8                  387 	mov	r0,a
   01D7 E5*00               388 	mov	a,_bp
   01D9 24 0D               389 	add	a,#0x0d
   01DB F9                  390 	mov	r1,a
   01DC E6                  391 	mov	a,@r0
   01DD F7                  392 	mov	@r1,a
   01DE 08                  393 	inc	r0
   01DF 09                  394 	inc	r1
   01E0 E6                  395 	mov	a,@r0
   01E1 F7                  396 	mov	@r1,a
   01E2 08                  397 	inc	r0
   01E3 09                  398 	inc	r1
   01E4 E6                  399 	mov	a,@r0
   01E5 F7                  400 	mov	@r1,a
   01E6 08                  401 	inc	r0
   01E7 09                  402 	inc	r1
   01E8 E6                  403 	mov	a,@r0
   01E9 F7                  404 	mov	@r1,a
   01EA 02s03r6B            405 	ljmp	00109$
   01ED                     406 00102$:
                            407 ;	tanhf.c:54: g=f*f;
   01ED E5*00               408 	mov	a,_bp
   01EF 24 05               409 	add	a,#0x05
   01F1 F8                  410 	mov	r0,a
   01F2 E6                  411 	mov	a,@r0
   01F3 C0 E0               412 	push	acc
   01F5 08                  413 	inc	r0
   01F6 E6                  414 	mov	a,@r0
   01F7 C0 E0               415 	push	acc
   01F9 08                  416 	inc	r0
   01FA E6                  417 	mov	a,@r0
   01FB C0 E0               418 	push	acc
   01FD 08                  419 	inc	r0
   01FE E6                  420 	mov	a,@r0
   01FF C0 E0               421 	push	acc
   0201 E5*00               422 	mov	a,_bp
   0203 24 05               423 	add	a,#0x05
   0205 F8                  424 	mov	r0,a
   0206 86 82               425 	mov	dpl,@r0
   0208 08                  426 	inc	r0
   0209 86 83               427 	mov	dph,@r0
   020B 08                  428 	inc	r0
   020C 86 F0               429 	mov	b,@r0
   020E 08                  430 	inc	r0
   020F E6                  431 	mov	a,@r0
   0210 12s00r00            432 	lcall	___fsmul
   0213 AA 82               433 	mov	r2,dpl
   0215 AB 83               434 	mov	r3,dph
   0217 AC F0               435 	mov	r4,b
   0219 FD                  436 	mov	r5,a
   021A E5 81               437 	mov	a,sp
   021C 24 FC               438 	add	a,#0xfc
   021E F5 81               439 	mov	sp,a
   0220 E5*00               440 	mov	a,_bp
   0222 24 09               441 	add	a,#0x09
   0224 F8                  442 	mov	r0,a
   0225 A6 02               443 	mov	@r0,ar2
   0227 08                  444 	inc	r0
   0228 A6 03               445 	mov	@r0,ar3
   022A 08                  446 	inc	r0
   022B A6 04               447 	mov	@r0,ar4
   022D 08                  448 	inc	r0
   022E A6 05               449 	mov	@r0,ar5
                            450 ;	tanhf.c:55: r=f+f*(P(g)/Q(g));
   0230 E5*00               451 	mov	a,_bp
   0232 24 09               452 	add	a,#0x09
   0234 F8                  453 	mov	r0,a
   0235 E6                  454 	mov	a,@r0
   0236 C0 E0               455 	push	acc
   0238 08                  456 	inc	r0
   0239 E6                  457 	mov	a,@r0
   023A C0 E0               458 	push	acc
   023C 08                  459 	inc	r0
   023D E6                  460 	mov	a,@r0
   023E C0 E0               461 	push	acc
   0240 08                  462 	inc	r0
   0241 E6                  463 	mov	a,@r0
   0242 C0 E0               464 	push	acc
   0244 90 11 B2            465 	mov	dptr,#0x11B2
   0247 75 F0 7B            466 	mov	b,#0x7B
   024A 74 BB               467 	mov	a,#0xBB
   024C 12s00r00            468 	lcall	___fsmul
   024F AC 82               469 	mov	r4,dpl
   0251 AD 83               470 	mov	r5,dph
   0253 AA F0               471 	mov	r2,b
   0255 FB                  472 	mov	r3,a
   0256 E5 81               473 	mov	a,sp
   0258 24 FC               474 	add	a,#0xfc
   025A F5 81               475 	mov	sp,a
   025C 74 C6               476 	mov	a,#0xC6
   025E C0 E0               477 	push	acc
   0260 74 E2               478 	mov	a,#0xE2
   0262 C0 E0               479 	push	acc
   0264 74 52               480 	mov	a,#0x52
   0266 C0 E0               481 	push	acc
   0268 74 BF               482 	mov	a,#0xBF
   026A C0 E0               483 	push	acc
   026C 8C 82               484 	mov	dpl,r4
   026E 8D 83               485 	mov	dph,r5
   0270 8A F0               486 	mov	b,r2
   0272 EB                  487 	mov	a,r3
   0273 12s00r00            488 	lcall	___fsadd
   0276 AA 82               489 	mov	r2,dpl
   0278 AB 83               490 	mov	r3,dph
   027A AC F0               491 	mov	r4,b
   027C FD                  492 	mov	r5,a
   027D E5 81               493 	mov	a,sp
   027F 24 FC               494 	add	a,#0xfc
   0281 F5 81               495 	mov	sp,a
   0283 E5*00               496 	mov	a,_bp
   0285 24 09               497 	add	a,#0x09
   0287 F8                  498 	mov	r0,a
   0288 E6                  499 	mov	a,@r0
   0289 C0 E0               500 	push	acc
   028B 08                  501 	inc	r0
   028C E6                  502 	mov	a,@r0
   028D C0 E0               503 	push	acc
   028F 08                  504 	inc	r0
   0290 E6                  505 	mov	a,@r0
   0291 C0 E0               506 	push	acc
   0293 08                  507 	inc	r0
   0294 E6                  508 	mov	a,@r0
   0295 C0 E0               509 	push	acc
   0297 8A 82               510 	mov	dpl,r2
   0299 8B 83               511 	mov	dph,r3
   029B 8C F0               512 	mov	b,r4
   029D ED                  513 	mov	a,r5
   029E 12s00r00            514 	lcall	___fsmul
   02A1 C8                  515 	xch	a,r0
   02A2 E5*00               516 	mov	a,_bp
   02A4 24 11               517 	add	a,#0x11
   02A6 C8                  518 	xch	a,r0
   02A7 A6 82               519 	mov	@r0,dpl
   02A9 08                  520 	inc	r0
   02AA A6 83               521 	mov	@r0,dph
   02AC 08                  522 	inc	r0
   02AD A6 F0               523 	mov	@r0,b
   02AF 08                  524 	inc	r0
   02B0 F6                  525 	mov	@r0,a
   02B1 E5 81               526 	mov	a,sp
   02B3 24 FC               527 	add	a,#0xfc
   02B5 F5 81               528 	mov	sp,a
   02B7 74 1A               529 	mov	a,#0x1A
   02B9 C0 E0               530 	push	acc
   02BB 74 2A               531 	mov	a,#0x2A
   02BD C0 E0               532 	push	acc
   02BF 74 1E               533 	mov	a,#0x1E
   02C1 C0 E0               534 	push	acc
   02C3 74 40               535 	mov	a,#0x40
   02C5 C0 E0               536 	push	acc
   02C7 E5*00               537 	mov	a,_bp
   02C9 24 09               538 	add	a,#0x09
   02CB F8                  539 	mov	r0,a
   02CC 86 82               540 	mov	dpl,@r0
   02CE 08                  541 	inc	r0
   02CF 86 83               542 	mov	dph,@r0
   02D1 08                  543 	inc	r0
   02D2 86 F0               544 	mov	b,@r0
   02D4 08                  545 	inc	r0
   02D5 E6                  546 	mov	a,@r0
   02D6 12s00r00            547 	lcall	___fsadd
   02D9 AE 82               548 	mov	r6,dpl
   02DB AF 83               549 	mov	r7,dph
   02DD AA F0               550 	mov	r2,b
   02DF FB                  551 	mov	r3,a
   02E0 E5 81               552 	mov	a,sp
   02E2 24 FC               553 	add	a,#0xfc
   02E4 F5 81               554 	mov	sp,a
   02E6 C0 06               555 	push	ar6
   02E8 C0 07               556 	push	ar7
   02EA C0 02               557 	push	ar2
   02EC C0 03               558 	push	ar3
   02EE E5*00               559 	mov	a,_bp
   02F0 24 11               560 	add	a,#0x11
   02F2 F8                  561 	mov	r0,a
   02F3 86 82               562 	mov	dpl,@r0
   02F5 08                  563 	inc	r0
   02F6 86 83               564 	mov	dph,@r0
   02F8 08                  565 	inc	r0
   02F9 86 F0               566 	mov	b,@r0
   02FB 08                  567 	inc	r0
   02FC E6                  568 	mov	a,@r0
   02FD 12s00r00            569 	lcall	___fsdiv
   0300 AA 82               570 	mov	r2,dpl
   0302 AB 83               571 	mov	r3,dph
   0304 AC F0               572 	mov	r4,b
   0306 FD                  573 	mov	r5,a
   0307 E5 81               574 	mov	a,sp
   0309 24 FC               575 	add	a,#0xfc
   030B F5 81               576 	mov	sp,a
   030D C0 02               577 	push	ar2
   030F C0 03               578 	push	ar3
   0311 C0 04               579 	push	ar4
   0313 C0 05               580 	push	ar5
   0315 E5*00               581 	mov	a,_bp
   0317 24 05               582 	add	a,#0x05
   0319 F8                  583 	mov	r0,a
   031A 86 82               584 	mov	dpl,@r0
   031C 08                  585 	inc	r0
   031D 86 83               586 	mov	dph,@r0
   031F 08                  587 	inc	r0
   0320 86 F0               588 	mov	b,@r0
   0322 08                  589 	inc	r0
   0323 E6                  590 	mov	a,@r0
   0324 12s00r00            591 	lcall	___fsmul
   0327 AA 82               592 	mov	r2,dpl
   0329 AB 83               593 	mov	r3,dph
   032B AC F0               594 	mov	r4,b
   032D FD                  595 	mov	r5,a
   032E E5 81               596 	mov	a,sp
   0330 24 FC               597 	add	a,#0xfc
   0332 F5 81               598 	mov	sp,a
   0334 C0 02               599 	push	ar2
   0336 C0 03               600 	push	ar3
   0338 C0 04               601 	push	ar4
   033A C0 05               602 	push	ar5
   033C E5*00               603 	mov	a,_bp
   033E 24 05               604 	add	a,#0x05
   0340 F8                  605 	mov	r0,a
   0341 86 82               606 	mov	dpl,@r0
   0343 08                  607 	inc	r0
   0344 86 83               608 	mov	dph,@r0
   0346 08                  609 	inc	r0
   0347 86 F0               610 	mov	b,@r0
   0349 08                  611 	inc	r0
   034A E6                  612 	mov	a,@r0
   034B 12s00r00            613 	lcall	___fsadd
   034E AA 82               614 	mov	r2,dpl
   0350 AB 83               615 	mov	r3,dph
   0352 AC F0               616 	mov	r4,b
   0354 FD                  617 	mov	r5,a
   0355 E5 81               618 	mov	a,sp
   0357 24 FC               619 	add	a,#0xfc
   0359 F5 81               620 	mov	sp,a
   035B E5*00               621 	mov	a,_bp
   035D 24 0D               622 	add	a,#0x0d
   035F F8                  623 	mov	r0,a
   0360 A6 02               624 	mov	@r0,ar2
   0362 08                  625 	inc	r0
   0363 A6 03               626 	mov	@r0,ar3
   0365 08                  627 	inc	r0
   0366 A6 04               628 	mov	@r0,ar4
   0368 08                  629 	inc	r0
   0369 A6 05               630 	mov	@r0,ar5
   036B                     631 00109$:
                            632 ;	tanhf.c:57: if(x<0.0) r=-r;
   036B E4                  633 	clr	a
   036C C0 E0               634 	push	acc
   036E C0 E0               635 	push	acc
   0370 C0 E0               636 	push	acc
   0372 C0 E0               637 	push	acc
   0374 A8*00               638 	mov	r0,_bp
   0376 08                  639 	inc	r0
   0377 86 82               640 	mov	dpl,@r0
   0379 08                  641 	inc	r0
   037A 86 83               642 	mov	dph,@r0
   037C 08                  643 	inc	r0
   037D 86 F0               644 	mov	b,@r0
   037F 08                  645 	inc	r0
   0380 E6                  646 	mov	a,@r0
   0381 12s00r00            647 	lcall	___fslt
   0384 AA 82               648 	mov	r2,dpl
   0386 E5 81               649 	mov	a,sp
   0388 24 FC               650 	add	a,#0xfc
   038A F5 81               651 	mov	sp,a
   038C EA                  652 	mov	a,r2
   038D 60 12               653 	jz	00111$
   038F E5*00               654 	mov	a,_bp
   0391 24 0D               655 	add	a,#0x0d
   0393 F8                  656 	mov	r0,a
   0394 E6                  657 	mov	a,@r0
   0395 F6                  658 	mov	@r0,a
   0396 08                  659 	inc	r0
   0397 E6                  660 	mov	a,@r0
   0398 F6                  661 	mov	@r0,a
   0399 08                  662 	inc	r0
   039A E6                  663 	mov	a,@r0
   039B F6                  664 	mov	@r0,a
   039C 08                  665 	inc	r0
   039D E6                  666 	mov	a,@r0
   039E B2 E7               667 	cpl	acc.7
   03A0 F6                  668 	mov	@r0,a
   03A1                     669 00111$:
                            670 ;	tanhf.c:58: return r;
   03A1 E5*00               671 	mov	a,_bp
   03A3 24 0D               672 	add	a,#0x0d
   03A5 F8                  673 	mov	r0,a
   03A6 86 82               674 	mov	dpl,@r0
   03A8 08                  675 	inc	r0
   03A9 86 83               676 	mov	dph,@r0
   03AB 08                  677 	inc	r0
   03AC 86 F0               678 	mov	b,@r0
   03AE 08                  679 	inc	r0
   03AF E6                  680 	mov	a,@r0
   03B0 85*00 81            681 	mov	sp,_bp
   03B3 D0*00               682 	pop	_bp
   03B5 22                  683 	ret
                            684 	.area CSEG    (CODE)
                            685 	.area CONST   (CODE)
                            686 	.area XINIT   (CODE)
                            687 	.area CABS    (ABS,CODE)

                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:25:47 2013
                              5 ;--------------------------------------------------------
                              6 	.module floorf
                              7 	.optsdcc -mmcs51 --model-medium
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _floorf
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in internal ram 
                             34 ;--------------------------------------------------------
                             35 	.area OSEG    (OVR,DATA)
                             36 ;--------------------------------------------------------
                             37 ; indirectly addressable internal ram data
                             38 ;--------------------------------------------------------
                             39 	.area ISEG    (DATA)
                             40 ;--------------------------------------------------------
                             41 ; absolute internal ram data
                             42 ;--------------------------------------------------------
                             43 	.area IABS    (ABS,DATA)
                             44 	.area IABS    (ABS,DATA)
                             45 ;--------------------------------------------------------
                             46 ; bit data
                             47 ;--------------------------------------------------------
                             48 	.area BSEG    (BIT)
                             49 ;--------------------------------------------------------
                             50 ; paged external ram data
                             51 ;--------------------------------------------------------
                             52 	.area PSEG    (PAG,XDATA)
                             53 ;--------------------------------------------------------
                             54 ; external ram data
                             55 ;--------------------------------------------------------
                             56 	.area XSEG    (XDATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute external ram data
                             59 ;--------------------------------------------------------
                             60 	.area XABS    (ABS,XDATA)
                             61 ;--------------------------------------------------------
                             62 ; external initialized ram data
                             63 ;--------------------------------------------------------
                             64 	.area XISEG   (XDATA)
                             65 	.area HOME    (CODE)
                             66 	.area GSINIT0 (CODE)
                             67 	.area GSINIT1 (CODE)
                             68 	.area GSINIT2 (CODE)
                             69 	.area GSINIT3 (CODE)
                             70 	.area GSINIT4 (CODE)
                             71 	.area GSINIT5 (CODE)
                             72 	.area GSINIT  (CODE)
                             73 	.area GSFINAL (CODE)
                             74 	.area CSEG    (CODE)
                             75 ;--------------------------------------------------------
                             76 ; global & static initialisations
                             77 ;--------------------------------------------------------
                             78 	.area HOME    (CODE)
                             79 	.area GSINIT  (CODE)
                             80 	.area GSFINAL (CODE)
                             81 	.area GSINIT  (CODE)
                             82 ;--------------------------------------------------------
                             83 ; Home
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area HOME    (CODE)
                             87 ;--------------------------------------------------------
                             88 ; code
                             89 ;--------------------------------------------------------
                             90 	.area CSEG    (CODE)
                             91 ;------------------------------------------------------------
                             92 ;Allocation info for local variables in function 'floorf'
                             93 ;------------------------------------------------------------
                             94 ;x                         Allocated to stack - offset 1
                             95 ;r                         Allocated to stack - offset 5
                             96 ;------------------------------------------------------------
                             97 ;	floorf.c:23: float floorf (float x) _FLOAT_FUNC_REENTRANT
                             98 ;	-----------------------------------------
                             99 ;	 function floorf
                            100 ;	-----------------------------------------
   0000                     101 _floorf:
                    0002    102 	ar2 = 0x02
                    0003    103 	ar3 = 0x03
                    0004    104 	ar4 = 0x04
                    0005    105 	ar5 = 0x05
                    0006    106 	ar6 = 0x06
                    0007    107 	ar7 = 0x07
                    0000    108 	ar0 = 0x00
                    0001    109 	ar1 = 0x01
   0000 C0*00               110 	push	_bp
   0002 85 81*00            111 	mov	_bp,sp
   0005 C0 82               112 	push	dpl
   0007 C0 83               113 	push	dph
   0009 C0 F0               114 	push	b
   000B C0 E0               115 	push	acc
   000D E5 81               116 	mov	a,sp
   000F 24 08               117 	add	a,#0x08
   0011 F5 81               118 	mov	sp,a
                            119 ;	floorf.c:26: r=x;
   0013 A8*00               120 	mov	r0,_bp
   0015 08                  121 	inc	r0
   0016 86 82               122 	mov	dpl,@r0
   0018 08                  123 	inc	r0
   0019 86 83               124 	mov	dph,@r0
   001B 08                  125 	inc	r0
   001C 86 F0               126 	mov	b,@r0
   001E 08                  127 	inc	r0
   001F E6                  128 	mov	a,@r0
   0020 12s00r00            129 	lcall	___fs2slong
   0023 AA 82               130 	mov	r2,dpl
   0025 AB 83               131 	mov	r3,dph
   0027 AC F0               132 	mov	r4,b
   0029 FD                  133 	mov	r5,a
   002A E5*00               134 	mov	a,_bp
   002C 24 05               135 	add	a,#0x05
   002E F8                  136 	mov	r0,a
   002F A6 02               137 	mov	@r0,ar2
   0031 08                  138 	inc	r0
   0032 A6 03               139 	mov	@r0,ar3
   0034 08                  140 	inc	r0
   0035 A6 04               141 	mov	@r0,ar4
   0037 08                  142 	inc	r0
   0038 A6 05               143 	mov	@r0,ar5
                            144 ;	floorf.c:27: if (r<=0)
   003A E5*00               145 	mov	a,_bp
   003C 24 05               146 	add	a,#0x05
   003E F8                  147 	mov	r0,a
   003F C3                  148 	clr	c
   0040 E4                  149 	clr	a
   0041 96                  150 	subb	a,@r0
   0042 E4                  151 	clr	a
   0043 08                  152 	inc	r0
   0044 96                  153 	subb	a,@r0
   0045 E4                  154 	clr	a
   0046 08                  155 	inc	r0
   0047 96                  156 	subb	a,@r0
   0048 74 80               157 	mov	a,#(0x00 ^ 0x80)
   004A 08                  158 	inc	r0
   004B 86 F0               159 	mov	b,@r0
   004D 63 F0 80            160 	xrl	b,#0x80
   0050 95 F0               161 	subb	a,b
   0052 50 03               162 	jnc	00110$
   0054 02s00rC9            163 	ljmp	00102$
   0057                     164 00110$:
                            165 ;	floorf.c:28: return (r+((r>x)?-1:0));
   0057 E5*00               166 	mov	a,_bp
   0059 24 05               167 	add	a,#0x05
   005B F8                  168 	mov	r0,a
   005C 86 82               169 	mov	dpl,@r0
   005E 08                  170 	inc	r0
   005F 86 83               171 	mov	dph,@r0
   0061 08                  172 	inc	r0
   0062 86 F0               173 	mov	b,@r0
   0064 08                  174 	inc	r0
   0065 E6                  175 	mov	a,@r0
   0066 12s00r00            176 	lcall	___slong2fs
   0069 AC 82               177 	mov	r4,dpl
   006B AD 83               178 	mov	r5,dph
   006D AA F0               179 	mov	r2,b
   006F FB                  180 	mov	r3,a
   0070 A8*00               181 	mov	r0,_bp
   0072 08                  182 	inc	r0
   0073 E6                  183 	mov	a,@r0
   0074 C0 E0               184 	push	acc
   0076 08                  185 	inc	r0
   0077 E6                  186 	mov	a,@r0
   0078 C0 E0               187 	push	acc
   007A 08                  188 	inc	r0
   007B E6                  189 	mov	a,@r0
   007C C0 E0               190 	push	acc
   007E 08                  191 	inc	r0
   007F E6                  192 	mov	a,@r0
   0080 C0 E0               193 	push	acc
   0082 8C 82               194 	mov	dpl,r4
   0084 8D 83               195 	mov	dph,r5
   0086 8A F0               196 	mov	b,r2
   0088 EB                  197 	mov	a,r3
   0089 12s00r00            198 	lcall	___fsgt
   008C AA 82               199 	mov	r2,dpl
   008E E5 81               200 	mov	a,sp
   0090 24 FC               201 	add	a,#0xfc
   0092 F5 81               202 	mov	sp,a
   0094 EA                  203 	mov	a,r2
   0095 60 04               204 	jz	00106$
   0097 7A FF               205 	mov	r2,#0xFF
   0099 80 02               206 	sjmp	00107$
   009B                     207 00106$:
   009B 7A 00               208 	mov	r2,#0x00
   009D                     209 00107$:
   009D EA                  210 	mov	a,r2
   009E 33                  211 	rlc	a
   009F 95 E0               212 	subb	a,acc
   00A1 FB                  213 	mov	r3,a
   00A2 FC                  214 	mov	r4,a
   00A3 FD                  215 	mov	r5,a
   00A4 E5*00               216 	mov	a,_bp
   00A6 24 05               217 	add	a,#0x05
   00A8 F8                  218 	mov	r0,a
   00A9 EA                  219 	mov	a,r2
   00AA 26                  220 	add	a,@r0
   00AB FA                  221 	mov	r2,a
   00AC EB                  222 	mov	a,r3
   00AD 08                  223 	inc	r0
   00AE 36                  224 	addc	a,@r0
   00AF FB                  225 	mov	r3,a
   00B0 EC                  226 	mov	a,r4
   00B1 08                  227 	inc	r0
   00B2 36                  228 	addc	a,@r0
   00B3 FC                  229 	mov	r4,a
   00B4 ED                  230 	mov	a,r5
   00B5 08                  231 	inc	r0
   00B6 36                  232 	addc	a,@r0
   00B7 8A 82               233 	mov	dpl,r2
   00B9 8B 83               234 	mov	dph,r3
   00BB 8C F0               235 	mov	b,r4
   00BD 12s00r00            236 	lcall	___slong2fs
   00C0 AA 82               237 	mov	r2,dpl
   00C2 AB 83               238 	mov	r3,dph
   00C4 AC F0               239 	mov	r4,b
   00C6 FD                  240 	mov	r5,a
   00C7 80 19               241 	sjmp	00104$
   00C9                     242 00102$:
                            243 ;	floorf.c:30: return r;
   00C9 E5*00               244 	mov	a,_bp
   00CB 24 05               245 	add	a,#0x05
   00CD F8                  246 	mov	r0,a
   00CE 86 82               247 	mov	dpl,@r0
   00D0 08                  248 	inc	r0
   00D1 86 83               249 	mov	dph,@r0
   00D3 08                  250 	inc	r0
   00D4 86 F0               251 	mov	b,@r0
   00D6 08                  252 	inc	r0
   00D7 E6                  253 	mov	a,@r0
   00D8 12s00r00            254 	lcall	___slong2fs
   00DB AA 82               255 	mov	r2,dpl
   00DD AB 83               256 	mov	r3,dph
   00DF AC F0               257 	mov	r4,b
   00E1 FD                  258 	mov	r5,a
   00E2                     259 00104$:
   00E2 85*00 81            260 	mov	sp,_bp
   00E5 D0*00               261 	pop	_bp
   00E7 22                  262 	ret
                            263 	.area CSEG    (CODE)
                            264 	.area CONST   (CODE)
                            265 	.area XINIT   (CODE)
                            266 	.area CABS    (ABS,CODE)

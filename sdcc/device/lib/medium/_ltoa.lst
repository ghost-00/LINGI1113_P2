                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:25:50 2013
                              5 ;--------------------------------------------------------
                              6 	.module _ltoa
                              7 	.optsdcc -mmcs51 --model-medium
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl __ltoa
                             13 	.globl __ultoa
                             14 	.globl __ltoa_PARM_3
                             15 	.globl __ltoa_PARM_2
                             16 	.globl __ultoa_PARM_3
                             17 	.globl __ultoa_PARM_2
                             18 ;--------------------------------------------------------
                             19 ; special function registers
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; special function bits
                             25 ;--------------------------------------------------------
                             26 	.area RSEG    (ABS,DATA)
   0000                      27 	.org 0x0000
                             28 ;--------------------------------------------------------
                             29 ; overlayable register banks
                             30 ;--------------------------------------------------------
                             31 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      32 	.ds 8
                             33 ;--------------------------------------------------------
                             34 ; internal ram data
                             35 ;--------------------------------------------------------
                             36 	.area DSEG    (DATA)
   0000                      37 __ultoa_sloc0_1_0:
   0000                      38 	.ds 4
                             39 ;--------------------------------------------------------
                             40 ; overlayable items in internal ram 
                             41 ;--------------------------------------------------------
                             42 	.area OSEG    (OVR,DATA)
                             43 ;--------------------------------------------------------
                             44 ; indirectly addressable internal ram data
                             45 ;--------------------------------------------------------
                             46 	.area ISEG    (DATA)
                             47 ;--------------------------------------------------------
                             48 ; absolute internal ram data
                             49 ;--------------------------------------------------------
                             50 	.area IABS    (ABS,DATA)
                             51 	.area IABS    (ABS,DATA)
                             52 ;--------------------------------------------------------
                             53 ; bit data
                             54 ;--------------------------------------------------------
                             55 	.area BSEG    (BIT)
                             56 ;--------------------------------------------------------
                             57 ; paged external ram data
                             58 ;--------------------------------------------------------
                             59 	.area PSEG    (PAG,XDATA)
   0000                      60 __ultoa_PARM_2:
   0000                      61 	.ds 3
   0003                      62 __ultoa_PARM_3:
   0003                      63 	.ds 1
   0004                      64 __ultoa_value_1_1:
   0004                      65 	.ds 4
   0008                      66 __ultoa_buffer_1_1:
   0008                      67 	.ds 32
   0028                      68 __ltoa_PARM_2:
   0028                      69 	.ds 3
   002B                      70 __ltoa_PARM_3:
   002B                      71 	.ds 1
   002C                      72 __ltoa_value_1_1:
   002C                      73 	.ds 4
                             74 ;--------------------------------------------------------
                             75 ; external ram data
                             76 ;--------------------------------------------------------
                             77 	.area XSEG    (XDATA)
                             78 ;--------------------------------------------------------
                             79 ; absolute external ram data
                             80 ;--------------------------------------------------------
                             81 	.area XABS    (ABS,XDATA)
                             82 ;--------------------------------------------------------
                             83 ; external initialized ram data
                             84 ;--------------------------------------------------------
                             85 	.area XISEG   (XDATA)
                             86 	.area HOME    (CODE)
                             87 	.area GSINIT0 (CODE)
                             88 	.area GSINIT1 (CODE)
                             89 	.area GSINIT2 (CODE)
                             90 	.area GSINIT3 (CODE)
                             91 	.area GSINIT4 (CODE)
                             92 	.area GSINIT5 (CODE)
                             93 	.area GSINIT  (CODE)
                             94 	.area GSFINAL (CODE)
                             95 	.area CSEG    (CODE)
                             96 ;--------------------------------------------------------
                             97 ; global & static initialisations
                             98 ;--------------------------------------------------------
                             99 	.area HOME    (CODE)
                            100 	.area GSINIT  (CODE)
                            101 	.area GSFINAL (CODE)
                            102 	.area GSINIT  (CODE)
                            103 ;--------------------------------------------------------
                            104 ; Home
                            105 ;--------------------------------------------------------
                            106 	.area HOME    (CODE)
                            107 	.area HOME    (CODE)
                            108 ;--------------------------------------------------------
                            109 ; code
                            110 ;--------------------------------------------------------
                            111 	.area CSEG    (CODE)
                            112 ;------------------------------------------------------------
                            113 ;Allocation info for local variables in function '_ultoa'
                            114 ;------------------------------------------------------------
                            115 ;sloc0                     Allocated with name '__ultoa_sloc0_1_0'
                            116 ;------------------------------------------------------------
                            117 ;	_ltoa.c:32: void _ultoa(unsigned long value, char* string, unsigned char radix)
                            118 ;	-----------------------------------------
                            119 ;	 function _ultoa
                            120 ;	-----------------------------------------
   0000                     121 __ultoa:
                    0002    122 	ar2 = 0x02
                    0003    123 	ar3 = 0x03
                    0004    124 	ar4 = 0x04
                    0005    125 	ar5 = 0x05
                    0006    126 	ar6 = 0x06
                    0007    127 	ar7 = 0x07
                    0000    128 	ar0 = 0x00
                    0001    129 	ar1 = 0x01
   0000 AA 82               130 	mov	r2,dpl
   0002 AB 83               131 	mov	r3,dph
   0004 AC F0               132 	mov	r4,b
   0006 FD                  133 	mov	r5,a
   0007 78r04               134 	mov	r0,#__ultoa_value_1_1
   0009 EA                  135 	mov	a,r2
   000A F2                  136 	movx	@r0,a
   000B 08                  137 	inc	r0
   000C EB                  138 	mov	a,r3
   000D F2                  139 	movx	@r0,a
   000E 08                  140 	inc	r0
   000F EC                  141 	mov	a,r4
   0010 F2                  142 	movx	@r0,a
   0011 08                  143 	inc	r0
   0012 ED                  144 	mov	a,r5
   0013 F2                  145 	movx	@r0,a
                            146 ;	_ltoa.c:37: do {
   0014 7E 20               147 	mov	r6,#0x20
   0016                     148 00103$:
                            149 ;	_ltoa.c:38: unsigned char c = '0' + (value % radix);
   0016 78r03               150 	mov	r0,#__ultoa_PARM_3
   0018 E2                  151 	movx	a,@r0
   0019 F5*00               152 	mov	__ultoa_sloc0_1_0,a
   001B 75*01 00            153 	mov	(__ultoa_sloc0_1_0 + 1),#0x00
   001E 75*02 00            154 	mov	(__ultoa_sloc0_1_0 + 2),#0x00
   0021 75*03 00            155 	mov	(__ultoa_sloc0_1_0 + 3),#0x00
   0024 78r00               156 	mov	r0,#__modulong_PARM_2
   0026 E5*00               157 	mov	a,__ultoa_sloc0_1_0
   0028 F2                  158 	movx	@r0,a
   0029 08                  159 	inc	r0
   002A E5*01               160 	mov	a,(__ultoa_sloc0_1_0 + 1)
   002C F2                  161 	movx	@r0,a
   002D 08                  162 	inc	r0
   002E E5*02               163 	mov	a,(__ultoa_sloc0_1_0 + 2)
   0030 F2                  164 	movx	@r0,a
   0031 08                  165 	inc	r0
   0032 E5*03               166 	mov	a,(__ultoa_sloc0_1_0 + 3)
   0034 F2                  167 	movx	@r0,a
   0035 78r04               168 	mov	r0,#__ultoa_value_1_1
   0037 E2                  169 	movx	a,@r0
   0038 F5 82               170 	mov	dpl,a
   003A 08                  171 	inc	r0
   003B E2                  172 	movx	a,@r0
   003C F5 83               173 	mov	dph,a
   003E 08                  174 	inc	r0
   003F E2                  175 	movx	a,@r0
   0040 F5 F0               176 	mov	b,a
   0042 08                  177 	inc	r0
   0043 E2                  178 	movx	a,@r0
   0044 C0 06               179 	push	ar6
   0046 12s00r00            180 	lcall	__modulong
   0049 AC 82               181 	mov	r4,dpl
   004B AD 83               182 	mov	r5,dph
   004D AA F0               183 	mov	r2,b
   004F FB                  184 	mov	r3,a
   0050 D0 06               185 	pop	ar6
   0052 74 30               186 	mov	a,#0x30
   0054 2C                  187 	add	a,r4
                            188 ;	_ltoa.c:39: if (c > (unsigned char)'9')
   0055 FA                  189 	mov  r2,a
   0056 24 C6               190 	add	a,#0xff - 0x39
   0058 50 04               191 	jnc	00102$
                            192 ;	_ltoa.c:40: c += 'A' - '9' - 1;
   005A 74 07               193 	mov	a,#0x07
   005C 2A                  194 	add	a,r2
   005D FA                  195 	mov	r2,a
   005E                     196 00102$:
                            197 ;	_ltoa.c:41: buffer[--index] = c;
   005E 1E                  198 	dec	r6
   005F EE                  199 	mov	a,r6
   0060 24r08               200 	add	a,#__ultoa_buffer_1_1
   0062 F8                  201 	mov	r0,a
   0063 EA                  202 	mov	a,r2
   0064 F2                  203 	movx	@r0,a
                            204 ;	_ltoa.c:42: value /= radix;
   0065 78r00               205 	mov	r0,#__divulong_PARM_2
   0067 E5*00               206 	mov	a,__ultoa_sloc0_1_0
   0069 F2                  207 	movx	@r0,a
   006A 08                  208 	inc	r0
   006B E5*01               209 	mov	a,(__ultoa_sloc0_1_0 + 1)
   006D F2                  210 	movx	@r0,a
   006E 08                  211 	inc	r0
   006F E5*02               212 	mov	a,(__ultoa_sloc0_1_0 + 2)
   0071 F2                  213 	movx	@r0,a
   0072 08                  214 	inc	r0
   0073 E5*03               215 	mov	a,(__ultoa_sloc0_1_0 + 3)
   0075 F2                  216 	movx	@r0,a
   0076 78r04               217 	mov	r0,#__ultoa_value_1_1
   0078 E2                  218 	movx	a,@r0
   0079 F5 82               219 	mov	dpl,a
   007B 08                  220 	inc	r0
   007C E2                  221 	movx	a,@r0
   007D F5 83               222 	mov	dph,a
   007F 08                  223 	inc	r0
   0080 E2                  224 	movx	a,@r0
   0081 F5 F0               225 	mov	b,a
   0083 08                  226 	inc	r0
   0084 E2                  227 	movx	a,@r0
   0085 C0 06               228 	push	ar6
   0087 12s00r00            229 	lcall	__divulong
   008A 78r04               230 	mov	r0,#__ultoa_value_1_1
   008C C0 E0               231 	push	acc
   008E E5 82               232 	mov	a,dpl
   0090 F2                  233 	movx	@r0,a
   0091 08                  234 	inc	r0
   0092 E5 83               235 	mov	a,dph
   0094 F2                  236 	movx	@r0,a
   0095 08                  237 	inc	r0
   0096 E5 F0               238 	mov	a,b
   0098 F2                  239 	movx	@r0,a
   0099 D0 E0               240 	pop	acc
   009B 08                  241 	inc	r0
   009C F2                  242 	movx	@r0,a
   009D D0 06               243 	pop	ar6
                            244 ;	_ltoa.c:43: } while (value);
   009F 78r04               245 	mov	r0,#__ultoa_value_1_1
   00A1 E2                  246 	movx	a,@r0
   00A2 F5 F0               247 	mov	b,a
   00A4 08                  248 	inc	r0
   00A5 E2                  249 	movx	a,@r0
   00A6 42 F0               250 	orl	b,a
   00A8 08                  251 	inc	r0
   00A9 E2                  252 	movx	a,@r0
   00AA 42 F0               253 	orl	b,a
   00AC 08                  254 	inc	r0
   00AD E2                  255 	movx	a,@r0
   00AE 45 F0               256 	orl	a,b
   00B0 60 03               257 	jz	00118$
   00B2 02s00r16            258 	ljmp	00103$
   00B5                     259 00118$:
                            260 ;	_ltoa.c:45: do {
   00B5 78r00               261 	mov	r0,#__ultoa_PARM_2
   00B7 E2                  262 	movx	a,@r0
   00B8 FA                  263 	mov	r2,a
   00B9 08                  264 	inc	r0
   00BA E2                  265 	movx	a,@r0
   00BB FB                  266 	mov	r3,a
   00BC 08                  267 	inc	r0
   00BD E2                  268 	movx	a,@r0
   00BE FC                  269 	mov	r4,a
   00BF 8E 05               270 	mov	ar5,r6
   00C1                     271 00106$:
                            272 ;	_ltoa.c:46: *string++ = buffer[index];
   00C1 ED                  273 	mov	a,r5
   00C2 24r08               274 	add	a,#__ultoa_buffer_1_1
   00C4 F8                  275 	mov	r0,a
   00C5 E2                  276 	movx	a,@r0
   00C6 FE                  277 	mov	r6,a
   00C7 8A 82               278 	mov	dpl,r2
   00C9 8B 83               279 	mov	dph,r3
   00CB 8C F0               280 	mov	b,r4
   00CD 12s00r00            281 	lcall	__gptrput
   00D0 A3                  282 	inc	dptr
   00D1 AA 82               283 	mov	r2,dpl
   00D3 AB 83               284 	mov	r3,dph
                            285 ;	_ltoa.c:47: } while ( ++index != NUMBER_OF_DIGITS );
   00D5 0D                  286 	inc	r5
   00D6 BD 20 E8            287 	cjne	r5,#0x20,00106$
                            288 ;	_ltoa.c:49: *string = 0;  /* string terminator */
   00D9 8A 82               289 	mov	dpl,r2
   00DB 8B 83               290 	mov	dph,r3
   00DD 8C F0               291 	mov	b,r4
   00DF E4                  292 	clr	a
   00E0 02s00r00            293 	ljmp	__gptrput
                            294 ;------------------------------------------------------------
                            295 ;Allocation info for local variables in function '_ltoa'
                            296 ;------------------------------------------------------------
                            297 ;------------------------------------------------------------
                            298 ;	_ltoa.c:52: void _ltoa(long value, char* string, unsigned char radix)
                            299 ;	-----------------------------------------
                            300 ;	 function _ltoa
                            301 ;	-----------------------------------------
   00E3                     302 __ltoa:
   00E3 AA 82               303 	mov	r2,dpl
   00E5 AB 83               304 	mov	r3,dph
   00E7 AC F0               305 	mov	r4,b
   00E9 FD                  306 	mov	r5,a
   00EA 78r2C               307 	mov	r0,#__ltoa_value_1_1
   00EC EA                  308 	mov	a,r2
   00ED F2                  309 	movx	@r0,a
   00EE 08                  310 	inc	r0
   00EF EB                  311 	mov	a,r3
   00F0 F2                  312 	movx	@r0,a
   00F1 08                  313 	inc	r0
   00F2 EC                  314 	mov	a,r4
   00F3 F2                  315 	movx	@r0,a
   00F4 08                  316 	inc	r0
   00F5 ED                  317 	mov	a,r5
   00F6 F2                  318 	movx	@r0,a
                            319 ;	_ltoa.c:54: if (value < 0 && radix == 10) {
   00F7 78r2F               320 	mov	r0,#(__ltoa_value_1_1 + 3)
   00F9 E2                  321 	movx	a,@r0
   00FA 30 E7 42            322 	jnb	acc.7,00102$
   00FD 78r2B               323 	mov	r0,#__ltoa_PARM_3
   00FF E2                  324 	movx	a,@r0
   0100 B4 0A 3C            325 	cjne	a,#0x0A,00102$
                            326 ;	_ltoa.c:55: *string++ = '-';
   0103 78r28               327 	mov	r0,#__ltoa_PARM_2
   0105 E2                  328 	movx	a,@r0
   0106 FE                  329 	mov	r6,a
   0107 08                  330 	inc	r0
   0108 E2                  331 	movx	a,@r0
   0109 FF                  332 	mov	r7,a
   010A 08                  333 	inc	r0
   010B E2                  334 	movx	a,@r0
   010C FA                  335 	mov	r2,a
   010D 8E 82               336 	mov	dpl,r6
   010F 8F 83               337 	mov	dph,r7
   0111 8A F0               338 	mov	b,r2
   0113 74 2D               339 	mov	a,#0x2D
   0115 12s00r00            340 	lcall	__gptrput
   0118 78r28               341 	mov	r0,#__ltoa_PARM_2
   011A 74 01               342 	mov	a,#0x01
   011C 2E                  343 	add	a,r6
   011D F2                  344 	movx	@r0,a
   011E E4                  345 	clr	a
   011F 3F                  346 	addc	a,r7
   0120 08                  347 	inc	r0
   0121 F2                  348 	movx	@r0,a
   0122 08                  349 	inc	r0
   0123 EA                  350 	mov	a,r2
   0124 F2                  351 	movx	@r0,a
                            352 ;	_ltoa.c:56: value = -value;
   0125 78r2C               353 	mov	r0,#__ltoa_value_1_1
   0127 E2                  354 	movx	a,@r0
   0128 D3                  355 	setb	c
   0129 F4                  356 	cpl	a
   012A 34 00               357 	addc	a,#0x00
   012C F2                  358 	movx	@r0,a
   012D 08                  359 	inc	r0
   012E E2                  360 	movx	a,@r0
   012F F4                  361 	cpl	a
   0130 34 00               362 	addc	a,#0x00
   0132 F2                  363 	movx	@r0,a
   0133 08                  364 	inc	r0
   0134 E2                  365 	movx	a,@r0
   0135 F4                  366 	cpl	a
   0136 34 00               367 	addc	a,#0x00
   0138 F2                  368 	movx	@r0,a
   0139 08                  369 	inc	r0
   013A E2                  370 	movx	a,@r0
   013B F4                  371 	cpl	a
   013C 34 00               372 	addc	a,#0x00
   013E F2                  373 	movx	@r0,a
   013F                     374 00102$:
                            375 ;	_ltoa.c:58: _ultoa(value, string, radix);
   013F 78r28               376 	mov	r0,#__ltoa_PARM_2
   0141 79r00               377 	mov	r1,#__ultoa_PARM_2
   0143 E2                  378 	movx	a,@r0
   0144 F3                  379 	movx	@r1,a
   0145 08                  380 	inc	r0
   0146 E2                  381 	movx	a,@r0
   0147 09                  382 	inc	r1
   0148 F3                  383 	movx	@r1,a
   0149 08                  384 	inc	r0
   014A E2                  385 	movx	a,@r0
   014B 09                  386 	inc	r1
   014C F3                  387 	movx	@r1,a
   014D 78r2B               388 	mov	r0,#__ltoa_PARM_3
   014F 79r03               389 	mov	r1,#__ultoa_PARM_3
   0151 E2                  390 	movx	a,@r0
   0152 F3                  391 	movx	@r1,a
   0153 78r2C               392 	mov	r0,#__ltoa_value_1_1
   0155 E2                  393 	movx	a,@r0
   0156 F5 82               394 	mov	dpl,a
   0158 08                  395 	inc	r0
   0159 E2                  396 	movx	a,@r0
   015A F5 83               397 	mov	dph,a
   015C 08                  398 	inc	r0
   015D E2                  399 	movx	a,@r0
   015E F5 F0               400 	mov	b,a
   0160 08                  401 	inc	r0
   0161 E2                  402 	movx	a,@r0
   0162 02s00r00            403 	ljmp	__ultoa
                            404 	.area CSEG    (CODE)
                            405 	.area CONST   (CODE)
                            406 	.area XINIT   (CODE)
                            407 	.area CABS    (ABS,CODE)

                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:25:33 2013
                              5 ;--------------------------------------------------------
                              6 	.module logf
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _logf
                             31 ;--------------------------------------------------------
                             32 ; special function registers
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; special function bits
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; overlayable register banks
                             39 ;--------------------------------------------------------
                             40 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      41 	.ds 8
                             42 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                      43 	.ds 8
                             44 ;--------------------------------------------------------
                             45 ; internal ram data
                             46 ;--------------------------------------------------------
                             47 	.area DSEG    (DATA)
                             48 ;--------------------------------------------------------
                             49 ; overlayable items in internal ram 
                             50 ;--------------------------------------------------------
                             51 	.area OSEG    (OVR,DATA)
                             52 ;--------------------------------------------------------
                             53 ; indirectly addressable internal ram data
                             54 ;--------------------------------------------------------
                             55 	.area ISEG    (DATA)
                             56 ;--------------------------------------------------------
                             57 ; absolute internal ram data
                             58 ;--------------------------------------------------------
                             59 	.area IABS    (ABS,DATA)
                             60 	.area IABS    (ABS,DATA)
                             61 ;--------------------------------------------------------
                             62 ; bit data
                             63 ;--------------------------------------------------------
                             64 	.area BSEG    (BIT)
                             65 ;--------------------------------------------------------
                             66 ; paged external ram data
                             67 ;--------------------------------------------------------
                             68 	.area PSEG    (PAG,XDATA)
                             69 ;--------------------------------------------------------
                             70 ; external ram data
                             71 ;--------------------------------------------------------
                             72 	.area XSEG    (XDATA)
                             73 ;--------------------------------------------------------
                             74 ; absolute external ram data
                             75 ;--------------------------------------------------------
                             76 	.area XABS    (ABS,XDATA)
                             77 ;--------------------------------------------------------
                             78 ; external initialized ram data
                             79 ;--------------------------------------------------------
                             80 	.area XISEG   (XDATA)
                             81 ;--------------------------------------------------------
                             82 ; global & static initialisations
                             83 ;--------------------------------------------------------
                             84 	.area HOME    (CODE)
                             85 	.area GSINIT  (CODE)
                             86 	.area GSFINAL (CODE)
                             87 	.area GSINIT  (CODE)
                             88 ;--------------------------------------------------------
                             89 ; Home
                             90 ;--------------------------------------------------------
                             91 	.area HOME    (CODE)
                             92 	.area HOME    (CODE)
                             93 ;--------------------------------------------------------
                             94 ; code
                             95 ;--------------------------------------------------------
                             96 	.area CSEG    (CODE)
                             97 ;------------------------------------------------------------
                             98 ;Allocation info for local variables in function 'logf'
                             99 ;------------------------------------------------------------
                            100 ;x                         Allocated to registers r2 r3 r4 r5 
                            101 ;Rz                        Allocated to stack - offset 1
                            102 ;f                         Allocated to stack - offset 5
                            103 ;z                         Allocated to stack - offset 9
                            104 ;w                         Allocated to registers r2 r3 r4 r5 
                            105 ;znum                      Allocated to stack - offset 13
                            106 ;zden                      Allocated to registers r2 r3 r4 r5 
                            107 ;xn                        Allocated to registers r6 r7 r0 r1 
                            108 ;n                         Allocated to stack - offset 17
                            109 ;------------------------------------------------------------
                            110 ;	logf.c:202: float logf(const float x) _FLOAT_FUNC_REENTRANT
                            111 ;	-----------------------------------------
                            112 ;	 function logf
                            113 ;	-----------------------------------------
   0000                     114 _logf:
                    0002    115 	ar2 = 0x02
                    0003    116 	ar3 = 0x03
                    0004    117 	ar4 = 0x04
                    0005    118 	ar5 = 0x05
                    0006    119 	ar6 = 0x06
                    0007    120 	ar7 = 0x07
                    0000    121 	ar0 = 0x00
                    0001    122 	ar1 = 0x01
   0000 C0*00               123 	push	_bpx
   0002 C0*01               124 	push	_bpx+1
   0004 85 81*00            125 	mov	_bpx,sp
   0007 85 9B*01            126 	mov	_bpx+1,esp
   000A 53*01 03            127 	anl	_bpx+1,#3
   000D 43*01 DC            128 	orl	_bpx+1,#0xDC
   0010 E5 81               129 	mov	a,sp
   0012 24 12               130 	add	a,#0x12
   0014 F5 81               131 	mov	sp,a
   0016 E5 9B               132 	mov	a,esp
   0018 54 03               133 	anl	a,#3
   001A 44 DC               134 	orl	a,#0xDC
   001C 34 00               135 	addc	a,#0x00
   001E F5 9B               136 	mov	esp,a
   0020 AA 82               137 	mov	r2,dpl
   0022 AB 83               138 	mov	r3,dph
   0024 AC 93               139 	mov	r4,dpx
   0026 AD F0               140 	mov	r5,b
                            141 ;	logf.c:212: if (x<=0.0)
                            142 ;	genAssign: resultIsFar = TRUE
   0028 90s00r00r00         143 	mov	dptr,#___fsgt_PARM_2
   002C E4                  144 	clr  a
   002D F0                  145 	movx @dptr,a
   002E A3                  146 	inc  dptr
   002F F0                  147 	movx @dptr,a
   0030 A3                  148 	inc	dptr
   0031 E4                  149 	clr  a
   0032 F0                  150 	movx @dptr,a
   0033 A3                  151 	inc  dptr
   0034 F0                  152 	movx @dptr,a
   0035 C0 02               153 	push	ar2
   0037 C0 03               154 	push	ar3
   0039 C0 04               155 	push	ar4
   003B C0 05               156 	push	ar5
   003D 8A 82               157 	mov	dpl,r2
   003F 8B 83               158 	mov	dph,r3
   0041 8C 93               159 	mov	dpx,r4
   0043 8D F0               160 	mov	b,r5
   0045 12s00r00r00         161 	lcall	___fsgt
   0049 D0 05               162 	pop	ar5
   004B D0 04               163 	pop	ar4
   004D D0 03               164 	pop	ar3
   004F D0 02               165 	pop	ar2
   0051 E5 82               166 	mov	a,dpl
   0053 70 15               167 	jnz  00102$
   0055                     168 00110$:
                            169 ;	logf.c:214: errno=EDOM;
                            170 ;	genAssign: resultIsFar = TRUE
   0055 90s00r00r00         171 	mov	dptr,#_errno
   0059 74 21               172 	mov	a,#0x21
   005B F0                  173 	movx	@dptr,a
   005C E4                  174 	clr	a
   005D A3                  175 	inc	dptr
   005E F0                  176 	movx	@dptr,a
                            177 ;	logf.c:215: return 0.0;
   005F 90 00 00 00         178 	mov  dptr,#0x0000
   0063 75 F0 00            179 	mov	b,#0x00
   0066 02s00r05r6A         180 	ljmp	00106$
   006A                     181 00102$:
                            182 ;	logf.c:217: f=frexpf(x, &n);
   006A E5*00               183 	mov	a,_bpx
   006C 24 11               184 	add	a,#0x11
   006E F5 F0               185 	mov	b,a
   0070 E4                  186 	clr	a
   0071 35*01               187 	addc	a,_bpx+1
   0073 AE F0               188 	mov	r6,b
   0075 FF                  189 	mov	r7,a
   0076 78 FF               190 	mov	r0,#0xFF
   0078 90s00r00r00         191 	mov	dptr,#_frexpf_PARM_2
   007C EE                  192 	mov	a,r6
   007D F0                  193 	movx	@dptr,a
   007E A3                  194 	inc	dptr
   007F EF                  195 	mov	a,r7
   0080 F0                  196 	movx	@dptr,a
   0081 A3                  197 	inc	dptr
   0082 E8                  198 	mov	a,r0
   0083 F0                  199 	movx	@dptr,a
   0084 A3                  200 	inc	dptr
   0085 74 00               201 	mov	a,#0x0
   0087 F0                  202 	movx	@dptr,a
   0088 8A 82               203 	mov	dpl,r2
   008A 8B 83               204 	mov	dph,r3
   008C 8C 93               205 	mov	dpx,r4
   008E 8D F0               206 	mov	b,r5
   0090 12s00r00r00         207 	lcall	_frexpf
   0094 AA 82               208 	mov	r2,dpl
   0096 AB 83               209 	mov	r3,dph
   0098 AC 93               210 	mov	r4,dpx
   009A AD F0               211 	mov	r5,b
                            212 ;	genAssign: resultIsFar = TRUE
   009C E5*00               213 	mov	a,_bpx
   009E C3                  214 	clr	c
   009F 94 FB               215 	subb	a,#0xFB
   00A1 F5 82               216 	mov	dpl,a
   00A3 E5*01               217 	mov	a,_bpx+1
   00A5 94 FF               218 	subb	a,#0xFF
   00A7 F5 83               219 	mov	dph,a
   00A9 75 93 FF            220 	mov	dpx,#0xFF
   00AC EA                  221 	mov	a,r2
   00AD F0                  222 	movx	@dptr,a
   00AE A3                  223 	inc	dptr
   00AF EB                  224 	mov	a,r3
   00B0 F0                  225 	movx	@dptr,a
   00B1 A3                  226 	inc	dptr
   00B2 EC                  227 	mov	a,r4
   00B3 F0                  228 	movx	@dptr,a
   00B4 A3                  229 	inc	dptr
   00B5 ED                  230 	mov	a,r5
   00B6 F0                  231 	movx	@dptr,a
                            232 ;	logf.c:218: znum=f-0.5;
                            233 ;	genAssign: resultIsFar = TRUE
   00B7 90s00r00r00         234 	mov	dptr,#___fssub_PARM_2
   00BB E4                  235 	clr  a
   00BC F0                  236 	movx @dptr,a
   00BD A3                  237 	inc  dptr
   00BE F0                  238 	movx @dptr,a
   00BF A3                  239 	inc	dptr
   00C0 E4                  240 	clr  a
   00C1 F0                  241 	movx	@dptr,a
   00C2 A3                  242 	inc	dptr
   00C3 74 3F               243 	mov	a,#0x3F
   00C5 F0                  244 	movx	@dptr,a
   00C6 E5*00               245 	mov	a,_bpx
   00C8 C3                  246 	clr	c
   00C9 94 FB               247 	subb	a,#0xFB
   00CB F5 84               248 	mov	dpl1,a
   00CD E5*01               249 	mov	a,_bpx+1
   00CF 94 FF               250 	subb	a,#0xFF
   00D1 F5 85               251 	mov	dph1,a
   00D3 75 95 FF            252 	mov	dpx1,#0xFF
   00D6 05 86               253 	inc	dps
   00D8 E0                  254 	movx	a,@dptr
   00D9 F5 82               255 	mov	dpl,a
   00DB A3                  256 	inc	dptr
   00DC E0                  257 	movx	a,@dptr
   00DD F5 83               258 	mov	dph,a
   00DF A3                  259 	inc	dptr
   00E0 E0                  260 	movx	a,@dptr
   00E1 F5 93               261 	mov	dpx,a
   00E3 A3                  262 	inc	dptr
   00E4 E0                  263 	movx	a,@dptr
   00E5 F5 F0               264 	mov	b,a
   00E7 75 86 00            265 	mov	dps,#0
   00EA 12s00r00r00         266 	lcall	___fssub
   00EE AE 82               267 	mov	r6,dpl
   00F0 AF 83               268 	mov	r7,dph
   00F2 A8 93               269 	mov	r0,dpx
   00F4 A9 F0               270 	mov	r1,b
                            271 ;	genAssign: resultIsFar = TRUE
   00F6 E5*00               272 	mov	a,_bpx
   00F8 C3                  273 	clr	c
   00F9 94 F3               274 	subb	a,#0xF3
   00FB F5 82               275 	mov	dpl,a
   00FD E5*01               276 	mov	a,_bpx+1
   00FF 94 FF               277 	subb	a,#0xFF
   0101 F5 83               278 	mov	dph,a
   0103 75 93 FF            279 	mov	dpx,#0xFF
   0106 EE                  280 	mov	a,r6
   0107 F0                  281 	movx	@dptr,a
   0108 A3                  282 	inc	dptr
   0109 EF                  283 	mov	a,r7
   010A F0                  284 	movx	@dptr,a
   010B A3                  285 	inc	dptr
   010C E8                  286 	mov	a,r0
   010D F0                  287 	movx	@dptr,a
   010E A3                  288 	inc	dptr
   010F E9                  289 	mov	a,r1
   0110 F0                  290 	movx	@dptr,a
                            291 ;	logf.c:219: if (f>C0)
                            292 ;	genAssign: resultIsFar = TRUE
   0111 90s00r00r00         293 	mov	dptr,#___fsgt_PARM_2
   0115 74 F3               294 	mov	a,#0xF3
   0117 F0                  295 	movx	@dptr,a
   0118 A3                  296 	inc	dptr
   0119 74 04               297 	mov	a,#0x04
   011B F0                  298 	movx	@dptr,a
   011C A3                  299 	inc	dptr
   011D 74 35               300 	mov	a,#0x35
   011F F0                  301 	movx	@dptr,a
   0120 A3                  302 	inc	dptr
   0121 74 3F               303 	mov	a,#0x3F
   0123 F0                  304 	movx	@dptr,a
   0124 E5*00               305 	mov	a,_bpx
   0126 C3                  306 	clr	c
   0127 94 FB               307 	subb	a,#0xFB
   0129 F5 84               308 	mov	dpl1,a
   012B E5*01               309 	mov	a,_bpx+1
   012D 94 FF               310 	subb	a,#0xFF
   012F F5 85               311 	mov	dph1,a
   0131 75 95 FF            312 	mov	dpx1,#0xFF
   0134 05 86               313 	inc	dps
   0136 E0                  314 	movx	a,@dptr
   0137 F5 82               315 	mov	dpl,a
   0139 A3                  316 	inc	dptr
   013A E0                  317 	movx	a,@dptr
   013B F5 83               318 	mov	dph,a
   013D A3                  319 	inc	dptr
   013E E0                  320 	movx	a,@dptr
   013F F5 93               321 	mov	dpx,a
   0141 A3                  322 	inc	dptr
   0142 E0                  323 	movx	a,@dptr
   0143 F5 F0               324 	mov	b,a
   0145 75 86 00            325 	mov	dps,#0
   0148 12s00r00r00         326 	lcall	___fsgt
   014C E5 82               327 	mov	a,dpl
   014E 70 04               328 	jnz	00111$
   0150 02s00r02r10         329 	ljmp	00104$
   0154                     330 00111$:
                            331 ;	logf.c:221: znum-=0.5;
                            332 ;	genAssign: resultIsFar = TRUE
   0154 90s00r00r00         333 	mov	dptr,#___fssub_PARM_2
   0158 E4                  334 	clr  a
   0159 F0                  335 	movx @dptr,a
   015A A3                  336 	inc  dptr
   015B F0                  337 	movx @dptr,a
   015C A3                  338 	inc	dptr
   015D E4                  339 	clr  a
   015E F0                  340 	movx	@dptr,a
   015F A3                  341 	inc	dptr
   0160 74 3F               342 	mov	a,#0x3F
   0162 F0                  343 	movx	@dptr,a
   0163 E5*00               344 	mov	a,_bpx
   0165 C3                  345 	clr	c
   0166 94 F3               346 	subb	a,#0xF3
   0168 F5 84               347 	mov	dpl1,a
   016A E5*01               348 	mov	a,_bpx+1
   016C 94 FF               349 	subb	a,#0xFF
   016E F5 85               350 	mov	dph1,a
   0170 75 95 FF            351 	mov	dpx1,#0xFF
   0173 05 86               352 	inc	dps
   0175 E0                  353 	movx	a,@dptr
   0176 F5 82               354 	mov	dpl,a
   0178 A3                  355 	inc	dptr
   0179 E0                  356 	movx	a,@dptr
   017A F5 83               357 	mov	dph,a
   017C A3                  358 	inc	dptr
   017D E0                  359 	movx	a,@dptr
   017E F5 93               360 	mov	dpx,a
   0180 A3                  361 	inc	dptr
   0181 E0                  362 	movx	a,@dptr
   0182 F5 F0               363 	mov	b,a
   0184 75 86 00            364 	mov	dps,#0
   0187 12s00r00r00         365 	lcall	___fssub
   018B AA 82               366 	mov	r2,dpl
   018D AB 83               367 	mov	r3,dph
   018F AC 93               368 	mov	r4,dpx
   0191 AD F0               369 	mov	r5,b
                            370 ;	genAssign: resultIsFar = TRUE
   0193 E5*00               371 	mov	a,_bpx
   0195 C3                  372 	clr	c
   0196 94 F3               373 	subb	a,#0xF3
   0198 F5 82               374 	mov	dpl,a
   019A E5*01               375 	mov	a,_bpx+1
   019C 94 FF               376 	subb	a,#0xFF
   019E F5 83               377 	mov	dph,a
   01A0 75 93 FF            378 	mov	dpx,#0xFF
   01A3 EA                  379 	mov	a,r2
   01A4 F0                  380 	movx	@dptr,a
   01A5 A3                  381 	inc	dptr
   01A6 EB                  382 	mov	a,r3
   01A7 F0                  383 	movx	@dptr,a
   01A8 A3                  384 	inc	dptr
   01A9 EC                  385 	mov	a,r4
   01AA F0                  386 	movx	@dptr,a
   01AB A3                  387 	inc	dptr
   01AC ED                  388 	mov	a,r5
   01AD F0                  389 	movx	@dptr,a
                            390 ;	logf.c:222: zden=(f*0.5)+0.5;
   01AE E5*00               391 	mov	a,_bpx
   01B0 C3                  392 	clr	c
   01B1 94 FB               393 	subb	a,#0xFB
   01B3 F5 82               394 	mov	dpl,a
   01B5 E5*01               395 	mov	a,_bpx+1
   01B7 94 FF               396 	subb	a,#0xFF
   01B9 F5 83               397 	mov	dph,a
   01BB 75 93 FF            398 	mov	dpx,#0xFF
                            399 ;	genAssign: resultIsFar = TRUE
   01BE 75 86 21            400 	mov	dps,#0x21
   01C1 90s00r00r00         401 	mov	dptr,#___fsmul_PARM_2
   01C5 E0                  402 	movx	a,@dptr
   01C6 F0                  403 	movx	@dptr,a
   01C7 A3                  404 	inc	dptr
   01C8 A3                  405 	inc	dptr
   01C9 E0                  406 	movx	a,@dptr
   01CA F0                  407 	movx	@dptr,a
   01CB A3                  408 	inc	dptr
   01CC A3                  409 	inc	dptr
   01CD E0                  410 	movx	a,@dptr
   01CE F0                  411 	movx	@dptr,a
   01CF A3                  412 	inc	dptr
   01D0 A3                  413 	inc	dptr
   01D1 E0                  414 	movx	a,@dptr
   01D2 F0                  415 	movx	@dptr,a
   01D3 75 86 00            416 	mov	dps,#0
   01D6 90 00 00 00         417 	mov  dptr,#0x0000
   01DA 75 F0 3F            418 	mov	b,#0x3F
   01DD 12s00r00r00         419 	lcall	___fsmul
   01E1 AA 82               420 	mov	r2,dpl
   01E3 AB 83               421 	mov	r3,dph
   01E5 AC 93               422 	mov	r4,dpx
   01E7 AD F0               423 	mov	r5,b
                            424 ;	genAssign: resultIsFar = TRUE
   01E9 90s00r00r00         425 	mov	dptr,#___fsadd_PARM_2
   01ED E4                  426 	clr  a
   01EE F0                  427 	movx @dptr,a
   01EF A3                  428 	inc  dptr
   01F0 F0                  429 	movx @dptr,a
   01F1 A3                  430 	inc	dptr
   01F2 E4                  431 	clr  a
   01F3 F0                  432 	movx	@dptr,a
   01F4 A3                  433 	inc	dptr
   01F5 74 3F               434 	mov	a,#0x3F
   01F7 F0                  435 	movx	@dptr,a
   01F8 8A 82               436 	mov	dpl,r2
   01FA 8B 83               437 	mov	dph,r3
   01FC 8C 93               438 	mov	dpx,r4
   01FE 8D F0               439 	mov	b,r5
   0200 12s00r00r00         440 	lcall	___fsadd
   0204 AA 82               441 	mov	r2,dpl
   0206 AB 83               442 	mov	r3,dph
   0208 AC 93               443 	mov	r4,dpx
   020A AD F0               444 	mov	r5,b
                            445 ;	genAssign: resultIsFar = TRUE
   020C 02s00r02rA4         446 	ljmp	00105$
   0210                     447 00104$:
                            448 ;	logf.c:226: n--;
   0210 E5*00               449 	mov	a,_bpx
   0212 C3                  450 	clr	c
   0213 94 EF               451 	subb	a,#0xEF
   0215 F5 82               452 	mov	dpl,a
   0217 E5*01               453 	mov	a,_bpx+1
   0219 94 FF               454 	subb	a,#0xFF
   021B F5 83               455 	mov	dph,a
   021D 75 93 FF            456 	mov	dpx,#0xFF
   0220 E0                  457 	movx	a,@dptr
   0221 24 FF               458 	add	a,#0xFF
   0223 FE                  459 	mov	r6,a
   0224 A3                  460 	inc	dptr
   0225 E0                  461 	movx	a,@dptr
   0226 34 FF               462 	addc	a,#0xFF
   0228 FF                  463 	mov	r7,a
                            464 ;	genAssign: resultIsFar = TRUE
   0229 E5*00               465 	mov	a,_bpx
   022B C3                  466 	clr	c
   022C 94 EF               467 	subb	a,#0xEF
   022E F5 82               468 	mov	dpl,a
   0230 E5*01               469 	mov	a,_bpx+1
   0232 94 FF               470 	subb	a,#0xFF
   0234 F5 83               471 	mov	dph,a
   0236 75 93 FF            472 	mov	dpx,#0xFF
   0239 EE                  473 	mov	a,r6
   023A F0                  474 	movx	@dptr,a
   023B A3                  475 	inc	dptr
   023C EF                  476 	mov	a,r7
   023D F0                  477 	movx	@dptr,a
                            478 ;	logf.c:227: zden=znum*0.5+0.5;
   023E E5*00               479 	mov	a,_bpx
   0240 C3                  480 	clr	c
   0241 94 F3               481 	subb	a,#0xF3
   0243 F5 82               482 	mov	dpl,a
   0245 E5*01               483 	mov	a,_bpx+1
   0247 94 FF               484 	subb	a,#0xFF
   0249 F5 83               485 	mov	dph,a
   024B 75 93 FF            486 	mov	dpx,#0xFF
                            487 ;	genAssign: resultIsFar = TRUE
   024E 75 86 21            488 	mov	dps,#0x21
   0251 90s00r00r00         489 	mov	dptr,#___fsmul_PARM_2
   0255 E0                  490 	movx	a,@dptr
   0256 F0                  491 	movx	@dptr,a
   0257 A3                  492 	inc	dptr
   0258 A3                  493 	inc	dptr
   0259 E0                  494 	movx	a,@dptr
   025A F0                  495 	movx	@dptr,a
   025B A3                  496 	inc	dptr
   025C A3                  497 	inc	dptr
   025D E0                  498 	movx	a,@dptr
   025E F0                  499 	movx	@dptr,a
   025F A3                  500 	inc	dptr
   0260 A3                  501 	inc	dptr
   0261 E0                  502 	movx	a,@dptr
   0262 F0                  503 	movx	@dptr,a
   0263 75 86 00            504 	mov	dps,#0
   0266 90 00 00 00         505 	mov  dptr,#0x0000
   026A 75 F0 3F            506 	mov	b,#0x3F
   026D 12s00r00r00         507 	lcall	___fsmul
   0271 AE 82               508 	mov	r6,dpl
   0273 AF 83               509 	mov	r7,dph
   0275 A8 93               510 	mov	r0,dpx
   0277 A9 F0               511 	mov	r1,b
                            512 ;	genAssign: resultIsFar = TRUE
   0279 90s00r00r00         513 	mov	dptr,#___fsadd_PARM_2
   027D E4                  514 	clr  a
   027E F0                  515 	movx @dptr,a
   027F A3                  516 	inc  dptr
   0280 F0                  517 	movx @dptr,a
   0281 A3                  518 	inc	dptr
   0282 E4                  519 	clr  a
   0283 F0                  520 	movx	@dptr,a
   0284 A3                  521 	inc	dptr
   0285 74 3F               522 	mov	a,#0x3F
   0287 F0                  523 	movx	@dptr,a
   0288 8E 82               524 	mov	dpl,r6
   028A 8F 83               525 	mov	dph,r7
   028C 88 93               526 	mov	dpx,r0
   028E 89 F0               527 	mov	b,r1
   0290 12s00r00r00         528 	lcall	___fsadd
   0294 AE 82               529 	mov	r6,dpl
   0296 AF 83               530 	mov	r7,dph
   0298 A8 93               531 	mov	r0,dpx
   029A A9 F0               532 	mov	r1,b
                            533 ;	genAssign: resultIsFar = TRUE
   029C 8E 02               534 	mov	ar2,r6
   029E 8F 03               535 	mov	ar3,r7
   02A0 88 04               536 	mov	ar4,r0
   02A2 89 05               537 	mov	ar5,r1
   02A4                     538 00105$:
                            539 ;	logf.c:229: z=znum/zden;
                            540 ;	genAssign: resultIsFar = TRUE
   02A4 90s00r00r00         541 	mov	dptr,#___fsdiv_PARM_2
   02A8 EA                  542 	mov	a,r2
   02A9 F0                  543 	movx	@dptr,a
   02AA A3                  544 	inc	dptr
   02AB EB                  545 	mov	a,r3
   02AC F0                  546 	movx	@dptr,a
   02AD A3                  547 	inc	dptr
   02AE EC                  548 	mov	a,r4
   02AF F0                  549 	movx	@dptr,a
   02B0 A3                  550 	inc	dptr
   02B1 ED                  551 	mov	a,r5
   02B2 F0                  552 	movx	@dptr,a
   02B3 E5*00               553 	mov	a,_bpx
   02B5 C3                  554 	clr	c
   02B6 94 F3               555 	subb	a,#0xF3
   02B8 F5 84               556 	mov	dpl1,a
   02BA E5*01               557 	mov	a,_bpx+1
   02BC 94 FF               558 	subb	a,#0xFF
   02BE F5 85               559 	mov	dph1,a
   02C0 75 95 FF            560 	mov	dpx1,#0xFF
   02C3 05 86               561 	inc	dps
   02C5 E0                  562 	movx	a,@dptr
   02C6 F5 82               563 	mov	dpl,a
   02C8 A3                  564 	inc	dptr
   02C9 E0                  565 	movx	a,@dptr
   02CA F5 83               566 	mov	dph,a
   02CC A3                  567 	inc	dptr
   02CD E0                  568 	movx	a,@dptr
   02CE F5 93               569 	mov	dpx,a
   02D0 A3                  570 	inc	dptr
   02D1 E0                  571 	movx	a,@dptr
   02D2 F5 F0               572 	mov	b,a
   02D4 75 86 00            573 	mov	dps,#0
   02D7 12s00r00r00         574 	lcall	___fsdiv
   02DB AA 82               575 	mov	r2,dpl
   02DD AB 83               576 	mov	r3,dph
   02DF AC 93               577 	mov	r4,dpx
   02E1 AD F0               578 	mov	r5,b
                            579 ;	genAssign: resultIsFar = TRUE
   02E3 E5*00               580 	mov	a,_bpx
   02E5 C3                  581 	clr	c
   02E6 94 F7               582 	subb	a,#0xF7
   02E8 F5 82               583 	mov	dpl,a
   02EA E5*01               584 	mov	a,_bpx+1
   02EC 94 FF               585 	subb	a,#0xFF
   02EE F5 83               586 	mov	dph,a
   02F0 75 93 FF            587 	mov	dpx,#0xFF
   02F3 EA                  588 	mov	a,r2
   02F4 F0                  589 	movx	@dptr,a
   02F5 A3                  590 	inc	dptr
   02F6 EB                  591 	mov	a,r3
   02F7 F0                  592 	movx	@dptr,a
   02F8 A3                  593 	inc	dptr
   02F9 EC                  594 	mov	a,r4
   02FA F0                  595 	movx	@dptr,a
   02FB A3                  596 	inc	dptr
   02FC ED                  597 	mov	a,r5
   02FD F0                  598 	movx	@dptr,a
                            599 ;	logf.c:230: w=z*z;
   02FE E5*00               600 	mov	a,_bpx
   0300 C3                  601 	clr	c
   0301 94 F7               602 	subb	a,#0xF7
   0303 F5 82               603 	mov	dpl,a
   0305 E5*01               604 	mov	a,_bpx+1
   0307 94 FF               605 	subb	a,#0xFF
   0309 F5 83               606 	mov	dph,a
   030B 75 93 FF            607 	mov	dpx,#0xFF
                            608 ;	genAssign: resultIsFar = TRUE
   030E 75 86 21            609 	mov	dps,#0x21
   0311 90s00r00r00         610 	mov	dptr,#___fsmul_PARM_2
   0315 E0                  611 	movx	a,@dptr
   0316 F0                  612 	movx	@dptr,a
   0317 A3                  613 	inc	dptr
   0318 A3                  614 	inc	dptr
   0319 E0                  615 	movx	a,@dptr
   031A F0                  616 	movx	@dptr,a
   031B A3                  617 	inc	dptr
   031C A3                  618 	inc	dptr
   031D E0                  619 	movx	a,@dptr
   031E F0                  620 	movx	@dptr,a
   031F A3                  621 	inc	dptr
   0320 A3                  622 	inc	dptr
   0321 E0                  623 	movx	a,@dptr
   0322 F0                  624 	movx	@dptr,a
   0323 75 86 00            625 	mov	dps,#0
   0326 E5*00               626 	mov	a,_bpx
   0328 C3                  627 	clr	c
   0329 94 F7               628 	subb	a,#0xF7
   032B F5 84               629 	mov	dpl1,a
   032D E5*01               630 	mov	a,_bpx+1
   032F 94 FF               631 	subb	a,#0xFF
   0331 F5 85               632 	mov	dph1,a
   0333 75 95 FF            633 	mov	dpx1,#0xFF
   0336 05 86               634 	inc	dps
   0338 E0                  635 	movx	a,@dptr
   0339 F5 82               636 	mov	dpl,a
   033B A3                  637 	inc	dptr
   033C E0                  638 	movx	a,@dptr
   033D F5 83               639 	mov	dph,a
   033F A3                  640 	inc	dptr
   0340 E0                  641 	movx	a,@dptr
   0341 F5 93               642 	mov	dpx,a
   0343 A3                  643 	inc	dptr
   0344 E0                  644 	movx	a,@dptr
   0345 F5 F0               645 	mov	b,a
   0347 75 86 00            646 	mov	dps,#0
   034A 12s00r00r00         647 	lcall	___fsmul
   034E AE 82               648 	mov	r6,dpl
   0350 AF 83               649 	mov	r7,dph
   0352 A8 93               650 	mov	r0,dpx
   0354 A9 F0               651 	mov	r1,b
                            652 ;	genAssign: resultIsFar = FALSE
   0356 8E 02               653 	mov	ar2,r6
   0358 8F 03               654 	mov	ar3,r7
   035A 88 04               655 	mov	ar4,r0
   035C 89 05               656 	mov	ar5,r1
                            657 ;	logf.c:232: Rz=z+z*(w*A(w)/B(w));
                            658 ;	genAssign: resultIsFar = TRUE
   035E 90s00r00r00         659 	mov	dptr,#___fsmul_PARM_2
   0362 EA                  660 	mov	a,r2
   0363 F0                  661 	movx	@dptr,a
   0364 A3                  662 	inc	dptr
   0365 EB                  663 	mov	a,r3
   0366 F0                  664 	movx	@dptr,a
   0367 A3                  665 	inc	dptr
   0368 EC                  666 	mov	a,r4
   0369 F0                  667 	movx	@dptr,a
   036A A3                  668 	inc	dptr
   036B ED                  669 	mov	a,r5
   036C F0                  670 	movx	@dptr,a
   036D C0 02               671 	push	ar2
   036F C0 03               672 	push	ar3
   0371 C0 04               673 	push	ar4
   0373 C0 05               674 	push	ar5
   0375 90 0D 7E 3D         675 	mov	dptr,#0x0D7E3D
   0379 75 F0 BF            676 	mov	b,#0xBF
   037C 12s00r00r00         677 	lcall	___fsmul
   0380 AE 82               678 	mov	r6,dpl
   0382 AF 83               679 	mov	r7,dph
   0384 A8 93               680 	mov	r0,dpx
   0386 A9 F0               681 	mov	r1,b
   0388 D0 05               682 	pop	ar5
   038A D0 04               683 	pop	ar4
   038C D0 03               684 	pop	ar3
   038E D0 02               685 	pop	ar2
                            686 ;	genAssign: resultIsFar = TRUE
   0390 90s00r00r00         687 	mov	dptr,#___fsadd_PARM_2
   0394 74 3A               688 	mov	a,#0x3A
   0396 F0                  689 	movx	@dptr,a
   0397 A3                  690 	inc	dptr
   0398 74 3F               691 	mov	a,#0x3F
   039A F0                  692 	movx	@dptr,a
   039B A3                  693 	inc	dptr
   039C 74 D4               694 	mov	a,#0xD4
   039E F0                  695 	movx	@dptr,a
   039F A3                  696 	inc	dptr
   03A0 74 C0               697 	mov	a,#0xC0
   03A2 F0                  698 	movx	@dptr,a
   03A3 C0 06               699 	push	ar6
   03A5 C0 07               700 	push	ar7
   03A7 C0 00               701 	push	ar0
   03A9 C0 01               702 	push	ar1
   03AB 8A 82               703 	mov	dpl,r2
   03AD 8B 83               704 	mov	dph,r3
   03AF 8C 93               705 	mov	dpx,r4
   03B1 8D F0               706 	mov	b,r5
   03B3 12s00r00r00         707 	lcall	___fsadd
   03B7 AA 82               708 	mov	r2,dpl
   03B9 AB 83               709 	mov	r3,dph
   03BB AC 93               710 	mov	r4,dpx
   03BD AD F0               711 	mov	r5,b
   03BF D0 01               712 	pop	ar1
   03C1 D0 00               713 	pop	ar0
   03C3 D0 07               714 	pop	ar7
   03C5 D0 06               715 	pop	ar6
                            716 ;	genAssign: resultIsFar = TRUE
   03C7 90s00r00r00         717 	mov	dptr,#___fsdiv_PARM_2
   03CB EA                  718 	mov	a,r2
   03CC F0                  719 	movx	@dptr,a
   03CD A3                  720 	inc	dptr
   03CE EB                  721 	mov	a,r3
   03CF F0                  722 	movx	@dptr,a
   03D0 A3                  723 	inc	dptr
   03D1 EC                  724 	mov	a,r4
   03D2 F0                  725 	movx	@dptr,a
   03D3 A3                  726 	inc	dptr
   03D4 ED                  727 	mov	a,r5
   03D5 F0                  728 	movx	@dptr,a
   03D6 8E 82               729 	mov	dpl,r6
   03D8 8F 83               730 	mov	dph,r7
   03DA 88 93               731 	mov	dpx,r0
   03DC 89 F0               732 	mov	b,r1
   03DE 12s00r00r00         733 	lcall	___fsdiv
   03E2 AA 82               734 	mov	r2,dpl
   03E4 AB 83               735 	mov	r3,dph
   03E6 AC 93               736 	mov	r4,dpx
   03E8 AD F0               737 	mov	r5,b
                            738 ;	genAssign: resultIsFar = TRUE
   03EA 90s00r00r00         739 	mov	dptr,#___fsmul_PARM_2
   03EE EA                  740 	mov	a,r2
   03EF F0                  741 	movx	@dptr,a
   03F0 A3                  742 	inc	dptr
   03F1 EB                  743 	mov	a,r3
   03F2 F0                  744 	movx	@dptr,a
   03F3 A3                  745 	inc	dptr
   03F4 EC                  746 	mov	a,r4
   03F5 F0                  747 	movx	@dptr,a
   03F6 A3                  748 	inc	dptr
   03F7 ED                  749 	mov	a,r5
   03F8 F0                  750 	movx	@dptr,a
   03F9 E5*00               751 	mov	a,_bpx
   03FB C3                  752 	clr	c
   03FC 94 F7               753 	subb	a,#0xF7
   03FE F5 84               754 	mov	dpl1,a
   0400 E5*01               755 	mov	a,_bpx+1
   0402 94 FF               756 	subb	a,#0xFF
   0404 F5 85               757 	mov	dph1,a
   0406 75 95 FF            758 	mov	dpx1,#0xFF
   0409 05 86               759 	inc	dps
   040B E0                  760 	movx	a,@dptr
   040C F5 82               761 	mov	dpl,a
   040E A3                  762 	inc	dptr
   040F E0                  763 	movx	a,@dptr
   0410 F5 83               764 	mov	dph,a
   0412 A3                  765 	inc	dptr
   0413 E0                  766 	movx	a,@dptr
   0414 F5 93               767 	mov	dpx,a
   0416 A3                  768 	inc	dptr
   0417 E0                  769 	movx	a,@dptr
   0418 F5 F0               770 	mov	b,a
   041A 75 86 00            771 	mov	dps,#0
   041D 12s00r00r00         772 	lcall	___fsmul
   0421 AA 82               773 	mov	r2,dpl
   0423 AB 83               774 	mov	r3,dph
   0425 AC 93               775 	mov	r4,dpx
   0427 AD F0               776 	mov	r5,b
                            777 ;	genAssign: resultIsFar = TRUE
   0429 90s00r00r00         778 	mov	dptr,#___fsadd_PARM_2
   042D EA                  779 	mov	a,r2
   042E F0                  780 	movx	@dptr,a
   042F A3                  781 	inc	dptr
   0430 EB                  782 	mov	a,r3
   0431 F0                  783 	movx	@dptr,a
   0432 A3                  784 	inc	dptr
   0433 EC                  785 	mov	a,r4
   0434 F0                  786 	movx	@dptr,a
   0435 A3                  787 	inc	dptr
   0436 ED                  788 	mov	a,r5
   0437 F0                  789 	movx	@dptr,a
   0438 E5*00               790 	mov	a,_bpx
   043A C3                  791 	clr	c
   043B 94 F7               792 	subb	a,#0xF7
   043D F5 84               793 	mov	dpl1,a
   043F E5*01               794 	mov	a,_bpx+1
   0441 94 FF               795 	subb	a,#0xFF
   0443 F5 85               796 	mov	dph1,a
   0445 75 95 FF            797 	mov	dpx1,#0xFF
   0448 05 86               798 	inc	dps
   044A E0                  799 	movx	a,@dptr
   044B F5 82               800 	mov	dpl,a
   044D A3                  801 	inc	dptr
   044E E0                  802 	movx	a,@dptr
   044F F5 83               803 	mov	dph,a
   0451 A3                  804 	inc	dptr
   0452 E0                  805 	movx	a,@dptr
   0453 F5 93               806 	mov	dpx,a
   0455 A3                  807 	inc	dptr
   0456 E0                  808 	movx	a,@dptr
   0457 F5 F0               809 	mov	b,a
   0459 75 86 00            810 	mov	dps,#0
   045C 12s00r00r00         811 	lcall	___fsadd
   0460 AA 82               812 	mov	r2,dpl
   0462 AB 83               813 	mov	r3,dph
   0464 AC 93               814 	mov	r4,dpx
   0466 AD F0               815 	mov	r5,b
                            816 ;	genAssign: resultIsFar = TRUE
   0468 75 93 FF            817 	mov	dpx,#0xFF
   046B 85*01 83            818 	mov	dph,_bpx+1
   046E 85*00 82            819 	mov	dpl,_bpx
   0471 A3                  820 	inc	dptr
   0472 EA                  821 	mov	a,r2
   0473 F0                  822 	movx	@dptr,a
   0474 A3                  823 	inc	dptr
   0475 EB                  824 	mov	a,r3
   0476 F0                  825 	movx	@dptr,a
   0477 A3                  826 	inc	dptr
   0478 EC                  827 	mov	a,r4
   0479 F0                  828 	movx	@dptr,a
   047A A3                  829 	inc	dptr
   047B ED                  830 	mov	a,r5
   047C F0                  831 	movx	@dptr,a
                            832 ;	logf.c:233: xn=n;
   047D E5*00               833 	mov	a,_bpx
   047F C3                  834 	clr	c
   0480 94 EF               835 	subb	a,#0xEF
   0482 F5 84               836 	mov	dpl1,a
   0484 E5*01               837 	mov	a,_bpx+1
   0486 94 FF               838 	subb	a,#0xFF
   0488 F5 85               839 	mov	dph1,a
   048A 75 95 FF            840 	mov	dpx1,#0xFF
   048D 05 86               841 	inc	dps
   048F E0                  842 	movx	a,@dptr
   0490 F5 82               843 	mov	dpl,a
   0492 A3                  844 	inc	dptr
   0493 E0                  845 	movx	a,@dptr
   0494 F5 83               846 	mov	dph,a
   0496 75 86 00            847 	mov	dps,#0
   0499 12s00r00r00         848 	lcall	___sint2fs
   049D AE 82               849 	mov	r6,dpl
   049F AF 83               850 	mov	r7,dph
   04A1 A8 93               851 	mov	r0,dpx
   04A3 A9 F0               852 	mov	r1,b
                            853 ;	genAssign: resultIsFar = TRUE
                            854 ;	logf.c:234: return ((xn*C2+Rz)+xn*C1);
                            855 ;	genAssign: resultIsFar = TRUE
   04A5 90s00r00r00         856 	mov	dptr,#___fsmul_PARM_2
   04A9 EE                  857 	mov	a,r6
   04AA F0                  858 	movx	@dptr,a
   04AB A3                  859 	inc	dptr
   04AC EF                  860 	mov	a,r7
   04AD F0                  861 	movx	@dptr,a
   04AE A3                  862 	inc	dptr
   04AF E8                  863 	mov	a,r0
   04B0 F0                  864 	movx	@dptr,a
   04B1 A3                  865 	inc	dptr
   04B2 E9                  866 	mov	a,r1
   04B3 F0                  867 	movx	@dptr,a
   04B4 C0 06               868 	push	ar6
   04B6 C0 07               869 	push	ar7
   04B8 C0 00               870 	push	ar0
   04BA C0 01               871 	push	ar1
   04BC 90 5E 80 83         872 	mov	dptr,#0x5E8083
   04C0 75 F0 B9            873 	mov	b,#0xB9
   04C3 12s00r00r00         874 	lcall	___fsmul
   04C7 AA 82               875 	mov	r2,dpl
   04C9 AB 83               876 	mov	r3,dph
   04CB AC 93               877 	mov	r4,dpx
   04CD AD F0               878 	mov	r5,b
   04CF D0 01               879 	pop	ar1
   04D1 D0 00               880 	pop	ar0
   04D3 D0 07               881 	pop	ar7
   04D5 D0 06               882 	pop	ar6
   04D7 75 93 FF            883 	mov	dpx,#0xFF
   04DA 85*01 83            884 	mov	dph,_bpx+1
   04DD 85*00 82            885 	mov	dpl,_bpx
   04E0 A3                  886 	inc	dptr
                            887 ;	genAssign: resultIsFar = TRUE
   04E1 75 86 21            888 	mov	dps,#0x21
   04E4 90s00r00r00         889 	mov	dptr,#___fsadd_PARM_2
   04E8 E0                  890 	movx	a,@dptr
   04E9 F0                  891 	movx	@dptr,a
   04EA A3                  892 	inc	dptr
   04EB A3                  893 	inc	dptr
   04EC E0                  894 	movx	a,@dptr
   04ED F0                  895 	movx	@dptr,a
   04EE A3                  896 	inc	dptr
   04EF A3                  897 	inc	dptr
   04F0 E0                  898 	movx	a,@dptr
   04F1 F0                  899 	movx	@dptr,a
   04F2 A3                  900 	inc	dptr
   04F3 A3                  901 	inc	dptr
   04F4 E0                  902 	movx	a,@dptr
   04F5 F0                  903 	movx	@dptr,a
   04F6 75 86 00            904 	mov	dps,#0
   04F9 C0 06               905 	push	ar6
   04FB C0 07               906 	push	ar7
   04FD C0 00               907 	push	ar0
   04FF C0 01               908 	push	ar1
   0501 8A 82               909 	mov	dpl,r2
   0503 8B 83               910 	mov	dph,r3
   0505 8C 93               911 	mov	dpx,r4
   0507 8D F0               912 	mov	b,r5
   0509 12s00r00r00         913 	lcall	___fsadd
   050D AA 82               914 	mov	r2,dpl
   050F AB 83               915 	mov	r3,dph
   0511 AC 93               916 	mov	r4,dpx
   0513 AD F0               917 	mov	r5,b
   0515 D0 01               918 	pop	ar1
   0517 D0 00               919 	pop	ar0
   0519 D0 07               920 	pop	ar7
   051B D0 06               921 	pop	ar6
                            922 ;	genAssign: resultIsFar = TRUE
   051D 90s00r00r00         923 	mov	dptr,#___fsmul_PARM_2
   0521 EE                  924 	mov	a,r6
   0522 F0                  925 	movx	@dptr,a
   0523 A3                  926 	inc	dptr
   0524 EF                  927 	mov	a,r7
   0525 F0                  928 	movx	@dptr,a
   0526 A3                  929 	inc	dptr
   0527 E8                  930 	mov	a,r0
   0528 F0                  931 	movx	@dptr,a
   0529 A3                  932 	inc	dptr
   052A E9                  933 	mov	a,r1
   052B F0                  934 	movx	@dptr,a
   052C C0 02               935 	push	ar2
   052E C0 03               936 	push	ar3
   0530 C0 04               937 	push	ar4
   0532 C0 05               938 	push	ar5
   0534 90 31 80 00         939 	mov	dptr,#0x318000
   0538 75 F0 3F            940 	mov	b,#0x3F
   053B 12s00r00r00         941 	lcall	___fsmul
   053F AE 82               942 	mov	r6,dpl
   0541 AF 83               943 	mov	r7,dph
   0543 A8 93               944 	mov	r0,dpx
   0545 A9 F0               945 	mov	r1,b
   0547 D0 05               946 	pop	ar5
   0549 D0 04               947 	pop	ar4
   054B D0 03               948 	pop	ar3
   054D D0 02               949 	pop	ar2
                            950 ;	genAssign: resultIsFar = TRUE
   054F 90s00r00r00         951 	mov	dptr,#___fsadd_PARM_2
   0553 EE                  952 	mov	a,r6
   0554 F0                  953 	movx	@dptr,a
   0555 A3                  954 	inc	dptr
   0556 EF                  955 	mov	a,r7
   0557 F0                  956 	movx	@dptr,a
   0558 A3                  957 	inc	dptr
   0559 E8                  958 	mov	a,r0
   055A F0                  959 	movx	@dptr,a
   055B A3                  960 	inc	dptr
   055C E9                  961 	mov	a,r1
   055D F0                  962 	movx	@dptr,a
   055E 8A 82               963 	mov	dpl,r2
   0560 8B 83               964 	mov	dph,r3
   0562 8C 93               965 	mov	dpx,r4
   0564 8D F0               966 	mov	b,r5
   0566 12s00r00r00         967 	lcall	___fsadd
   056A                     968 00106$:
   056A 85*00 81            969 	mov	sp,_bpx
   056D 85*01 9B            970 	mov	esp,_bpx+1
   0570 D0*01               971 	pop	_bpx+1
   0572 D0*00               972 	pop	_bpx
   0574 22                  973 	ret
                            974 	.area CSEG    (CODE)
                            975 	.area CONST   (CODE)
                            976 	.area XINIT   (CODE)
                            977 	.area CABS    (ABS,CODE)

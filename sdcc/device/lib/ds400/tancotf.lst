                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:25:33 2013
                              5 ;--------------------------------------------------------
                              6 	.module tancotf
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _tancotf
                             31 	.globl _tancotf_PARM_2
                             32 ;--------------------------------------------------------
                             33 ; special function registers
                             34 ;--------------------------------------------------------
                             35 ;--------------------------------------------------------
                             36 ; special function bits
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; overlayable register banks
                             40 ;--------------------------------------------------------
                             41 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      42 	.ds 8
                             43 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                      44 	.ds 8
                             45 ;--------------------------------------------------------
                             46 ; internal ram data
                             47 ;--------------------------------------------------------
                             48 	.area DSEG    (DATA)
                             49 ;--------------------------------------------------------
                             50 ; overlayable items in internal ram 
                             51 ;--------------------------------------------------------
                             52 	.area OSEG    (OVR,DATA)
                             53 ;--------------------------------------------------------
                             54 ; indirectly addressable internal ram data
                             55 ;--------------------------------------------------------
                             56 	.area ISEG    (DATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute internal ram data
                             59 ;--------------------------------------------------------
                             60 	.area IABS    (ABS,DATA)
                             61 	.area IABS    (ABS,DATA)
                             62 ;--------------------------------------------------------
                             63 ; bit data
                             64 ;--------------------------------------------------------
                             65 	.area BSEG    (BIT)
                             66 ;--------------------------------------------------------
                             67 ; paged external ram data
                             68 ;--------------------------------------------------------
                             69 	.area PSEG    (PAG,XDATA)
                             70 ;--------------------------------------------------------
                             71 ; external ram data
                             72 ;--------------------------------------------------------
                             73 	.area XSEG    (XDATA)
   0000                      74 _tancotf_PARM_2:
   0000                      75 	.ds 2
   0002                      76 _tancotf_f_1_1:
   0002                      77 	.ds 4
   0006                      78 _tancotf_g_1_1:
   0006                      79 	.ds 4
   000A                      80 _tancotf_xn_1_1:
   000A                      81 	.ds 4
   000E                      82 _tancotf_xden_1_1:
   000E                      83 	.ds 4
   0012                      84 _tancotf_n_1_1:
   0012                      85 	.ds 2
   0014                      86 _tancotf_sloc0_1_0:
   0014                      87 	.ds 4
                             88 ;--------------------------------------------------------
                             89 ; absolute external ram data
                             90 ;--------------------------------------------------------
                             91 	.area XABS    (ABS,XDATA)
                             92 ;--------------------------------------------------------
                             93 ; external initialized ram data
                             94 ;--------------------------------------------------------
                             95 	.area XISEG   (XDATA)
                             96 ;--------------------------------------------------------
                             97 ; global & static initialisations
                             98 ;--------------------------------------------------------
                             99 	.area HOME    (CODE)
                            100 	.area GSINIT  (CODE)
                            101 	.area GSFINAL (CODE)
                            102 	.area GSINIT  (CODE)
                            103 ;--------------------------------------------------------
                            104 ; Home
                            105 ;--------------------------------------------------------
                            106 	.area HOME    (CODE)
                            107 	.area HOME    (CODE)
                            108 ;--------------------------------------------------------
                            109 ; code
                            110 ;--------------------------------------------------------
                            111 	.area CSEG    (CODE)
                            112 ;------------------------------------------------------------
                            113 ;Allocation info for local variables in function 'tancotf'
                            114 ;------------------------------------------------------------
                            115 ;iscotan                   Allocated with name '_tancotf_PARM_2'
                            116 ;x                         Allocated to registers r2 r3 r4 r5 
                            117 ;f                         Allocated with name '_tancotf_f_1_1'
                            118 ;g                         Allocated with name '_tancotf_g_1_1'
                            119 ;xn                        Allocated with name '_tancotf_xn_1_1'
                            120 ;xnum                      Allocated to registers r6 r7 r0 r1 
                            121 ;xden                      Allocated with name '_tancotf_xden_1_1'
                            122 ;n                         Allocated with name '_tancotf_n_1_1'
                            123 ;sloc0                     Allocated with name '_tancotf_sloc0_1_0'
                            124 ;------------------------------------------------------------
                            125 ;	tancotf.c:42: float tancotf(const float x, const int iscotan)
                            126 ;	-----------------------------------------
                            127 ;	 function tancotf
                            128 ;	-----------------------------------------
   0000                     129 _tancotf:
                    0002    130 	ar2 = 0x02
                    0003    131 	ar3 = 0x03
                    0004    132 	ar4 = 0x04
                    0005    133 	ar5 = 0x05
                    0006    134 	ar6 = 0x06
                    0007    135 	ar7 = 0x07
                    0000    136 	ar0 = 0x00
                    0001    137 	ar1 = 0x01
   0000 AA 82               138 	mov	r2,dpl
   0002 AB 83               139 	mov	r3,dph
   0004 AC 93               140 	mov	r4,dpx
   0006 AD F0               141 	mov	r5,b
                            142 ;	tancotf.c:47: if (fabsf(x) > YMAX)
   0008 C0 02               143 	push	ar2
   000A C0 03               144 	push	ar3
   000C C0 04               145 	push	ar4
   000E C0 05               146 	push	ar5
   0010 8A 82               147 	mov	dpl,r2
   0012 8B 83               148 	mov	dph,r3
   0014 8C 93               149 	mov	dpx,r4
   0016 8D F0               150 	mov	b,r5
   0018 12s00r00r00         151 	lcall	_fabsf
   001C AE 82               152 	mov	r6,dpl
   001E AF 83               153 	mov	r7,dph
   0020 A8 93               154 	mov	r0,dpx
   0022 A9 F0               155 	mov	r1,b
   0024 D0 05               156 	pop	ar5
   0026 D0 04               157 	pop	ar4
   0028 D0 03               158 	pop	ar3
   002A D0 02               159 	pop	ar2
                            160 ;	genAssign: resultIsFar = TRUE
   002C 90s00r00r00         161 	mov	dptr,#___fsgt_PARM_2
   0030 E4                  162 	clr  a
   0031 F0                  163 	movx	@dptr,a
   0032 A3                  164 	inc	dptr
   0033 74 08               165 	mov	a,#0x08
   0035 F0                  166 	movx	@dptr,a
   0036 A3                  167 	inc	dptr
   0037 74 C9               168 	mov	a,#0xC9
   0039 F0                  169 	movx	@dptr,a
   003A A3                  170 	inc	dptr
   003B 74 45               171 	mov	a,#0x45
   003D F0                  172 	movx	@dptr,a
   003E C0 02               173 	push	ar2
   0040 C0 03               174 	push	ar3
   0042 C0 04               175 	push	ar4
   0044 C0 05               176 	push	ar5
   0046 8E 82               177 	mov	dpl,r6
   0048 8F 83               178 	mov	dph,r7
   004A 88 93               179 	mov	dpx,r0
   004C 89 F0               180 	mov	b,r1
   004E 12s00r00r00         181 	lcall	___fsgt
   0052 D0 05               182 	pop	ar5
   0054 D0 04               183 	pop	ar4
   0056 D0 03               184 	pop	ar3
   0058 D0 02               185 	pop	ar2
   005A E5 82               186 	mov	a,dpl
   005C 60 15               187 	jz  00102$
   005E                     188 00125$:
                            189 ;	tancotf.c:49: errno = ERANGE;
                            190 ;	genAssign: resultIsFar = TRUE
   005E 90s00r00r00         191 	mov	dptr,#_errno
   0062 74 22               192 	mov	a,#0x22
   0064 F0                  193 	movx	@dptr,a
   0065 E4                  194 	clr	a
   0066 A3                  195 	inc	dptr
   0067 F0                  196 	movx	@dptr,a
                            197 ;	tancotf.c:50: return 0.0;
   0068 90 00 00 00         198 	mov  dptr,#0x0000
   006C 75 F0 00            199 	mov	b,#0x00
   006F 02s00r06r35         200 	ljmp	00115$
   0073                     201 00102$:
                            202 ;	tancotf.c:54: n=(x*TWO_O_PI+(x>0.0?0.5:-0.5)); /*works for +-x*/
                            203 ;	genAssign: resultIsFar = TRUE
   0073 90s00r00r00         204 	mov	dptr,#___fsmul_PARM_2
   0077 EA                  205 	mov	a,r2
   0078 F0                  206 	movx	@dptr,a
   0079 A3                  207 	inc	dptr
   007A EB                  208 	mov	a,r3
   007B F0                  209 	movx	@dptr,a
   007C A3                  210 	inc	dptr
   007D EC                  211 	mov	a,r4
   007E F0                  212 	movx	@dptr,a
   007F A3                  213 	inc	dptr
   0080 ED                  214 	mov	a,r5
   0081 F0                  215 	movx	@dptr,a
   0082 C0 02               216 	push	ar2
   0084 C0 03               217 	push	ar3
   0086 C0 04               218 	push	ar4
   0088 C0 05               219 	push	ar5
   008A 90 22 F9 83         220 	mov	dptr,#0x22F983
   008E 75 F0 3F            221 	mov	b,#0x3F
   0091 12s00r00r00         222 	lcall	___fsmul
   0095 AE 82               223 	mov	r6,dpl
   0097 AF 83               224 	mov	r7,dph
   0099 A8 93               225 	mov	r0,dpx
   009B A9 F0               226 	mov	r1,b
   009D D0 05               227 	pop	ar5
   009F D0 04               228 	pop	ar4
   00A1 D0 03               229 	pop	ar3
   00A3 D0 02               230 	pop	ar2
                            231 ;	genAssign: resultIsFar = TRUE
   00A5 90s00r00r00         232 	mov	dptr,#___fsgt_PARM_2
   00A9 E4                  233 	clr  a
   00AA F0                  234 	movx @dptr,a
   00AB A3                  235 	inc  dptr
   00AC F0                  236 	movx @dptr,a
   00AD A3                  237 	inc	dptr
   00AE E4                  238 	clr  a
   00AF F0                  239 	movx @dptr,a
   00B0 A3                  240 	inc  dptr
   00B1 F0                  241 	movx @dptr,a
   00B2 C0 02               242 	push	ar2
   00B4 C0 03               243 	push	ar3
   00B6 C0 04               244 	push	ar4
   00B8 C0 05               245 	push	ar5
   00BA C0 06               246 	push	ar6
   00BC C0 07               247 	push	ar7
   00BE C0 00               248 	push	ar0
   00C0 C0 01               249 	push	ar1
   00C2 8A 82               250 	mov	dpl,r2
   00C4 8B 83               251 	mov	dph,r3
   00C6 8C 93               252 	mov	dpx,r4
   00C8 8D F0               253 	mov	b,r5
   00CA 12s00r00r00         254 	lcall	___fsgt
   00CE D0 01               255 	pop	ar1
   00D0 D0 00               256 	pop	ar0
   00D2 D0 07               257 	pop	ar7
   00D4 D0 06               258 	pop	ar6
   00D6 D0 05               259 	pop	ar5
   00D8 D0 04               260 	pop	ar4
   00DA D0 03               261 	pop	ar3
   00DC D0 02               262 	pop	ar2
   00DE E5 82               263 	mov	a,dpl
   00E0 60 11               264 	jz  00117$
   00E2                     265 00126$:
                            266 ;	genAssign: resultIsFar = TRUE
   00E2 90s00r00r14         267 	mov	dptr,#_tancotf_sloc0_1_0
   00E6 E4                  268 	clr  a
   00E7 F0                  269 	movx @dptr,a
   00E8 A3                  270 	inc  dptr
   00E9 F0                  271 	movx @dptr,a
   00EA A3                  272 	inc	dptr
   00EB E4                  273 	clr  a
   00EC F0                  274 	movx	@dptr,a
   00ED A3                  275 	inc	dptr
   00EE 74 3F               276 	mov	a,#0x3F
   00F0 F0                  277 	movx	@dptr,a
   00F1 80 0F               278 	sjmp 00118$
   00F3                     279 00117$:
                            280 ;	genAssign: resultIsFar = TRUE
   00F3 90s00r00r14         281 	mov	dptr,#_tancotf_sloc0_1_0
   00F7 E4                  282 	clr  a
   00F8 F0                  283 	movx @dptr,a
   00F9 A3                  284 	inc  dptr
   00FA F0                  285 	movx @dptr,a
   00FB A3                  286 	inc	dptr
   00FC E4                  287 	clr  a
   00FD F0                  288 	movx	@dptr,a
   00FE A3                  289 	inc	dptr
   00FF 74 BF               290 	mov	a,#0xBF
   0101 F0                  291 	movx	@dptr,a
   0102                     292 00118$:
   0102 90s00r00r14         293 	mov	dptr,#_tancotf_sloc0_1_0
                            294 ;	genAssign: resultIsFar = TRUE
   0106 75 86 21            295 	mov	dps,#0x21
   0109 90s00r00r00         296 	mov	dptr,#___fsadd_PARM_2
   010D E0                  297 	movx	a,@dptr
   010E F0                  298 	movx	@dptr,a
   010F A3                  299 	inc	dptr
   0110 A3                  300 	inc	dptr
   0111 E0                  301 	movx	a,@dptr
   0112 F0                  302 	movx	@dptr,a
   0113 A3                  303 	inc	dptr
   0114 A3                  304 	inc	dptr
   0115 E0                  305 	movx	a,@dptr
   0116 F0                  306 	movx	@dptr,a
   0117 A3                  307 	inc	dptr
   0118 A3                  308 	inc	dptr
   0119 E0                  309 	movx	a,@dptr
   011A F0                  310 	movx	@dptr,a
   011B 75 86 00            311 	mov	dps,#0
   011E C0 02               312 	push	ar2
   0120 C0 03               313 	push	ar3
   0122 C0 04               314 	push	ar4
   0124 C0 05               315 	push	ar5
   0126 8E 82               316 	mov	dpl,r6
   0128 8F 83               317 	mov	dph,r7
   012A 88 93               318 	mov	dpx,r0
   012C 89 F0               319 	mov	b,r1
   012E 12s00r00r00         320 	lcall	___fsadd
   0132 D0 05               321 	pop	ar5
   0134 D0 04               322 	pop	ar4
   0136 D0 03               323 	pop	ar3
   0138 D0 02               324 	pop	ar2
   013A C0 02               325 	push	ar2
   013C C0 03               326 	push	ar3
   013E C0 04               327 	push	ar4
   0140 C0 05               328 	push	ar5
   0142 12s00r00r00         329 	lcall	___fs2sint
   0146 AE 82               330 	mov	r6,dpl
   0148 AF 83               331 	mov	r7,dph
   014A D0 05               332 	pop	ar5
   014C D0 04               333 	pop	ar4
   014E D0 03               334 	pop	ar3
   0150 D0 02               335 	pop	ar2
                            336 ;	genAssign: resultIsFar = TRUE
   0152 90s00r00r12         337 	mov	dptr,#_tancotf_n_1_1
   0156 EE                  338 	mov	a,r6
   0157 F0                  339 	movx	@dptr,a
   0158 A3                  340 	inc	dptr
   0159 EF                  341 	mov	a,r7
   015A F0                  342 	movx	@dptr,a
                            343 ;	tancotf.c:55: xn=n;
   015B C0 02               344 	push	ar2
   015D C0 03               345 	push	ar3
   015F C0 04               346 	push	ar4
   0161 C0 05               347 	push	ar5
   0163 05 86               348 	inc	dps
   0165 90s00r00r12         349 	mov	dptr,#_tancotf_n_1_1
   0169 E0                  350 	movx	a,@dptr
   016A F5 82               351 	mov	dpl,a
   016C A3                  352 	inc	dptr
   016D E0                  353 	movx	a,@dptr
   016E F5 83               354 	mov	dph,a
   0170 75 86 00            355 	mov	dps,#0
   0173 12s00r00r00         356 	lcall	___sint2fs
   0177 A8 82               357 	mov	r0,dpl
   0179 A9 83               358 	mov	r1,dph
   017B AE 93               359 	mov	r6,dpx
   017D AF F0               360 	mov	r7,b
   017F D0 05               361 	pop	ar5
   0181 D0 04               362 	pop	ar4
   0183 D0 03               363 	pop	ar3
   0185 D0 02               364 	pop	ar2
                            365 ;	genAssign: resultIsFar = TRUE
   0187 90s00r00r0A         366 	mov	dptr,#_tancotf_xn_1_1
   018B E8                  367 	mov	a,r0
   018C F0                  368 	movx	@dptr,a
   018D A3                  369 	inc	dptr
   018E E9                  370 	mov	a,r1
   018F F0                  371 	movx	@dptr,a
   0190 A3                  372 	inc	dptr
   0191 EE                  373 	mov	a,r6
   0192 F0                  374 	movx	@dptr,a
   0193 A3                  375 	inc	dptr
   0194 EF                  376 	mov	a,r7
   0195 F0                  377 	movx	@dptr,a
                            378 ;	tancotf.c:57: xnum=(int)x;
   0196 C0 02               379 	push	ar2
   0198 C0 03               380 	push	ar3
   019A C0 04               381 	push	ar4
   019C C0 05               382 	push	ar5
   019E 8A 82               383 	mov	dpl,r2
   01A0 8B 83               384 	mov	dph,r3
   01A2 8C 93               385 	mov	dpx,r4
   01A4 8D F0               386 	mov	b,r5
   01A6 12s00r00r00         387 	lcall	___fs2sint
   01AA D0 05               388 	pop	ar5
   01AC D0 04               389 	pop	ar4
   01AE D0 03               390 	pop	ar3
   01B0 D0 02               391 	pop	ar2
   01B2 C0 02               392 	push	ar2
   01B4 C0 03               393 	push	ar3
   01B6 C0 04               394 	push	ar4
   01B8 C0 05               395 	push	ar5
   01BA 12s00r00r00         396 	lcall	___sint2fs
   01BE AE 82               397 	mov	r6,dpl
   01C0 AF 83               398 	mov	r7,dph
   01C2 A8 93               399 	mov	r0,dpx
   01C4 A9 F0               400 	mov	r1,b
   01C6 D0 05               401 	pop	ar5
   01C8 D0 04               402 	pop	ar4
   01CA D0 03               403 	pop	ar3
   01CC D0 02               404 	pop	ar2
                            405 ;	genAssign: resultIsFar = TRUE
                            406 ;	tancotf.c:58: xden=x-xnum;
                            407 ;	genAssign: resultIsFar = TRUE
   01CE 90s00r00r00         408 	mov	dptr,#___fssub_PARM_2
   01D2 EE                  409 	mov	a,r6
   01D3 F0                  410 	movx	@dptr,a
   01D4 A3                  411 	inc	dptr
   01D5 EF                  412 	mov	a,r7
   01D6 F0                  413 	movx	@dptr,a
   01D7 A3                  414 	inc	dptr
   01D8 E8                  415 	mov	a,r0
   01D9 F0                  416 	movx	@dptr,a
   01DA A3                  417 	inc	dptr
   01DB E9                  418 	mov	a,r1
   01DC F0                  419 	movx	@dptr,a
   01DD C0 06               420 	push	ar6
   01DF C0 07               421 	push	ar7
   01E1 C0 00               422 	push	ar0
   01E3 C0 01               423 	push	ar1
   01E5 8A 82               424 	mov	dpl,r2
   01E7 8B 83               425 	mov	dph,r3
   01E9 8C 93               426 	mov	dpx,r4
   01EB 8D F0               427 	mov	b,r5
   01ED 12s00r00r00         428 	lcall	___fssub
   01F1 AA 82               429 	mov	r2,dpl
   01F3 AB 83               430 	mov	r3,dph
   01F5 AC 93               431 	mov	r4,dpx
   01F7 AD F0               432 	mov	r5,b
   01F9 D0 01               433 	pop	ar1
   01FB D0 00               434 	pop	ar0
   01FD D0 07               435 	pop	ar7
   01FF D0 06               436 	pop	ar6
                            437 ;	genAssign: resultIsFar = TRUE
   0201 90s00r00r0E         438 	mov	dptr,#_tancotf_xden_1_1
   0205 EA                  439 	mov	a,r2
   0206 F0                  440 	movx	@dptr,a
   0207 A3                  441 	inc	dptr
   0208 EB                  442 	mov	a,r3
   0209 F0                  443 	movx	@dptr,a
   020A A3                  444 	inc	dptr
   020B EC                  445 	mov	a,r4
   020C F0                  446 	movx	@dptr,a
   020D A3                  447 	inc	dptr
   020E ED                  448 	mov	a,r5
   020F F0                  449 	movx	@dptr,a
                            450 ;	tancotf.c:59: f=((xnum-xn*C1)+xden)-xn*C2;
   0210 90s00r00r0A         451 	mov	dptr,#_tancotf_xn_1_1
                            452 ;	genAssign: resultIsFar = TRUE
   0214 75 86 21            453 	mov	dps,#0x21
   0217 90s00r00r00         454 	mov	dptr,#___fsmul_PARM_2
   021B E0                  455 	movx	a,@dptr
   021C F0                  456 	movx	@dptr,a
   021D A3                  457 	inc	dptr
   021E A3                  458 	inc	dptr
   021F E0                  459 	movx	a,@dptr
   0220 F0                  460 	movx	@dptr,a
   0221 A3                  461 	inc	dptr
   0222 A3                  462 	inc	dptr
   0223 E0                  463 	movx	a,@dptr
   0224 F0                  464 	movx	@dptr,a
   0225 A3                  465 	inc	dptr
   0226 A3                  466 	inc	dptr
   0227 E0                  467 	movx	a,@dptr
   0228 F0                  468 	movx	@dptr,a
   0229 75 86 00            469 	mov	dps,#0
   022C C0 06               470 	push	ar6
   022E C0 07               471 	push	ar7
   0230 C0 00               472 	push	ar0
   0232 C0 01               473 	push	ar1
   0234 90 00 00 00         474 	mov  dptr,#0x0000
   0238 75 93 C9            475 	mov	dpx,#0xC9
   023B 75 F0 3F            476 	mov	b,#0x3F
   023E 12s00r00r00         477 	lcall	___fsmul
   0242 AA 82               478 	mov	r2,dpl
   0244 AB 83               479 	mov	r3,dph
   0246 AC 93               480 	mov	r4,dpx
   0248 AD F0               481 	mov	r5,b
   024A D0 01               482 	pop	ar1
   024C D0 00               483 	pop	ar0
   024E D0 07               484 	pop	ar7
   0250 D0 06               485 	pop	ar6
                            486 ;	genAssign: resultIsFar = TRUE
   0252 90s00r00r00         487 	mov	dptr,#___fssub_PARM_2
   0256 EA                  488 	mov	a,r2
   0257 F0                  489 	movx	@dptr,a
   0258 A3                  490 	inc	dptr
   0259 EB                  491 	mov	a,r3
   025A F0                  492 	movx	@dptr,a
   025B A3                  493 	inc	dptr
   025C EC                  494 	mov	a,r4
   025D F0                  495 	movx	@dptr,a
   025E A3                  496 	inc	dptr
   025F ED                  497 	mov	a,r5
   0260 F0                  498 	movx	@dptr,a
   0261 8E 82               499 	mov	dpl,r6
   0263 8F 83               500 	mov	dph,r7
   0265 88 93               501 	mov	dpx,r0
   0267 89 F0               502 	mov	b,r1
   0269 12s00r00r00         503 	lcall	___fssub
   026D AA 82               504 	mov	r2,dpl
   026F AB 83               505 	mov	r3,dph
   0271 AC 93               506 	mov	r4,dpx
   0273 AD F0               507 	mov	r5,b
   0275 90s00r00r0E         508 	mov	dptr,#_tancotf_xden_1_1
                            509 ;	genAssign: resultIsFar = TRUE
   0279 75 86 21            510 	mov	dps,#0x21
   027C 90s00r00r00         511 	mov	dptr,#___fsadd_PARM_2
   0280 E0                  512 	movx	a,@dptr
   0281 F0                  513 	movx	@dptr,a
   0282 A3                  514 	inc	dptr
   0283 A3                  515 	inc	dptr
   0284 E0                  516 	movx	a,@dptr
   0285 F0                  517 	movx	@dptr,a
   0286 A3                  518 	inc	dptr
   0287 A3                  519 	inc	dptr
   0288 E0                  520 	movx	a,@dptr
   0289 F0                  521 	movx	@dptr,a
   028A A3                  522 	inc	dptr
   028B A3                  523 	inc	dptr
   028C E0                  524 	movx	a,@dptr
   028D F0                  525 	movx	@dptr,a
   028E 75 86 00            526 	mov	dps,#0
   0291 8A 82               527 	mov	dpl,r2
   0293 8B 83               528 	mov	dph,r3
   0295 8C 93               529 	mov	dpx,r4
   0297 8D F0               530 	mov	b,r5
   0299 12s00r00r00         531 	lcall	___fsadd
   029D AE 82               532 	mov	r6,dpl
   029F AF 83               533 	mov	r7,dph
   02A1 A8 93               534 	mov	r0,dpx
   02A3 A9 F0               535 	mov	r1,b
   02A5 90s00r00r0A         536 	mov	dptr,#_tancotf_xn_1_1
                            537 ;	genAssign: resultIsFar = TRUE
   02A9 75 86 21            538 	mov	dps,#0x21
   02AC 90s00r00r00         539 	mov	dptr,#___fsmul_PARM_2
   02B0 E0                  540 	movx	a,@dptr
   02B1 F0                  541 	movx	@dptr,a
   02B2 A3                  542 	inc	dptr
   02B3 A3                  543 	inc	dptr
   02B4 E0                  544 	movx	a,@dptr
   02B5 F0                  545 	movx	@dptr,a
   02B6 A3                  546 	inc	dptr
   02B7 A3                  547 	inc	dptr
   02B8 E0                  548 	movx	a,@dptr
   02B9 F0                  549 	movx	@dptr,a
   02BA A3                  550 	inc	dptr
   02BB A3                  551 	inc	dptr
   02BC E0                  552 	movx	a,@dptr
   02BD F0                  553 	movx	@dptr,a
   02BE 75 86 00            554 	mov	dps,#0
   02C1 C0 06               555 	push	ar6
   02C3 C0 07               556 	push	ar7
   02C5 C0 00               557 	push	ar0
   02C7 C0 01               558 	push	ar1
   02C9 90 FD AA 22         559 	mov	dptr,#0xFDAA22
   02CD 75 F0 39            560 	mov	b,#0x39
   02D0 12s00r00r00         561 	lcall	___fsmul
   02D4 AA 82               562 	mov	r2,dpl
   02D6 AB 83               563 	mov	r3,dph
   02D8 AC 93               564 	mov	r4,dpx
   02DA AD F0               565 	mov	r5,b
   02DC D0 01               566 	pop	ar1
   02DE D0 00               567 	pop	ar0
   02E0 D0 07               568 	pop	ar7
   02E2 D0 06               569 	pop	ar6
                            570 ;	genAssign: resultIsFar = TRUE
   02E4 90s00r00r00         571 	mov	dptr,#___fssub_PARM_2
   02E8 EA                  572 	mov	a,r2
   02E9 F0                  573 	movx	@dptr,a
   02EA A3                  574 	inc	dptr
   02EB EB                  575 	mov	a,r3
   02EC F0                  576 	movx	@dptr,a
   02ED A3                  577 	inc	dptr
   02EE EC                  578 	mov	a,r4
   02EF F0                  579 	movx	@dptr,a
   02F0 A3                  580 	inc	dptr
   02F1 ED                  581 	mov	a,r5
   02F2 F0                  582 	movx	@dptr,a
   02F3 8E 82               583 	mov	dpl,r6
   02F5 8F 83               584 	mov	dph,r7
   02F7 88 93               585 	mov	dpx,r0
   02F9 89 F0               586 	mov	b,r1
   02FB 12s00r00r00         587 	lcall	___fssub
   02FF AA 82               588 	mov	r2,dpl
   0301 AB 83               589 	mov	r3,dph
   0303 AC 93               590 	mov	r4,dpx
   0305 AD F0               591 	mov	r5,b
                            592 ;	genAssign: resultIsFar = TRUE
   0307 90s00r00r02         593 	mov	dptr,#_tancotf_f_1_1
   030B EA                  594 	mov	a,r2
   030C F0                  595 	movx	@dptr,a
   030D A3                  596 	inc	dptr
   030E EB                  597 	mov	a,r3
   030F F0                  598 	movx	@dptr,a
   0310 A3                  599 	inc	dptr
   0311 EC                  600 	mov	a,r4
   0312 F0                  601 	movx	@dptr,a
   0313 A3                  602 	inc	dptr
   0314 ED                  603 	mov	a,r5
   0315 F0                  604 	movx	@dptr,a
                            605 ;	tancotf.c:61: if (fabsf(f) < EPS)
   0316 05 86               606 	inc	dps
   0318 90s00r00r02         607 	mov	dptr,#_tancotf_f_1_1
   031C E0                  608 	movx	a,@dptr
   031D F5 82               609 	mov	dpl,a
   031F A3                  610 	inc	dptr
   0320 E0                  611 	movx	a,@dptr
   0321 F5 83               612 	mov	dph,a
   0323 A3                  613 	inc	dptr
   0324 E0                  614 	movx	a,@dptr
   0325 F5 93               615 	mov	dpx,a
   0327 A3                  616 	inc	dptr
   0328 E0                  617 	movx	a,@dptr
   0329 F5 F0               618 	mov	b,a
   032B 75 86 00            619 	mov	dps,#0
   032E 12s00r00r00         620 	lcall	_fabsf
   0332 AA 82               621 	mov	r2,dpl
   0334 AB 83               622 	mov	r3,dph
   0336 AC 93               623 	mov	r4,dpx
   0338 AD F0               624 	mov	r5,b
                            625 ;	genAssign: resultIsFar = TRUE
   033A 90s00r00r00         626 	mov	dptr,#___fslt_PARM_2
   033E E4                  627 	clr  a
   033F F0                  628 	movx @dptr,a
   0340 A3                  629 	inc  dptr
   0341 F0                  630 	movx @dptr,a
   0342 A3                  631 	inc	dptr
   0343 74 80               632 	mov	a,#0x80
   0345 F0                  633 	movx	@dptr,a
   0346 A3                  634 	inc	dptr
   0347 74 39               635 	mov	a,#0x39
   0349 F0                  636 	movx	@dptr,a
   034A 8A 82               637 	mov	dpl,r2
   034C 8B 83               638 	mov	dph,r3
   034E 8C 93               639 	mov	dpx,r4
   0350 8D F0               640 	mov	b,r5
   0352 12s00r00r00         641 	lcall	___fslt
   0356 E5 82               642 	mov	a,dpl
   0358 60 23               643 	jz  00104$
   035A                     644 00127$:
                            645 ;	tancotf.c:63: xnum = f;
   035A 90s00r00r02         646 	mov	dptr,#_tancotf_f_1_1
                            647 ;	genAssign: resultIsFar = TRUE
   035E E0                  648 	movx	a,@dptr
   035F FE                  649 	mov	r6,a
   0360 A3                  650 	inc	dptr
   0361 E0                  651 	movx	a,@dptr
   0362 FF                  652 	mov	r7,a
   0363 A3                  653 	inc	dptr
   0364 E0                  654 	movx	a,@dptr
   0365 F8                  655 	mov	r0,a
   0366 A3                  656 	inc	dptr
   0367 E0                  657 	movx	a,@dptr
   0368 F9                  658 	mov	r1,a
                            659 ;	tancotf.c:64: xden = 1.0;
                            660 ;	genAssign: resultIsFar = TRUE
   0369 90s00r00r0E         661 	mov	dptr,#_tancotf_xden_1_1
   036D E4                  662 	clr  a
   036E F0                  663 	movx @dptr,a
   036F A3                  664 	inc  dptr
   0370 F0                  665 	movx @dptr,a
   0371 A3                  666 	inc	dptr
   0372 74 80               667 	mov	a,#0x80
   0374 F0                  668 	movx	@dptr,a
   0375 A3                  669 	inc	dptr
   0376 74 3F               670 	mov	a,#0x3F
   0378 F0                  671 	movx	@dptr,a
   0379 02s00r05r5A         672 	ljmp	00105$
   037D                     673 00104$:
                            674 ;	tancotf.c:68: g = f*f;
   037D 90s00r00r02         675 	mov	dptr,#_tancotf_f_1_1
                            676 ;	genAssign: resultIsFar = TRUE
   0381 75 86 21            677 	mov	dps,#0x21
   0384 90s00r00r00         678 	mov	dptr,#___fsmul_PARM_2
   0388 E0                  679 	movx	a,@dptr
   0389 F0                  680 	movx	@dptr,a
   038A A3                  681 	inc	dptr
   038B A3                  682 	inc	dptr
   038C E0                  683 	movx	a,@dptr
   038D F0                  684 	movx	@dptr,a
   038E A3                  685 	inc	dptr
   038F A3                  686 	inc	dptr
   0390 E0                  687 	movx	a,@dptr
   0391 F0                  688 	movx	@dptr,a
   0392 A3                  689 	inc	dptr
   0393 A3                  690 	inc	dptr
   0394 E0                  691 	movx	a,@dptr
   0395 F0                  692 	movx	@dptr,a
   0396 75 86 01            693 	mov	dps, #1
   0399 90s00r00r02         694 	mov	dptr,#_tancotf_f_1_1
   039D E0                  695 	movx	a,@dptr
   039E F5 82               696 	mov	dpl,a
   03A0 A3                  697 	inc	dptr
   03A1 E0                  698 	movx	a,@dptr
   03A2 F5 83               699 	mov	dph,a
   03A4 A3                  700 	inc	dptr
   03A5 E0                  701 	movx	a,@dptr
   03A6 F5 93               702 	mov	dpx,a
   03A8 A3                  703 	inc	dptr
   03A9 E0                  704 	movx	a,@dptr
   03AA F5 F0               705 	mov	b,a
   03AC 75 86 00            706 	mov	dps,#0
   03AF 12s00r00r00         707 	lcall	___fsmul
   03B3 AA 82               708 	mov	r2,dpl
   03B5 AB 83               709 	mov	r3,dph
   03B7 AC 93               710 	mov	r4,dpx
   03B9 AD F0               711 	mov	r5,b
                            712 ;	genAssign: resultIsFar = TRUE
   03BB 90s00r00r06         713 	mov	dptr,#_tancotf_g_1_1
   03BF EA                  714 	mov	a,r2
   03C0 F0                  715 	movx	@dptr,a
   03C1 A3                  716 	inc	dptr
   03C2 EB                  717 	mov	a,r3
   03C3 F0                  718 	movx	@dptr,a
   03C4 A3                  719 	inc	dptr
   03C5 EC                  720 	mov	a,r4
   03C6 F0                  721 	movx	@dptr,a
   03C7 A3                  722 	inc	dptr
   03C8 ED                  723 	mov	a,r5
   03C9 F0                  724 	movx	@dptr,a
                            725 ;	tancotf.c:69: xnum = P(f,g);
   03CA 90s00r00r06         726 	mov	dptr,#_tancotf_g_1_1
                            727 ;	genAssign: resultIsFar = TRUE
   03CE 75 86 21            728 	mov	dps,#0x21
   03D1 90s00r00r00         729 	mov	dptr,#___fsmul_PARM_2
   03D5 E0                  730 	movx	a,@dptr
   03D6 F0                  731 	movx	@dptr,a
   03D7 A3                  732 	inc	dptr
   03D8 A3                  733 	inc	dptr
   03D9 E0                  734 	movx	a,@dptr
   03DA F0                  735 	movx	@dptr,a
   03DB A3                  736 	inc	dptr
   03DC A3                  737 	inc	dptr
   03DD E0                  738 	movx	a,@dptr
   03DE F0                  739 	movx	@dptr,a
   03DF A3                  740 	inc	dptr
   03E0 A3                  741 	inc	dptr
   03E1 E0                  742 	movx	a,@dptr
   03E2 F0                  743 	movx	@dptr,a
   03E3 75 86 00            744 	mov	dps,#0
   03E6 90 C4 33 B8         745 	mov	dptr,#0xC433B8
   03EA 75 F0 BD            746 	mov	b,#0xBD
   03ED 12s00r00r00         747 	lcall	___fsmul
   03F1 AA 82               748 	mov	r2,dpl
   03F3 AB 83               749 	mov	r3,dph
   03F5 AC 93               750 	mov	r4,dpx
   03F7 AD F0               751 	mov	r5,b
   03F9 90s00r00r02         752 	mov	dptr,#_tancotf_f_1_1
                            753 ;	genAssign: resultIsFar = TRUE
   03FD 75 86 21            754 	mov	dps,#0x21
   0400 90s00r00r00         755 	mov	dptr,#___fsmul_PARM_2
   0404 E0                  756 	movx	a,@dptr
   0405 F0                  757 	movx	@dptr,a
   0406 A3                  758 	inc	dptr
   0407 A3                  759 	inc	dptr
   0408 E0                  760 	movx	a,@dptr
   0409 F0                  761 	movx	@dptr,a
   040A A3                  762 	inc	dptr
   040B A3                  763 	inc	dptr
   040C E0                  764 	movx	a,@dptr
   040D F0                  765 	movx	@dptr,a
   040E A3                  766 	inc	dptr
   040F A3                  767 	inc	dptr
   0410 E0                  768 	movx	a,@dptr
   0411 F0                  769 	movx	@dptr,a
   0412 75 86 00            770 	mov	dps,#0
   0415 8A 82               771 	mov	dpl,r2
   0417 8B 83               772 	mov	dph,r3
   0419 8C 93               773 	mov	dpx,r4
   041B 8D F0               774 	mov	b,r5
   041D 12s00r00r00         775 	lcall	___fsmul
   0421 AA 82               776 	mov	r2,dpl
   0423 AB 83               777 	mov	r3,dph
   0425 AC 93               778 	mov	r4,dpx
   0427 AD F0               779 	mov	r5,b
   0429 90s00r00r02         780 	mov	dptr,#_tancotf_f_1_1
                            781 ;	genAssign: resultIsFar = TRUE
   042D 75 86 21            782 	mov	dps,#0x21
   0430 90s00r00r00         783 	mov	dptr,#___fsadd_PARM_2
   0434 E0                  784 	movx	a,@dptr
   0435 F0                  785 	movx	@dptr,a
   0436 A3                  786 	inc	dptr
   0437 A3                  787 	inc	dptr
   0438 E0                  788 	movx	a,@dptr
   0439 F0                  789 	movx	@dptr,a
   043A A3                  790 	inc	dptr
   043B A3                  791 	inc	dptr
   043C E0                  792 	movx	a,@dptr
   043D F0                  793 	movx	@dptr,a
   043E A3                  794 	inc	dptr
   043F A3                  795 	inc	dptr
   0440 E0                  796 	movx	a,@dptr
   0441 F0                  797 	movx	@dptr,a
   0442 75 86 00            798 	mov	dps,#0
   0445 8A 82               799 	mov	dpl,r2
   0447 8B 83               800 	mov	dph,r3
   0449 8C 93               801 	mov	dpx,r4
   044B 8D F0               802 	mov	b,r5
   044D 12s00r00r00         803 	lcall	___fsadd
   0451 AA 82               804 	mov	r2,dpl
   0453 AB 83               805 	mov	r3,dph
   0455 AC 93               806 	mov	r4,dpx
   0457 AD F0               807 	mov	r5,b
                            808 ;	genAssign: resultIsFar = TRUE
   0459 8A 06               809 	mov	ar6,r2
   045B 8B 07               810 	mov	ar7,r3
   045D 8C 00               811 	mov	ar0,r4
   045F 8D 01               812 	mov	ar1,r5
                            813 ;	tancotf.c:70: xden = Q(g);
   0461 90s00r00r06         814 	mov	dptr,#_tancotf_g_1_1
                            815 ;	genAssign: resultIsFar = TRUE
   0465 75 86 21            816 	mov	dps,#0x21
   0468 90s00r00r00         817 	mov	dptr,#___fsmul_PARM_2
   046C E0                  818 	movx	a,@dptr
   046D F0                  819 	movx	@dptr,a
   046E A3                  820 	inc	dptr
   046F A3                  821 	inc	dptr
   0470 E0                  822 	movx	a,@dptr
   0471 F0                  823 	movx	@dptr,a
   0472 A3                  824 	inc	dptr
   0473 A3                  825 	inc	dptr
   0474 E0                  826 	movx	a,@dptr
   0475 F0                  827 	movx	@dptr,a
   0476 A3                  828 	inc	dptr
   0477 A3                  829 	inc	dptr
   0478 E0                  830 	movx	a,@dptr
   0479 F0                  831 	movx	@dptr,a
   047A 75 86 00            832 	mov	dps,#0
   047D C0 06               833 	push	ar6
   047F C0 07               834 	push	ar7
   0481 C0 00               835 	push	ar0
   0483 C0 01               836 	push	ar1
   0485 90 1F 33 75         837 	mov	dptr,#0x1F3375
   0489 75 F0 3C            838 	mov	b,#0x3C
   048C 12s00r00r00         839 	lcall	___fsmul
   0490 AA 82               840 	mov	r2,dpl
   0492 AB 83               841 	mov	r3,dph
   0494 AC 93               842 	mov	r4,dpx
   0496 AD F0               843 	mov	r5,b
   0498 D0 01               844 	pop	ar1
   049A D0 00               845 	pop	ar0
   049C D0 07               846 	pop	ar7
   049E D0 06               847 	pop	ar6
                            848 ;	genAssign: resultIsFar = TRUE
   04A0 90s00r00r00         849 	mov	dptr,#___fsadd_PARM_2
   04A4 74 AF               850 	mov	a,#0xAF
   04A6 F0                  851 	movx	@dptr,a
   04A7 A3                  852 	inc	dptr
   04A8 74 B7               853 	mov	a,#0xB7
   04AA F0                  854 	movx	@dptr,a
   04AB A3                  855 	inc	dptr
   04AC 74 DB               856 	mov	a,#0xDB
   04AE F0                  857 	movx	@dptr,a
   04AF A3                  858 	inc	dptr
   04B0 74 BE               859 	mov	a,#0xBE
   04B2 F0                  860 	movx	@dptr,a
   04B3 C0 06               861 	push	ar6
   04B5 C0 07               862 	push	ar7
   04B7 C0 00               863 	push	ar0
   04B9 C0 01               864 	push	ar1
   04BB 8A 82               865 	mov	dpl,r2
   04BD 8B 83               866 	mov	dph,r3
   04BF 8C 93               867 	mov	dpx,r4
   04C1 8D F0               868 	mov	b,r5
   04C3 12s00r00r00         869 	lcall	___fsadd
   04C7 AA 82               870 	mov	r2,dpl
   04C9 AB 83               871 	mov	r3,dph
   04CB AC 93               872 	mov	r4,dpx
   04CD AD F0               873 	mov	r5,b
   04CF D0 01               874 	pop	ar1
   04D1 D0 00               875 	pop	ar0
   04D3 D0 07               876 	pop	ar7
   04D5 D0 06               877 	pop	ar6
   04D7 90s00r00r06         878 	mov	dptr,#_tancotf_g_1_1
                            879 ;	genAssign: resultIsFar = TRUE
   04DB 75 86 21            880 	mov	dps,#0x21
   04DE 90s00r00r00         881 	mov	dptr,#___fsmul_PARM_2
   04E2 E0                  882 	movx	a,@dptr
   04E3 F0                  883 	movx	@dptr,a
   04E4 A3                  884 	inc	dptr
   04E5 A3                  885 	inc	dptr
   04E6 E0                  886 	movx	a,@dptr
   04E7 F0                  887 	movx	@dptr,a
   04E8 A3                  888 	inc	dptr
   04E9 A3                  889 	inc	dptr
   04EA E0                  890 	movx	a,@dptr
   04EB F0                  891 	movx	@dptr,a
   04EC A3                  892 	inc	dptr
   04ED A3                  893 	inc	dptr
   04EE E0                  894 	movx	a,@dptr
   04EF F0                  895 	movx	@dptr,a
   04F0 75 86 00            896 	mov	dps,#0
   04F3 C0 06               897 	push	ar6
   04F5 C0 07               898 	push	ar7
   04F7 C0 00               899 	push	ar0
   04F9 C0 01               900 	push	ar1
   04FB 8A 82               901 	mov	dpl,r2
   04FD 8B 83               902 	mov	dph,r3
   04FF 8C 93               903 	mov	dpx,r4
   0501 8D F0               904 	mov	b,r5
   0503 12s00r00r00         905 	lcall	___fsmul
   0507 AA 82               906 	mov	r2,dpl
   0509 AB 83               907 	mov	r3,dph
   050B AC 93               908 	mov	r4,dpx
   050D AD F0               909 	mov	r5,b
   050F D0 01               910 	pop	ar1
   0511 D0 00               911 	pop	ar0
   0513 D0 07               912 	pop	ar7
   0515 D0 06               913 	pop	ar6
                            914 ;	genAssign: resultIsFar = TRUE
   0517 90s00r00r00         915 	mov	dptr,#___fsadd_PARM_2
   051B E4                  916 	clr  a
   051C F0                  917 	movx @dptr,a
   051D A3                  918 	inc  dptr
   051E F0                  919 	movx @dptr,a
   051F A3                  920 	inc	dptr
   0520 74 80               921 	mov	a,#0x80
   0522 F0                  922 	movx	@dptr,a
   0523 A3                  923 	inc	dptr
   0524 74 3F               924 	mov	a,#0x3F
   0526 F0                  925 	movx	@dptr,a
   0527 C0 06               926 	push	ar6
   0529 C0 07               927 	push	ar7
   052B C0 00               928 	push	ar0
   052D C0 01               929 	push	ar1
   052F 8A 82               930 	mov	dpl,r2
   0531 8B 83               931 	mov	dph,r3
   0533 8C 93               932 	mov	dpx,r4
   0535 8D F0               933 	mov	b,r5
   0537 12s00r00r00         934 	lcall	___fsadd
   053B AA 82               935 	mov	r2,dpl
   053D AB 83               936 	mov	r3,dph
   053F AC 93               937 	mov	r4,dpx
   0541 AD F0               938 	mov	r5,b
   0543 D0 01               939 	pop	ar1
   0545 D0 00               940 	pop	ar0
   0547 D0 07               941 	pop	ar7
   0549 D0 06               942 	pop	ar6
                            943 ;	genAssign: resultIsFar = TRUE
   054B 90s00r00r0E         944 	mov	dptr,#_tancotf_xden_1_1
   054F EA                  945 	mov	a,r2
   0550 F0                  946 	movx	@dptr,a
   0551 A3                  947 	inc	dptr
   0552 EB                  948 	mov	a,r3
   0553 F0                  949 	movx	@dptr,a
   0554 A3                  950 	inc	dptr
   0555 EC                  951 	mov	a,r4
   0556 F0                  952 	movx	@dptr,a
   0557 A3                  953 	inc	dptr
   0558 ED                  954 	mov	a,r5
   0559 F0                  955 	movx	@dptr,a
   055A                     956 00105$:
                            957 ;	tancotf.c:73: if(n&1)
   055A 90s00r00r12         958 	mov	dptr,#_tancotf_n_1_1
   055E E0                  959 	movx	a,@dptr
   055F 30 E0 71            960 	jnb  acc.0,00113$
   0562                     961 00128$:
                            962 ;	tancotf.c:76: if(iscotan) return (-xnum/xden);
   0562 90s00r00r00         963 	mov	dptr,#_tancotf_PARM_2
   0566 E0                  964 	movx	a,@dptr
   0567 F5 F0               965 	mov	b,a
   0569 A3                  966 	inc	dptr
   056A E0                  967 	movx	a,@dptr
   056B 45 F0               968 	orl	a,b
   056D 60 36               969 	jz  00107$
   056F                     970 00129$:
   056F 8E 02               971 	mov	ar2,r6
   0571 8F 03               972 	mov	ar3,r7
   0573 88 04               973 	mov	ar4,r0
   0575 E9                  974 	mov	a,r1
   0576 B2 E7               975 	cpl	acc.7
   0578 FD                  976 	mov	r5,a
   0579 90s00r00r0E         977 	mov	dptr,#_tancotf_xden_1_1
                            978 ;	genAssign: resultIsFar = TRUE
   057D 75 86 21            979 	mov	dps,#0x21
   0580 90s00r00r00         980 	mov	dptr,#___fsdiv_PARM_2
   0584 E0                  981 	movx	a,@dptr
   0585 F0                  982 	movx	@dptr,a
   0586 A3                  983 	inc	dptr
   0587 A3                  984 	inc	dptr
   0588 E0                  985 	movx	a,@dptr
   0589 F0                  986 	movx	@dptr,a
   058A A3                  987 	inc	dptr
   058B A3                  988 	inc	dptr
   058C E0                  989 	movx	a,@dptr
   058D F0                  990 	movx	@dptr,a
   058E A3                  991 	inc	dptr
   058F A3                  992 	inc	dptr
   0590 E0                  993 	movx	a,@dptr
   0591 F0                  994 	movx	@dptr,a
   0592 75 86 00            995 	mov	dps,#0
   0595 8A 82               996 	mov	dpl,r2
   0597 8B 83               997 	mov	dph,r3
   0599 8C 93               998 	mov	dpx,r4
   059B 8D F0               999 	mov	b,r5
   059D 12s00r00r00        1000 	lcall	___fsdiv
   05A1 02s00r06r35        1001 	ljmp	00115$
   05A5                    1002 00107$:
                           1003 ;	tancotf.c:77: else return (-xden/xnum);
   05A5 90s00r00r0E        1004 	mov	dptr,#_tancotf_xden_1_1
   05A9 E0                 1005 	movx	a,@dptr
   05AA FA                 1006 	mov	r2,a
   05AB A3                 1007 	inc	dptr
   05AC E0                 1008 	movx	a,@dptr
   05AD FB                 1009 	mov	r3,a
   05AE A3                 1010 	inc	dptr
   05AF E0                 1011 	movx	a,@dptr
   05B0 FC                 1012 	mov	r4,a
   05B1 A3                 1013 	inc	dptr
   05B2 E0                 1014 	movx	a,@dptr
   05B3 B2 E7              1015 	cpl	acc.7
   05B5 FD                 1016 	mov	r5,a
                           1017 ;	genAssign: resultIsFar = TRUE
   05B6 90s00r00r00        1018 	mov	dptr,#___fsdiv_PARM_2
   05BA EE                 1019 	mov	a,r6
   05BB F0                 1020 	movx	@dptr,a
   05BC A3                 1021 	inc	dptr
   05BD EF                 1022 	mov	a,r7
   05BE F0                 1023 	movx	@dptr,a
   05BF A3                 1024 	inc	dptr
   05C0 E8                 1025 	mov	a,r0
   05C1 F0                 1026 	movx	@dptr,a
   05C2 A3                 1027 	inc	dptr
   05C3 E9                 1028 	mov	a,r1
   05C4 F0                 1029 	movx	@dptr,a
   05C5 8A 82              1030 	mov	dpl,r2
   05C7 8B 83              1031 	mov	dph,r3
   05C9 8C 93              1032 	mov	dpx,r4
   05CB 8D F0              1033 	mov	b,r5
   05CD 12s00r00r00        1034 	lcall	___fsdiv
   05D1 80 62              1035 	sjmp 00115$
   05D3                    1036 00113$:
                           1037 ;	tancotf.c:81: if(iscotan) return (xden/xnum);
   05D3 90s00r00r00        1038 	mov	dptr,#_tancotf_PARM_2
   05D7 E0                 1039 	movx	a,@dptr
   05D8 F5 F0              1040 	mov	b,a
   05DA A3                 1041 	inc	dptr
   05DB E0                 1042 	movx	a,@dptr
   05DC 45 F0              1043 	orl	a,b
   05DE 60 2D              1044 	jz  00110$
   05E0                    1045 00130$:
                           1046 ;	genAssign: resultIsFar = TRUE
   05E0 90s00r00r00        1047 	mov	dptr,#___fsdiv_PARM_2
   05E4 EE                 1048 	mov	a,r6
   05E5 F0                 1049 	movx	@dptr,a
   05E6 A3                 1050 	inc	dptr
   05E7 EF                 1051 	mov	a,r7
   05E8 F0                 1052 	movx	@dptr,a
   05E9 A3                 1053 	inc	dptr
   05EA E8                 1054 	mov	a,r0
   05EB F0                 1055 	movx	@dptr,a
   05EC A3                 1056 	inc	dptr
   05ED E9                 1057 	mov	a,r1
   05EE F0                 1058 	movx	@dptr,a
   05EF 05 86              1059 	inc	dps
   05F1 90s00r00r0E        1060 	mov	dptr,#_tancotf_xden_1_1
   05F5 E0                 1061 	movx	a,@dptr
   05F6 F5 82              1062 	mov	dpl,a
   05F8 A3                 1063 	inc	dptr
   05F9 E0                 1064 	movx	a,@dptr
   05FA F5 83              1065 	mov	dph,a
   05FC A3                 1066 	inc	dptr
   05FD E0                 1067 	movx	a,@dptr
   05FE F5 93              1068 	mov	dpx,a
   0600 A3                 1069 	inc	dptr
   0601 E0                 1070 	movx	a,@dptr
   0602 F5 F0              1071 	mov	b,a
   0604 75 86 00           1072 	mov	dps,#0
   0607 12s00r00r00        1073 	lcall	___fsdiv
   060B 80 28              1074 	sjmp 00115$
   060D                    1075 00110$:
                           1076 ;	tancotf.c:82: else return (xnum/xden);
   060D 90s00r00r0E        1077 	mov	dptr,#_tancotf_xden_1_1
                           1078 ;	genAssign: resultIsFar = TRUE
   0611 75 86 21           1079 	mov	dps,#0x21
   0614 90s00r00r00        1080 	mov	dptr,#___fsdiv_PARM_2
   0618 E0                 1081 	movx	a,@dptr
   0619 F0                 1082 	movx	@dptr,a
   061A A3                 1083 	inc	dptr
   061B A3                 1084 	inc	dptr
   061C E0                 1085 	movx	a,@dptr
   061D F0                 1086 	movx	@dptr,a
   061E A3                 1087 	inc	dptr
   061F A3                 1088 	inc	dptr
   0620 E0                 1089 	movx	a,@dptr
   0621 F0                 1090 	movx	@dptr,a
   0622 A3                 1091 	inc	dptr
   0623 A3                 1092 	inc	dptr
   0624 E0                 1093 	movx	a,@dptr
   0625 F0                 1094 	movx	@dptr,a
   0626 75 86 00           1095 	mov	dps,#0
   0629 8E 82              1096 	mov	dpl,r6
   062B 8F 83              1097 	mov	dph,r7
   062D 88 93              1098 	mov	dpx,r0
   062F 89 F0              1099 	mov	b,r1
   0631 12s00r00r00        1100 	lcall	___fsdiv
   0635                    1101 00115$:
   0635 22                 1102 	ret
                           1103 	.area CSEG    (CODE)
                           1104 	.area CONST   (CODE)
                           1105 	.area XINIT   (CODE)
                           1106 	.area CABS    (ABS,CODE)

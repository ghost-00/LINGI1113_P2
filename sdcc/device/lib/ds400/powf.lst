                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:25:33 2013
                              5 ;--------------------------------------------------------
                              6 	.module powf
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _powf_PARM_2
                             31 	.globl _powf
                             32 ;--------------------------------------------------------
                             33 ; special function registers
                             34 ;--------------------------------------------------------
                             35 ;--------------------------------------------------------
                             36 ; special function bits
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; overlayable register banks
                             40 ;--------------------------------------------------------
                             41 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      42 	.ds 8
                             43 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                      44 	.ds 8
                             45 ;--------------------------------------------------------
                             46 ; internal ram data
                             47 ;--------------------------------------------------------
                             48 	.area DSEG    (DATA)
                             49 ;--------------------------------------------------------
                             50 ; overlayable items in internal ram 
                             51 ;--------------------------------------------------------
                             52 	.area OSEG    (OVR,DATA)
                             53 ;--------------------------------------------------------
                             54 ; indirectly addressable internal ram data
                             55 ;--------------------------------------------------------
                             56 	.area ISEG    (DATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute internal ram data
                             59 ;--------------------------------------------------------
                             60 	.area IABS    (ABS,DATA)
                             61 	.area IABS    (ABS,DATA)
                             62 ;--------------------------------------------------------
                             63 ; bit data
                             64 ;--------------------------------------------------------
                             65 	.area BSEG    (BIT)
                             66 ;--------------------------------------------------------
                             67 ; paged external ram data
                             68 ;--------------------------------------------------------
                             69 	.area PSEG    (PAG,XDATA)
                             70 ;--------------------------------------------------------
                             71 ; external ram data
                             72 ;--------------------------------------------------------
                             73 	.area XSEG    (XDATA)
   0000                      74 _powf_PARM_2:
   0000                      75 	.ds 4
                             76 ;--------------------------------------------------------
                             77 ; absolute external ram data
                             78 ;--------------------------------------------------------
                             79 	.area XABS    (ABS,XDATA)
                             80 ;--------------------------------------------------------
                             81 ; external initialized ram data
                             82 ;--------------------------------------------------------
                             83 	.area XISEG   (XDATA)
                             84 ;--------------------------------------------------------
                             85 ; global & static initialisations
                             86 ;--------------------------------------------------------
                             87 	.area HOME    (CODE)
                             88 	.area GSINIT  (CODE)
                             89 	.area GSFINAL (CODE)
                             90 	.area GSINIT  (CODE)
                             91 ;--------------------------------------------------------
                             92 ; Home
                             93 ;--------------------------------------------------------
                             94 	.area HOME    (CODE)
                             95 	.area HOME    (CODE)
                             96 ;--------------------------------------------------------
                             97 ; code
                             98 ;--------------------------------------------------------
                             99 	.area CSEG    (CODE)
                            100 ;------------------------------------------------------------
                            101 ;Allocation info for local variables in function 'powf'
                            102 ;------------------------------------------------------------
                            103 ;y                         Allocated with name '_powf_PARM_2'
                            104 ;x                         Allocated to registers r2 r3 r4 r5 
                            105 ;------------------------------------------------------------
                            106 ;	powf.c:25: float powf(const float x, const float y)
                            107 ;	-----------------------------------------
                            108 ;	 function powf
                            109 ;	-----------------------------------------
   0000                     110 _powf:
                    0002    111 	ar2 = 0x02
                    0003    112 	ar3 = 0x03
                    0004    113 	ar4 = 0x04
                    0005    114 	ar5 = 0x05
                    0006    115 	ar6 = 0x06
                    0007    116 	ar7 = 0x07
                    0000    117 	ar0 = 0x00
                    0001    118 	ar1 = 0x01
   0000 AA 82               119 	mov	r2,dpl
   0002 AB 83               120 	mov	r3,dph
   0004 AC 93               121 	mov	r4,dpx
   0006 AD F0               122 	mov	r5,b
                            123 ;	powf.c:27: if(y == 0.0) return 1.0;
   0008 90s00r00r00         124 	mov	dptr,#_powf_PARM_2
   000C E0                  125 	movx	a,@dptr
   000D F5 F0               126 	mov	b,a
   000F A3                  127 	inc	dptr
   0010 E0                  128 	movx	a,@dptr
   0011 42 F0               129 	orl	b,a
   0013 A3                  130 	inc	dptr
   0014 E0                  131 	movx	a,@dptr
   0015 42 F0               132 	orl	b,a
   0017 A3                  133 	inc	dptr
   0018 E0                  134 	movx	a,@dptr
   0019 45 F0               135 	orl	a,b
   001B 70 0E               136 	jnz  00102$
   001D                     137 00112$:
   001D 90 00 00 00         138 	mov  dptr,#0x0000
   0021 75 93 80            139 	mov	dpx,#0x80
   0024 75 F0 3F            140 	mov	b,#0x3F
   0027 02s00r00rED         141 	ljmp	00107$
   002B                     142 00102$:
                            143 ;	powf.c:28: if(y==1.0) return x;
                            144 ;	genAssign: resultIsFar = TRUE
   002B 90s00r00r00         145 	mov	dptr,#___fseq_PARM_2
   002F E4                  146 	clr  a
   0030 F0                  147 	movx @dptr,a
   0031 A3                  148 	inc  dptr
   0032 F0                  149 	movx @dptr,a
   0033 A3                  150 	inc	dptr
   0034 74 80               151 	mov	a,#0x80
   0036 F0                  152 	movx	@dptr,a
   0037 A3                  153 	inc	dptr
   0038 74 3F               154 	mov	a,#0x3F
   003A F0                  155 	movx	@dptr,a
   003B C0 02               156 	push	ar2
   003D C0 03               157 	push	ar3
   003F C0 04               158 	push	ar4
   0041 C0 05               159 	push	ar5
   0043 05 86               160 	inc	dps
   0045 90s00r00r00         161 	mov	dptr,#_powf_PARM_2
   0049 E0                  162 	movx	a,@dptr
   004A F5 82               163 	mov	dpl,a
   004C A3                  164 	inc	dptr
   004D E0                  165 	movx	a,@dptr
   004E F5 83               166 	mov	dph,a
   0050 A3                  167 	inc	dptr
   0051 E0                  168 	movx	a,@dptr
   0052 F5 93               169 	mov	dpx,a
   0054 A3                  170 	inc	dptr
   0055 E0                  171 	movx	a,@dptr
   0056 F5 F0               172 	mov	b,a
   0058 75 86 00            173 	mov	dps,#0
   005B 12s00r00r00         174 	lcall	___fseq
   005F D0 05               175 	pop	ar5
   0061 D0 04               176 	pop	ar4
   0063 D0 03               177 	pop	ar3
   0065 D0 02               178 	pop	ar2
   0067 E5 82               179 	mov	a,dpl
   0069 60 0C               180 	jz  00104$
   006B                     181 00113$:
   006B 8A 82               182 	mov	dpl,r2
   006D 8B 83               183 	mov	dph,r3
   006F 8C 93               184 	mov	dpx,r4
   0071 8D F0               185 	mov	b,r5
   0073 02s00r00rED         186 	ljmp	00107$
   0077                     187 00104$:
                            188 ;	powf.c:29: if(x <= 0.0) return 0.0;
                            189 ;	genAssign: resultIsFar = TRUE
   0077 90s00r00r00         190 	mov	dptr,#___fsgt_PARM_2
   007B E4                  191 	clr  a
   007C F0                  192 	movx @dptr,a
   007D A3                  193 	inc  dptr
   007E F0                  194 	movx @dptr,a
   007F A3                  195 	inc	dptr
   0080 E4                  196 	clr  a
   0081 F0                  197 	movx @dptr,a
   0082 A3                  198 	inc  dptr
   0083 F0                  199 	movx @dptr,a
   0084 C0 02               200 	push	ar2
   0086 C0 03               201 	push	ar3
   0088 C0 04               202 	push	ar4
   008A C0 05               203 	push	ar5
   008C 8A 82               204 	mov	dpl,r2
   008E 8B 83               205 	mov	dph,r3
   0090 8C 93               206 	mov	dpx,r4
   0092 8D F0               207 	mov	b,r5
   0094 12s00r00r00         208 	lcall	___fsgt
   0098 D0 05               209 	pop	ar5
   009A D0 04               210 	pop	ar4
   009C D0 03               211 	pop	ar3
   009E D0 02               212 	pop	ar2
   00A0 E5 82               213 	mov	a,dpl
   00A2 70 09               214 	jnz  00106$
   00A4                     215 00114$:
   00A4 90 00 00 00         216 	mov  dptr,#0x0000
   00A8 75 F0 00            217 	mov	b,#0x00
   00AB 80 40               218 	sjmp 00107$
   00AD                     219 00106$:
                            220 ;	powf.c:30: return expf(logf(x) * y);
   00AD 8A 82               221 	mov	dpl,r2
   00AF 8B 83               222 	mov	dph,r3
   00B1 8C 93               223 	mov	dpx,r4
   00B3 8D F0               224 	mov	b,r5
   00B5 12s00r00r00         225 	lcall	_logf
   00B9 AA 82               226 	mov	r2,dpl
   00BB AB 83               227 	mov	r3,dph
   00BD AC 93               228 	mov	r4,dpx
   00BF AD F0               229 	mov	r5,b
   00C1 90s00r00r00         230 	mov	dptr,#_powf_PARM_2
                            231 ;	genAssign: resultIsFar = TRUE
   00C5 75 86 21            232 	mov	dps,#0x21
   00C8 90s00r00r00         233 	mov	dptr,#___fsmul_PARM_2
   00CC E0                  234 	movx	a,@dptr
   00CD F0                  235 	movx	@dptr,a
   00CE A3                  236 	inc	dptr
   00CF A3                  237 	inc	dptr
   00D0 E0                  238 	movx	a,@dptr
   00D1 F0                  239 	movx	@dptr,a
   00D2 A3                  240 	inc	dptr
   00D3 A3                  241 	inc	dptr
   00D4 E0                  242 	movx	a,@dptr
   00D5 F0                  243 	movx	@dptr,a
   00D6 A3                  244 	inc	dptr
   00D7 A3                  245 	inc	dptr
   00D8 E0                  246 	movx	a,@dptr
   00D9 F0                  247 	movx	@dptr,a
   00DA 75 86 00            248 	mov	dps,#0
   00DD 8A 82               249 	mov	dpl,r2
   00DF 8B 83               250 	mov	dph,r3
   00E1 8C 93               251 	mov	dpx,r4
   00E3 8D F0               252 	mov	b,r5
   00E5 12s00r00r00         253 	lcall	___fsmul
   00E9 12s00r00r00         254 	lcall	_expf
   00ED                     255 00107$:
   00ED 22                  256 	ret
                            257 	.area CSEG    (CODE)
                            258 	.area CONST   (CODE)
                            259 	.area XINIT   (CODE)
                            260 	.area CABS    (ABS,CODE)

                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:25:32 2013
                              5 ;--------------------------------------------------------
                              6 	.module _fs2slong
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl ___fs2slong
                             31 ;--------------------------------------------------------
                             32 ; special function registers
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; special function bits
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; overlayable register banks
                             39 ;--------------------------------------------------------
                             40 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      41 	.ds 8
                             42 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                      43 	.ds 8
                             44 ;--------------------------------------------------------
                             45 ; internal ram data
                             46 ;--------------------------------------------------------
                             47 	.area DSEG    (DATA)
                             48 ;--------------------------------------------------------
                             49 ; overlayable items in internal ram 
                             50 ;--------------------------------------------------------
                             51 	.area OSEG    (OVR,DATA)
                             52 ;--------------------------------------------------------
                             53 ; indirectly addressable internal ram data
                             54 ;--------------------------------------------------------
                             55 	.area ISEG    (DATA)
                             56 ;--------------------------------------------------------
                             57 ; absolute internal ram data
                             58 ;--------------------------------------------------------
                             59 	.area IABS    (ABS,DATA)
                             60 	.area IABS    (ABS,DATA)
                             61 ;--------------------------------------------------------
                             62 ; bit data
                             63 ;--------------------------------------------------------
                             64 	.area BSEG    (BIT)
                             65 ;--------------------------------------------------------
                             66 ; paged external ram data
                             67 ;--------------------------------------------------------
                             68 	.area PSEG    (PAG,XDATA)
                             69 ;--------------------------------------------------------
                             70 ; external ram data
                             71 ;--------------------------------------------------------
                             72 	.area XSEG    (XDATA)
                             73 ;--------------------------------------------------------
                             74 ; absolute external ram data
                             75 ;--------------------------------------------------------
                             76 	.area XABS    (ABS,XDATA)
                             77 ;--------------------------------------------------------
                             78 ; external initialized ram data
                             79 ;--------------------------------------------------------
                             80 	.area XISEG   (XDATA)
                             81 ;--------------------------------------------------------
                             82 ; global & static initialisations
                             83 ;--------------------------------------------------------
                             84 	.area HOME    (CODE)
                             85 	.area GSINIT  (CODE)
                             86 	.area GSFINAL (CODE)
                             87 	.area GSINIT  (CODE)
                             88 ;--------------------------------------------------------
                             89 ; Home
                             90 ;--------------------------------------------------------
                             91 	.area HOME    (CODE)
                             92 	.area HOME    (CODE)
                             93 ;--------------------------------------------------------
                             94 ; code
                             95 ;--------------------------------------------------------
                             96 	.area CSEG    (CODE)
                             97 ;------------------------------------------------------------
                             98 ;Allocation info for local variables in function '__fs2slong'
                             99 ;------------------------------------------------------------
                            100 ;f                         Allocated to registers r2 r3 r4 r5 
                            101 ;------------------------------------------------------------
                            102 ;	_fs2slong.c:98: signed long __fs2slong (float f)
                            103 ;	-----------------------------------------
                            104 ;	 function __fs2slong
                            105 ;	-----------------------------------------
   0000                     106 ___fs2slong:
                    0002    107 	ar2 = 0x02
                    0003    108 	ar3 = 0x03
                    0004    109 	ar4 = 0x04
                    0005    110 	ar5 = 0x05
                    0006    111 	ar6 = 0x06
                    0007    112 	ar7 = 0x07
                    0000    113 	ar0 = 0x00
                    0001    114 	ar1 = 0x01
   0000 AA 82               115 	mov	r2,dpl
   0002 AB 83               116 	mov	r3,dph
   0004 AC 93               117 	mov	r4,dpx
   0006 AD F0               118 	mov	r5,b
                            119 ;	_fs2slong.c:101: if (!f)
   0008 EA                  120 	mov	a,r2
   0009 4B                  121 	orl	a,r3
   000A 4C                  122 	orl	a,r4
   000B 4D                  123 	orl	a,r5
   000C 70 09               124 	jnz  00102$
   000E                     125 00110$:
                            126 ;	_fs2slong.c:102: return 0;
   000E 90 00 00 00         127 	mov  dptr,#0x0000
   0012 75 F0 00            128 	mov	b,#0x00
   0015 80 6A               129 	sjmp 00106$
   0017                     130 00102$:
                            131 ;	_fs2slong.c:104: if (f<0) {
                            132 ;	genAssign: resultIsFar = TRUE
   0017 90s00r00r00         133 	mov	dptr,#___fslt_PARM_2
   001B E4                  134 	clr  a
   001C F0                  135 	movx @dptr,a
   001D A3                  136 	inc  dptr
   001E F0                  137 	movx @dptr,a
   001F A3                  138 	inc	dptr
   0020 E4                  139 	clr  a
   0021 F0                  140 	movx @dptr,a
   0022 A3                  141 	inc  dptr
   0023 F0                  142 	movx @dptr,a
   0024 C0 02               143 	push	ar2
   0026 C0 03               144 	push	ar3
   0028 C0 04               145 	push	ar4
   002A C0 05               146 	push	ar5
   002C 8A 82               147 	mov	dpl,r2
   002E 8B 83               148 	mov	dph,r3
   0030 8C 93               149 	mov	dpx,r4
   0032 8D F0               150 	mov	b,r5
   0034 12s00r00r00         151 	lcall	___fslt
   0038 D0 05               152 	pop	ar5
   003A D0 04               153 	pop	ar4
   003C D0 03               154 	pop	ar3
   003E D0 02               155 	pop	ar2
   0040 E5 82               156 	mov	a,dpl
   0042 60 31               157 	jz  00104$
   0044                     158 00111$:
                            159 ;	_fs2slong.c:105: return -__fs2ulong(-f);
   0044 8A 06               160 	mov	ar6,r2
   0046 8B 07               161 	mov	ar7,r3
   0048 8C 00               162 	mov	ar0,r4
   004A ED                  163 	mov	a,r5
   004B B2 E7               164 	cpl	acc.7
   004D F9                  165 	mov	r1,a
   004E 8E 82               166 	mov	dpl,r6
   0050 8F 83               167 	mov	dph,r7
   0052 88 93               168 	mov	dpx,r0
   0054 89 F0               169 	mov	b,r1
   0056 12s00r00r00         170 	lcall	___fs2ulong
   005A C3                  171 	clr	c
   005B E4                  172 	clr	a
   005C 95 82               173 	subb	a,dpl
   005E FE                  174 	mov	r6,a
   005F E4                  175 	clr	a
   0060 95 83               176 	subb	a,dph
   0062 FF                  177 	mov	r7,a
   0063 E4                  178 	clr	a
   0064 95 93               179 	subb	a,dpx
   0066 F8                  180 	mov	r0,a
   0067 E4                  181 	clr	a
   0068 95 F0               182 	subb	a,b
   006A F9                  183 	mov	r1,a
   006B 8E 82               184 	mov	dpl,r6
   006D 8F 83               185 	mov	dph,r7
   006F 88 93               186 	mov	dpx,r0
   0071 89 F0               187 	mov	b,r1
   0073 80 0C               188 	sjmp 00106$
   0075                     189 00104$:
                            190 ;	_fs2slong.c:107: return __fs2ulong(f);
   0075 8A 82               191 	mov	dpl,r2
   0077 8B 83               192 	mov	dph,r3
   0079 8C 93               193 	mov	dpx,r4
   007B 8D F0               194 	mov	b,r5
   007D 12s00r00r00         195 	lcall	___fs2ulong
   0081                     196 00106$:
   0081 22                  197 	ret
                            198 	.area CSEG    (CODE)
                            199 	.area CONST   (CODE)
                            200 	.area XINIT   (CODE)
                            201 	.area CABS    (ABS,CODE)

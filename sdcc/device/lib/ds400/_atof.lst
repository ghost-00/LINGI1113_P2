                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:25:32 2013
                              5 ;--------------------------------------------------------
                              6 	.module _atof
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _atof
                             31 ;--------------------------------------------------------
                             32 ; special function registers
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; special function bits
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; overlayable register banks
                             39 ;--------------------------------------------------------
                             40 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      41 	.ds 8
                             42 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                      43 	.ds 8
                             44 ;--------------------------------------------------------
                             45 ; internal ram data
                             46 ;--------------------------------------------------------
                             47 	.area DSEG    (DATA)
                             48 ;--------------------------------------------------------
                             49 ; overlayable items in internal ram 
                             50 ;--------------------------------------------------------
                             51 	.area OSEG    (OVR,DATA)
                             52 ;--------------------------------------------------------
                             53 ; indirectly addressable internal ram data
                             54 ;--------------------------------------------------------
                             55 	.area ISEG    (DATA)
                             56 ;--------------------------------------------------------
                             57 ; absolute internal ram data
                             58 ;--------------------------------------------------------
                             59 	.area IABS    (ABS,DATA)
                             60 	.area IABS    (ABS,DATA)
                             61 ;--------------------------------------------------------
                             62 ; bit data
                             63 ;--------------------------------------------------------
                             64 	.area BSEG    (BIT)
   0000                      65 _atof_sign_1_1:
   0000                      66 	.ds 1
                             67 ;--------------------------------------------------------
                             68 ; paged external ram data
                             69 ;--------------------------------------------------------
                             70 	.area PSEG    (PAG,XDATA)
                             71 ;--------------------------------------------------------
                             72 ; external ram data
                             73 ;--------------------------------------------------------
                             74 	.area XSEG    (XDATA)
   0000                      75 _atof_s_1_1:
   0000                      76 	.ds 4
   0004                      77 _atof_value_1_1:
   0004                      78 	.ds 4
   0008                      79 _atof_fraction_1_1:
   0008                      80 	.ds 4
   000C                      81 _atof_sloc0_1_0:
   000C                      82 	.ds 4
                             83 ;--------------------------------------------------------
                             84 ; absolute external ram data
                             85 ;--------------------------------------------------------
                             86 	.area XABS    (ABS,XDATA)
                             87 ;--------------------------------------------------------
                             88 ; external initialized ram data
                             89 ;--------------------------------------------------------
                             90 	.area XISEG   (XDATA)
                             91 ;--------------------------------------------------------
                             92 ; global & static initialisations
                             93 ;--------------------------------------------------------
                             94 	.area HOME    (CODE)
                             95 	.area GSINIT  (CODE)
                             96 	.area GSFINAL (CODE)
                             97 	.area GSINIT  (CODE)
                             98 ;--------------------------------------------------------
                             99 ; Home
                            100 ;--------------------------------------------------------
                            101 	.area HOME    (CODE)
                            102 	.area HOME    (CODE)
                            103 ;--------------------------------------------------------
                            104 ; code
                            105 ;--------------------------------------------------------
                            106 	.area CSEG    (CODE)
                            107 ;------------------------------------------------------------
                            108 ;Allocation info for local variables in function 'atof'
                            109 ;------------------------------------------------------------
                            110 ;s                         Allocated with name '_atof_s_1_1'
                            111 ;value                     Allocated with name '_atof_value_1_1'
                            112 ;fraction                  Allocated with name '_atof_fraction_1_1'
                            113 ;iexp                      Allocated to registers r2 
                            114 ;sloc0                     Allocated with name '_atof_sloc0_1_0'
                            115 ;sloc1                     Allocated with name '_atof_sloc1_1_0'
                            116 ;------------------------------------------------------------
                            117 ;	_atof.c:23: float atof(char * s)
                            118 ;	-----------------------------------------
                            119 ;	 function atof
                            120 ;	-----------------------------------------
   0000                     121 _atof:
                    0002    122 	ar2 = 0x02
                    0003    123 	ar3 = 0x03
                    0004    124 	ar4 = 0x04
                    0005    125 	ar5 = 0x05
                    0006    126 	ar6 = 0x06
                    0007    127 	ar7 = 0x07
                    0000    128 	ar0 = 0x00
                    0001    129 	ar1 = 0x01
   0000 75 86 01            130 	mov     dps, #1
   0003 90s00r00r00         131 	mov     dptr, #_atof_s_1_1
   0007 E5 82               132 	mov	a,dpl
   0009 F0                  133 	movx	@dptr,a
   000A A3                  134 	inc	dptr
   000B E5 83               135 	mov	a,dph
   000D F0                  136 	movx	@dptr,a
   000E A3                  137 	inc	dptr
   000F E5 93               138 	mov	a,dpx
   0011 F0                  139 	movx	@dptr,a
   0012 A3                  140 	inc	dptr
   0013 E5 F0               141 	mov	a,b
   0015 F0                  142 	movx	@dptr,a
   0016 75 86 00            143 	mov	dps,#0
                            144 ;	_atof.c:30: while (isspace(*s)) s++;
   0019 90s00r00r00         145 	mov	dptr,#_atof_s_1_1
                            146 ;	genAssign: resultIsFar = FALSE
   001D E0                  147 	movx	a,@dptr
   001E FA                  148 	mov	r2,a
   001F A3                  149 	inc	dptr
   0020 E0                  150 	movx	a,@dptr
   0021 FB                  151 	mov	r3,a
   0022 A3                  152 	inc	dptr
   0023 E0                  153 	movx	a,@dptr
   0024 FC                  154 	mov	r4,a
   0025 A3                  155 	inc	dptr
   0026 E0                  156 	movx	a,@dptr
   0027 FD                  157 	mov	r5,a
   0028                     158 00101$:
   0028 8A 82               159 	mov	dpl,r2
   002A 8B 83               160 	mov	dph,r3
   002C 8C 93               161 	mov	dpx,r4
   002E 8D F0               162 	mov	b,r5
   0030 12s00r00r00         163 	lcall	__gptrget
   0034 FE                  164 	mov	r6,a
   0035 C0 02               165 	push	ar2
   0037 C0 03               166 	push	ar3
   0039 C0 04               167 	push	ar4
   003B C0 05               168 	push	ar5
   003D 8E 82               169 	mov	dpl,r6
   003F 12s00r00r00         170 	lcall	_isspace
   0043 D0 05               171 	pop	ar5
   0045 D0 04               172 	pop	ar4
   0047 D0 03               173 	pop	ar3
   0049 D0 02               174 	pop	ar2
   004B E5 82               175 	mov	a,dpl
   004D 60 0B               176 	jz  00148$
   004F                     177 00151$:
   004F 0A                  178 	inc	r2
   0050 BA 00 D5            179 	cjne	r2,#0,00101$
   0053 0B                  180 	inc	r3
   0054 BB 00 D1            181 	cjne	r3,#0,00101$
   0057 0C                  182 	inc	r4
   0058 80 CE               183 	sjmp 00101$
   005A                     184 00148$:
                            185 ;	genAssign: resultIsFar = TRUE
   005A 90s00r00r00         186 	mov	dptr,#_atof_s_1_1
   005E EA                  187 	mov	a,r2
   005F F0                  188 	movx	@dptr,a
   0060 A3                  189 	inc	dptr
   0061 EB                  190 	mov	a,r3
   0062 F0                  191 	movx	@dptr,a
   0063 A3                  192 	inc	dptr
   0064 EC                  193 	mov	a,r4
   0065 F0                  194 	movx	@dptr,a
   0066 A3                  195 	inc	dptr
   0067 ED                  196 	mov	a,r5
   0068 F0                  197 	movx	@dptr,a
                            198 ;	_atof.c:33: if (*s == '-')
   0069 8A 82               199 	mov	dpl,r2
   006B 8B 83               200 	mov	dph,r3
   006D 8C 93               201 	mov	dpx,r4
   006F 8D F0               202 	mov	b,r5
   0071 12s00r00r00         203 	lcall	__gptrget
   0075 FE                  204 	mov  r6,a
   0076 B4 2D 17            205 	cjne a,#0x2D,00107$
   0079                     206 00153$:
                            207 ;	_atof.c:35: sign=1;
                            208 ;	genAssign: resultIsFar = FALSE
   0079 D2*00               209 	setb	_atof_sign_1_1
                            210 ;	_atof.c:36: s++;
   007B 90s00r00r00         211 	mov	dptr,#_atof_s_1_1
   007F 74 01               212 	mov	a,#0x01
   0081 2A                  213 	add	a,r2
   0082 F0                  214 	movx	@dptr,a
   0083 E4                  215 	clr  a
   0084 3B                  216 	addc	a,r3
   0085 A3                  217 	inc	dptr
   0086 F0                  218 	movx	@dptr,a
   0087 E4                  219 	clr  a
   0088 3C                  220 	addc	a,r4
   0089 A3                  221 	inc	dptr
   008A F0                  222 	movx	@dptr,a
   008B A3                  223 	inc	dptr
   008C ED                  224 	mov	a,r5
   008D F0                  225 	movx	@dptr,a
   008E 80 19               226 	sjmp 00108$
   0090                     227 00107$:
                            228 ;	_atof.c:40: sign=0;
                            229 ;	genAssign: resultIsFar = FALSE
   0090 C2*00               230 	clr	_atof_sign_1_1
                            231 ;	_atof.c:41: if (*s == '+') s++;
   0092 EE                  232 	mov	a,r6
   0093 B4 2B 13            233 	cjne a,#0x2B,00108$
   0096                     234 00155$:
   0096 90s00r00r00         235 	mov	dptr,#_atof_s_1_1
   009A 74 01               236 	mov	a,#0x01
   009C 2A                  237 	add	a,r2
   009D F0                  238 	movx	@dptr,a
   009E E4                  239 	clr  a
   009F 3B                  240 	addc	a,r3
   00A0 A3                  241 	inc	dptr
   00A1 F0                  242 	movx	@dptr,a
   00A2 E4                  243 	clr  a
   00A3 3C                  244 	addc	a,r4
   00A4 A3                  245 	inc	dptr
   00A5 F0                  246 	movx	@dptr,a
   00A6 A3                  247 	inc	dptr
   00A7 ED                  248 	mov	a,r5
   00A8 F0                  249 	movx	@dptr,a
   00A9                     250 00108$:
                            251 ;	_atof.c:45: for (value=0.0; isdigit(*s); s++)
                            252 ;	genAssign: resultIsFar = TRUE
   00A9 90s00r00r04         253 	mov	dptr,#_atof_value_1_1
   00AD E4                  254 	clr  a
   00AE F0                  255 	movx @dptr,a
   00AF A3                  256 	inc  dptr
   00B0 F0                  257 	movx @dptr,a
   00B1 A3                  258 	inc	dptr
   00B2 E4                  259 	clr  a
   00B3 F0                  260 	movx @dptr,a
   00B4 A3                  261 	inc  dptr
   00B5 F0                  262 	movx @dptr,a
   00B6 90s00r00r00         263 	mov	dptr,#_atof_s_1_1
                            264 ;	genAssign: resultIsFar = TRUE
   00BA 75 86 21            265 	mov	dps,#0x21
   00BD 90s00r00r0C         266 	mov	dptr,#_atof_sloc0_1_0
   00C1 E0                  267 	movx	a,@dptr
   00C2 F0                  268 	movx	@dptr,a
   00C3 A3                  269 	inc	dptr
   00C4 A3                  270 	inc	dptr
   00C5 E0                  271 	movx	a,@dptr
   00C6 F0                  272 	movx	@dptr,a
   00C7 A3                  273 	inc	dptr
   00C8 A3                  274 	inc	dptr
   00C9 E0                  275 	movx	a,@dptr
   00CA F0                  276 	movx	@dptr,a
   00CB A3                  277 	inc	dptr
   00CC A3                  278 	inc	dptr
   00CD E0                  279 	movx	a,@dptr
   00CE F0                  280 	movx	@dptr,a
   00CF 75 86 00            281 	mov	dps,#0
   00D2                     282 00121$:
   00D2 75 86 01            283 	mov     dps, #1
   00D5 90s00r00r0C         284 	mov     dptr, #_atof_sloc0_1_0
   00D9 E0                  285 	movx	a,@dptr
   00DA F5 82               286 	mov	dpl,a
   00DC A3                  287 	inc	dptr
   00DD E0                  288 	movx	a,@dptr
   00DE F5 83               289 	mov	dph,a
   00E0 A3                  290 	inc	dptr
   00E1 E0                  291 	movx	a,@dptr
   00E2 F5 93               292 	mov	dpx,a
   00E4 A3                  293 	inc	dptr
   00E5 E0                  294 	movx	a,@dptr
   00E6 F5 F0               295 	mov	b,a
   00E8 75 86 00            296 	mov	dps,#0
   00EB 12s00r00r00         297 	lcall	__gptrget
   00EF FE                  298 	mov	r6,a
   00F0 8E 82               299 	mov	dpl,r6
   00F2 12s00r00r00         300 	lcall	_isdigit
   00F6 E5 82               301 	mov	a,dpl
   00F8 70 04               302 	jnz	00156$
   00FA 02s00r01rD2         303 	ljmp	00149$
   00FE                     304 00156$:
                            305 ;	_atof.c:47: value=10.0*value+(*s-'0');
   00FE 90s00r00r04         306 	mov	dptr,#_atof_value_1_1
                            307 ;	genAssign: resultIsFar = TRUE
   0102 75 86 21            308 	mov	dps,#0x21
   0105 90s00r00r00         309 	mov	dptr,#___fsmul_PARM_2
   0109 E0                  310 	movx	a,@dptr
   010A F0                  311 	movx	@dptr,a
   010B A3                  312 	inc	dptr
   010C A3                  313 	inc	dptr
   010D E0                  314 	movx	a,@dptr
   010E F0                  315 	movx	@dptr,a
   010F A3                  316 	inc	dptr
   0110 A3                  317 	inc	dptr
   0111 E0                  318 	movx	a,@dptr
   0112 F0                  319 	movx	@dptr,a
   0113 A3                  320 	inc	dptr
   0114 A3                  321 	inc	dptr
   0115 E0                  322 	movx	a,@dptr
   0116 F0                  323 	movx	@dptr,a
   0117 75 86 00            324 	mov	dps,#0
   011A 90 00 00 00         325 	mov  dptr,#0x0000
   011E 75 93 20            326 	mov	dpx,#0x20
   0121 75 F0 41            327 	mov	b,#0x41
   0124 12s00r00r00         328 	lcall	___fsmul
   0128 AE 82               329 	mov	r6,dpl
   012A AF 83               330 	mov	r7,dph
   012C A8 93               331 	mov	r0,dpx
   012E A9 F0               332 	mov	r1,b
   0130 75 86 01            333 	mov     dps, #1
   0133 90s00r00r0C         334 	mov     dptr, #_atof_sloc0_1_0
   0137 E0                  335 	movx	a,@dptr
   0138 F5 82               336 	mov	dpl,a
   013A A3                  337 	inc	dptr
   013B E0                  338 	movx	a,@dptr
   013C F5 83               339 	mov	dph,a
   013E A3                  340 	inc	dptr
   013F E0                  341 	movx	a,@dptr
   0140 F5 93               342 	mov	dpx,a
   0142 A3                  343 	inc	dptr
   0143 E0                  344 	movx	a,@dptr
   0144 F5 F0               345 	mov	b,a
   0146 75 86 00            346 	mov	dps,#0
   0149 12s00r00r00         347 	lcall	__gptrget
   014D FA                  348 	mov	r2,a
   014E A3                  349 	inc	dptr
   014F 05 86               350 	inc	dps
   0151 12s00r00r00         351 	lcall	__decdptr
   0155 12s00r00r00         352 	lcall	__decdptr
   0159 12s00r00r00         353 	lcall	__decdptr
   015D E5 82               354 	mov	a,dpl
   015F F0                  355 	movx	@dptr,a
   0160 A3                  356 	inc	dptr
   0161 E5 83               357 	mov	a,dph
   0163 F0                  358 	movx	@dptr,a
   0164 A3                  359 	inc	dptr
   0165 E5 93               360 	mov	a,dpx
   0167 F0                  361 	movx	@dptr,a
   0168 A3                  362 	inc	dptr
   0169 E5 F0               363 	mov	a,b
   016B F0                  364 	movx	@dptr,a
   016C 75 86 00            365 	mov	dps,#0
   016F EA                  366 	mov	a,r2
   0170 33                  367 	rlc	a
   0171 95 E0               368 	subb	a,acc
   0173 FB                  369 	mov	r3,a
   0174 EA                  370 	mov	a,r2
   0175 24 D0               371 	add	a,#0xD0
   0177 FA                  372 	mov	r2,a
   0178 EB                  373 	mov	a,r3
   0179 34 FF               374 	addc	a,#0xFF
   017B FB                  375 	mov	r3,a
   017C C0 06               376 	push	ar6
   017E C0 07               377 	push	ar7
   0180 C0 00               378 	push	ar0
   0182 C0 01               379 	push	ar1
   0184 8A 82               380 	mov	dpl,r2
   0186 8B 83               381 	mov	dph,r3
   0188 12s00r00r00         382 	lcall	___sint2fs
   018C AA 82               383 	mov	r2,dpl
   018E AB 83               384 	mov	r3,dph
   0190 AC 93               385 	mov	r4,dpx
   0192 AD F0               386 	mov	r5,b
   0194 D0 01               387 	pop	ar1
   0196 D0 00               388 	pop	ar0
   0198 D0 07               389 	pop	ar7
   019A D0 06               390 	pop	ar6
                            391 ;	genAssign: resultIsFar = TRUE
   019C 90s00r00r00         392 	mov	dptr,#___fsadd_PARM_2
   01A0 EA                  393 	mov	a,r2
   01A1 F0                  394 	movx	@dptr,a
   01A2 A3                  395 	inc	dptr
   01A3 EB                  396 	mov	a,r3
   01A4 F0                  397 	movx	@dptr,a
   01A5 A3                  398 	inc	dptr
   01A6 EC                  399 	mov	a,r4
   01A7 F0                  400 	movx	@dptr,a
   01A8 A3                  401 	inc	dptr
   01A9 ED                  402 	mov	a,r5
   01AA F0                  403 	movx	@dptr,a
   01AB 8E 82               404 	mov	dpl,r6
   01AD 8F 83               405 	mov	dph,r7
   01AF 88 93               406 	mov	dpx,r0
   01B1 89 F0               407 	mov	b,r1
   01B3 12s00r00r00         408 	lcall	___fsadd
   01B7 AA 82               409 	mov	r2,dpl
   01B9 AB 83               410 	mov	r3,dph
   01BB AC 93               411 	mov	r4,dpx
   01BD AD F0               412 	mov	r5,b
                            413 ;	genAssign: resultIsFar = TRUE
   01BF 90s00r00r04         414 	mov	dptr,#_atof_value_1_1
   01C3 EA                  415 	mov	a,r2
   01C4 F0                  416 	movx	@dptr,a
   01C5 A3                  417 	inc	dptr
   01C6 EB                  418 	mov	a,r3
   01C7 F0                  419 	movx	@dptr,a
   01C8 A3                  420 	inc	dptr
   01C9 EC                  421 	mov	a,r4
   01CA F0                  422 	movx	@dptr,a
   01CB A3                  423 	inc	dptr
   01CC ED                  424 	mov	a,r5
   01CD F0                  425 	movx	@dptr,a
                            426 ;	_atof.c:45: for (value=0.0; isdigit(*s); s++)
   01CE 02s00r00rD2         427 	ljmp	00121$
   01D2                     428 00149$:
   01D2 90s00r00r0C         429 	mov	dptr,#_atof_sloc0_1_0
                            430 ;	genAssign: resultIsFar = TRUE
   01D6 75 86 21            431 	mov	dps,#0x21
   01D9 90s00r00r00         432 	mov	dptr,#_atof_s_1_1
   01DD E0                  433 	movx	a,@dptr
   01DE F0                  434 	movx	@dptr,a
   01DF A3                  435 	inc	dptr
   01E0 A3                  436 	inc	dptr
   01E1 E0                  437 	movx	a,@dptr
   01E2 F0                  438 	movx	@dptr,a
   01E3 A3                  439 	inc	dptr
   01E4 A3                  440 	inc	dptr
   01E5 E0                  441 	movx	a,@dptr
   01E6 F0                  442 	movx	@dptr,a
   01E7 A3                  443 	inc	dptr
   01E8 A3                  444 	inc	dptr
   01E9 E0                  445 	movx	a,@dptr
   01EA F0                  446 	movx	@dptr,a
                            447 ;	_atof.c:51: if (*s == '.')
   01EB 75 86 01            448 	mov     dps, #1
   01EE 90s00r00r0C         449 	mov     dptr, #_atof_sloc0_1_0
   01F2 E0                  450 	movx	a,@dptr
   01F3 F5 82               451 	mov	dpl,a
   01F5 A3                  452 	inc	dptr
   01F6 E0                  453 	movx	a,@dptr
   01F7 F5 83               454 	mov	dph,a
   01F9 A3                  455 	inc	dptr
   01FA E0                  456 	movx	a,@dptr
   01FB F5 93               457 	mov	dpx,a
   01FD A3                  458 	inc	dptr
   01FE E0                  459 	movx	a,@dptr
   01FF F5 F0               460 	mov	b,a
   0201 75 86 00            461 	mov	dps,#0
   0204 12s00r00r00         462 	lcall	__gptrget
   0208 FA                  463 	mov  r2,a
   0209 B4 2E 02            464 	cjne	a,#0x2E,00157$
   020C 80 04               465 	sjmp	00158$
   020E                     466 00157$:
   020E 02s00r03rC7         467 	ljmp	00110$
   0212                     468 00158$:
                            469 ;	_atof.c:53: s++;
   0212 90s00r00r0C         470 	mov	dptr,#_atof_sloc0_1_0
   0216 75 86 01            471 	mov	dps, #1
   0219 90s00r00r00         472 	mov	dptr, #_atof_s_1_1
   021D 15 86               473 	dec	dps
   021F E0                  474 	movx	a,@dptr
   0220 24 01               475 	add	a,#0x01
   0222 05 86               476 	inc	dps
   0224 F0                  477 	movx	@dptr,a
   0225 15 86               478 	dec	dps
   0227 A3                  479 	inc	dptr
   0228 E0                  480 	movx	a,@dptr
   0229 34 00               481 	addc	a,#0x00
   022B 05 86               482 	inc	dps
   022D A3                  483 	inc	dptr
   022E F0                  484 	movx	@dptr,a
   022F 15 86               485 	dec	dps
   0231 A3                  486 	inc	dptr
   0232 E0                  487 	movx	a,@dptr
   0233 34 00               488 	addc	a,#0x00
   0235 05 86               489 	inc	dps
   0237 A3                  490 	inc	dptr
   0238 F0                  491 	movx	@dptr,a
   0239 75 86 00            492 	mov	dps,#0
   023C A3                  493 	inc	dptr
   023D E0                  494 	movx	a,@dptr
   023E 75 86 01            495 	mov	dps,#1
   0241 A3                  496 	inc	dptr
   0242 F0                  497 	movx	@dptr,a
   0243 75 86 00            498 	mov	dps,#0
                            499 ;	_atof.c:54: for (fraction=0.1; isdigit(*s); s++)
                            500 ;	genAssign: resultIsFar = TRUE
   0246 90s00r00r08         501 	mov	dptr,#_atof_fraction_1_1
   024A 74 CD               502 	mov	a,#0xCD
   024C F0                  503 	movx	@dptr,a
   024D A3                  504 	inc	dptr
   024E 74 CC               505 	mov  a,#0xCC
   0250 F0                  506 	movx @dptr,a
   0251 A3                  507 	inc  dptr
   0252 F0                  508 	movx @dptr,a
   0253 A3                  509 	inc	dptr
   0254 74 3D               510 	mov	a,#0x3D
   0256 F0                  511 	movx	@dptr,a
   0257 90s00r00r00         512 	mov	dptr,#_atof_s_1_1
                            513 ;	genAssign: resultIsFar = FALSE
   025B E0                  514 	movx	a,@dptr
   025C FA                  515 	mov	r2,a
   025D A3                  516 	inc	dptr
   025E E0                  517 	movx	a,@dptr
   025F FB                  518 	mov	r3,a
   0260 A3                  519 	inc	dptr
   0261 E0                  520 	movx	a,@dptr
   0262 FC                  521 	mov	r4,a
   0263 A3                  522 	inc	dptr
   0264 E0                  523 	movx	a,@dptr
   0265 FD                  524 	mov	r5,a
   0266                     525 00125$:
   0266 8A 82               526 	mov	dpl,r2
   0268 8B 83               527 	mov	dph,r3
   026A 8C 93               528 	mov	dpx,r4
   026C 8D F0               529 	mov	b,r5
   026E 12s00r00r00         530 	lcall	__gptrget
   0272 FE                  531 	mov	r6,a
   0273 C0 02               532 	push	ar2
   0275 C0 03               533 	push	ar3
   0277 C0 04               534 	push	ar4
   0279 C0 05               535 	push	ar5
   027B 8E 82               536 	mov	dpl,r6
   027D 12s00r00r00         537 	lcall	_isdigit
   0281 D0 05               538 	pop	ar5
   0283 D0 04               539 	pop	ar4
   0285 D0 03               540 	pop	ar3
   0287 D0 02               541 	pop	ar2
   0289 E5 82               542 	mov	a,dpl
   028B 70 04               543 	jnz	00159$
   028D 02s00r03rB8         544 	ljmp	00150$
   0291                     545 00159$:
                            546 ;	_atof.c:56: value+=(*s-'0')*fraction;
   0291 8A 82               547 	mov	dpl,r2
   0293 8B 83               548 	mov	dph,r3
   0295 8C 93               549 	mov	dpx,r4
   0297 8D F0               550 	mov	b,r5
   0299 12s00r00r00         551 	lcall	__gptrget
   029D FE                  552 	mov	r6,a
   029E A3                  553 	inc	dptr
   029F AA 82               554 	mov	r2,dpl
   02A1 AB 83               555 	mov	r3,dph
   02A3 AC 93               556 	mov	r4,dpx
   02A5 AD F0               557 	mov	r5,b
   02A7 EE                  558 	mov	a,r6
   02A8 33                  559 	rlc	a
   02A9 95 E0               560 	subb	a,acc
   02AB FF                  561 	mov	r7,a
   02AC EE                  562 	mov	a,r6
   02AD 24 D0               563 	add	a,#0xD0
   02AF FE                  564 	mov	r6,a
   02B0 EF                  565 	mov	a,r7
   02B1 34 FF               566 	addc	a,#0xFF
   02B3 FF                  567 	mov	r7,a
   02B4 C0 02               568 	push	ar2
   02B6 C0 03               569 	push	ar3
   02B8 C0 04               570 	push	ar4
   02BA C0 05               571 	push	ar5
   02BC 8E 82               572 	mov	dpl,r6
   02BE 8F 83               573 	mov	dph,r7
   02C0 12s00r00r00         574 	lcall	___sint2fs
   02C4 AE 82               575 	mov	r6,dpl
   02C6 AF 83               576 	mov	r7,dph
   02C8 A8 93               577 	mov	r0,dpx
   02CA A9 F0               578 	mov	r1,b
   02CC D0 05               579 	pop	ar5
   02CE D0 04               580 	pop	ar4
   02D0 D0 03               581 	pop	ar3
   02D2 D0 02               582 	pop	ar2
   02D4 90s00r00r08         583 	mov	dptr,#_atof_fraction_1_1
                            584 ;	genAssign: resultIsFar = TRUE
   02D8 75 86 21            585 	mov	dps,#0x21
   02DB 90s00r00r00         586 	mov	dptr,#___fsmul_PARM_2
   02DF E0                  587 	movx	a,@dptr
   02E0 F0                  588 	movx	@dptr,a
   02E1 A3                  589 	inc	dptr
   02E2 A3                  590 	inc	dptr
   02E3 E0                  591 	movx	a,@dptr
   02E4 F0                  592 	movx	@dptr,a
   02E5 A3                  593 	inc	dptr
   02E6 A3                  594 	inc	dptr
   02E7 E0                  595 	movx	a,@dptr
   02E8 F0                  596 	movx	@dptr,a
   02E9 A3                  597 	inc	dptr
   02EA A3                  598 	inc	dptr
   02EB E0                  599 	movx	a,@dptr
   02EC F0                  600 	movx	@dptr,a
   02ED 75 86 00            601 	mov	dps,#0
   02F0 C0 02               602 	push	ar2
   02F2 C0 03               603 	push	ar3
   02F4 C0 04               604 	push	ar4
   02F6 C0 05               605 	push	ar5
   02F8 8E 82               606 	mov	dpl,r6
   02FA 8F 83               607 	mov	dph,r7
   02FC 88 93               608 	mov	dpx,r0
   02FE 89 F0               609 	mov	b,r1
   0300 12s00r00r00         610 	lcall	___fsmul
   0304 AE 82               611 	mov	r6,dpl
   0306 AF 83               612 	mov	r7,dph
   0308 A8 93               613 	mov	r0,dpx
   030A A9 F0               614 	mov	r1,b
   030C D0 05               615 	pop	ar5
   030E D0 04               616 	pop	ar4
   0310 D0 03               617 	pop	ar3
   0312 D0 02               618 	pop	ar2
                            619 ;	genAssign: resultIsFar = TRUE
   0314 90s00r00r00         620 	mov	dptr,#___fsadd_PARM_2
   0318 EE                  621 	mov	a,r6
   0319 F0                  622 	movx	@dptr,a
   031A A3                  623 	inc	dptr
   031B EF                  624 	mov	a,r7
   031C F0                  625 	movx	@dptr,a
   031D A3                  626 	inc	dptr
   031E E8                  627 	mov	a,r0
   031F F0                  628 	movx	@dptr,a
   0320 A3                  629 	inc	dptr
   0321 E9                  630 	mov	a,r1
   0322 F0                  631 	movx	@dptr,a
   0323 C0 02               632 	push	ar2
   0325 C0 03               633 	push	ar3
   0327 C0 04               634 	push	ar4
   0329 C0 05               635 	push	ar5
   032B 05 86               636 	inc	dps
   032D 90s00r00r04         637 	mov	dptr,#_atof_value_1_1
   0331 E0                  638 	movx	a,@dptr
   0332 F5 82               639 	mov	dpl,a
   0334 A3                  640 	inc	dptr
   0335 E0                  641 	movx	a,@dptr
   0336 F5 83               642 	mov	dph,a
   0338 A3                  643 	inc	dptr
   0339 E0                  644 	movx	a,@dptr
   033A F5 93               645 	mov	dpx,a
   033C A3                  646 	inc	dptr
   033D E0                  647 	movx	a,@dptr
   033E F5 F0               648 	mov	b,a
   0340 75 86 00            649 	mov	dps,#0
   0343 12s00r00r00         650 	lcall	___fsadd
   0347 AE 82               651 	mov	r6,dpl
   0349 AF 83               652 	mov	r7,dph
   034B A8 93               653 	mov	r0,dpx
   034D A9 F0               654 	mov	r1,b
   034F D0 05               655 	pop	ar5
   0351 D0 04               656 	pop	ar4
   0353 D0 03               657 	pop	ar3
   0355 D0 02               658 	pop	ar2
                            659 ;	genAssign: resultIsFar = TRUE
   0357 90s00r00r04         660 	mov	dptr,#_atof_value_1_1
   035B EE                  661 	mov	a,r6
   035C F0                  662 	movx	@dptr,a
   035D A3                  663 	inc	dptr
   035E EF                  664 	mov	a,r7
   035F F0                  665 	movx	@dptr,a
   0360 A3                  666 	inc	dptr
   0361 E8                  667 	mov	a,r0
   0362 F0                  668 	movx	@dptr,a
   0363 A3                  669 	inc	dptr
   0364 E9                  670 	mov	a,r1
   0365 F0                  671 	movx	@dptr,a
                            672 ;	_atof.c:57: fraction*=0.1;
   0366 90s00r00r08         673 	mov	dptr,#_atof_fraction_1_1
                            674 ;	genAssign: resultIsFar = TRUE
   036A 75 86 21            675 	mov	dps,#0x21
   036D 90s00r00r00         676 	mov	dptr,#___fsmul_PARM_2
   0371 E0                  677 	movx	a,@dptr
   0372 F0                  678 	movx	@dptr,a
   0373 A3                  679 	inc	dptr
   0374 A3                  680 	inc	dptr
   0375 E0                  681 	movx	a,@dptr
   0376 F0                  682 	movx	@dptr,a
   0377 A3                  683 	inc	dptr
   0378 A3                  684 	inc	dptr
   0379 E0                  685 	movx	a,@dptr
   037A F0                  686 	movx	@dptr,a
   037B A3                  687 	inc	dptr
   037C A3                  688 	inc	dptr
   037D E0                  689 	movx	a,@dptr
   037E F0                  690 	movx	@dptr,a
   037F 75 86 00            691 	mov	dps,#0
   0382 C0 02               692 	push	ar2
   0384 C0 03               693 	push	ar3
   0386 C0 04               694 	push	ar4
   0388 C0 05               695 	push	ar5
   038A 90 CC CC CD         696 	mov	dptr,#0xCCCCCD
   038E 75 F0 3D            697 	mov	b,#0x3D
   0391 12s00r00r00         698 	lcall	___fsmul
   0395 AE 82               699 	mov	r6,dpl
   0397 AF 83               700 	mov	r7,dph
   0399 A8 93               701 	mov	r0,dpx
   039B A9 F0               702 	mov	r1,b
   039D D0 05               703 	pop	ar5
   039F D0 04               704 	pop	ar4
   03A1 D0 03               705 	pop	ar3
   03A3 D0 02               706 	pop	ar2
                            707 ;	genAssign: resultIsFar = TRUE
   03A5 90s00r00r08         708 	mov	dptr,#_atof_fraction_1_1
   03A9 EE                  709 	mov	a,r6
   03AA F0                  710 	movx	@dptr,a
   03AB A3                  711 	inc	dptr
   03AC EF                  712 	mov	a,r7
   03AD F0                  713 	movx	@dptr,a
   03AE A3                  714 	inc	dptr
   03AF E8                  715 	mov	a,r0
   03B0 F0                  716 	movx	@dptr,a
   03B1 A3                  717 	inc	dptr
   03B2 E9                  718 	mov	a,r1
   03B3 F0                  719 	movx	@dptr,a
                            720 ;	_atof.c:54: for (fraction=0.1; isdigit(*s); s++)
   03B4 02s00r02r66         721 	ljmp	00125$
   03B8                     722 00150$:
                            723 ;	genAssign: resultIsFar = TRUE
   03B8 90s00r00r00         724 	mov	dptr,#_atof_s_1_1
   03BC EA                  725 	mov	a,r2
   03BD F0                  726 	movx	@dptr,a
   03BE A3                  727 	inc	dptr
   03BF EB                  728 	mov	a,r3
   03C0 F0                  729 	movx	@dptr,a
   03C1 A3                  730 	inc	dptr
   03C2 EC                  731 	mov	a,r4
   03C3 F0                  732 	movx	@dptr,a
   03C4 A3                  733 	inc	dptr
   03C5 ED                  734 	mov	a,r5
   03C6 F0                  735 	movx	@dptr,a
   03C7                     736 00110$:
                            737 ;	_atof.c:62: if (toupper(*s)=='E')
   03C7 75 86 01            738 	mov     dps, #1
   03CA 90s00r00r00         739 	mov     dptr, #_atof_s_1_1
   03CE E0                  740 	movx	a,@dptr
   03CF F5 82               741 	mov	dpl,a
   03D1 A3                  742 	inc	dptr
   03D2 E0                  743 	movx	a,@dptr
   03D3 F5 83               744 	mov	dph,a
   03D5 A3                  745 	inc	dptr
   03D6 E0                  746 	movx	a,@dptr
   03D7 F5 93               747 	mov	dpx,a
   03D9 A3                  748 	inc	dptr
   03DA E0                  749 	movx	a,@dptr
   03DB F5 F0               750 	mov	b,a
   03DD 75 86 00            751 	mov	dps,#0
   03E0 12s00r00r00         752 	lcall	__gptrget
   03E4 FA                  753 	mov	r2,a
   03E5 8A 82               754 	mov	dpl,r2
   03E7 12s00r00r00         755 	lcall	_islower
   03EB E5 82               756 	mov	a,dpl
   03ED 60 23               757 	jz  00131$
   03EF                     758 00160$:
   03EF 75 86 01            759 	mov     dps, #1
   03F2 90s00r00r00         760 	mov     dptr, #_atof_s_1_1
   03F6 E0                  761 	movx	a,@dptr
   03F7 F5 82               762 	mov	dpl,a
   03F9 A3                  763 	inc	dptr
   03FA E0                  764 	movx	a,@dptr
   03FB F5 83               765 	mov	dph,a
   03FD A3                  766 	inc	dptr
   03FE E0                  767 	movx	a,@dptr
   03FF F5 93               768 	mov	dpx,a
   0401 A3                  769 	inc	dptr
   0402 E0                  770 	movx	a,@dptr
   0403 F5 F0               771 	mov	b,a
   0405 75 86 00            772 	mov	dps,#0
   0408 12s00r00r00         773 	lcall	__gptrget
   040C FA                  774 	mov	r2,a
   040D 53 02 DF            775 	anl	ar2,#0xDF
   0410 80 1E               776 	sjmp 00132$
   0412                     777 00131$:
   0412 75 86 01            778 	mov     dps, #1
   0415 90s00r00r00         779 	mov     dptr, #_atof_s_1_1
   0419 E0                  780 	movx	a,@dptr
   041A F5 82               781 	mov	dpl,a
   041C A3                  782 	inc	dptr
   041D E0                  783 	movx	a,@dptr
   041E F5 83               784 	mov	dph,a
   0420 A3                  785 	inc	dptr
   0421 E0                  786 	movx	a,@dptr
   0422 F5 93               787 	mov	dpx,a
   0424 A3                  788 	inc	dptr
   0425 E0                  789 	movx	a,@dptr
   0426 F5 F0               790 	mov	b,a
   0428 75 86 00            791 	mov	dps,#0
   042B 12s00r00r00         792 	lcall	__gptrget
   042F FA                  793 	mov	r2,a
   0430                     794 00132$:
   0430 EA                  795 	mov	a,r2
   0431 B4 45 02            796 	cjne	a,#0x45,00161$
   0434 80 04               797 	sjmp	00162$
   0436                     798 00161$:
   0436 02s00r05r0B         799 	ljmp	00118$
   043A                     800 00162$:
                            801 ;	_atof.c:64: s++;
   043A 90s00r00r00         802 	mov	dptr,#_atof_s_1_1
   043E E0                  803 	movx	a,@dptr
   043F 24 01               804 	add	a,#0x01
   0441 F0                  805 	movx	@dptr,a
   0442 A3                  806 	inc	dptr
   0443 E0                  807 	movx	a,@dptr
   0444 34 00               808 	addc	a,#0x00
   0446 F0                  809 	movx	@dptr,a
   0447 A3                  810 	inc	dptr
   0448 E0                  811 	movx	a,@dptr
   0449 34 00               812 	addc	a,#0x00
   044B F0                  813 	movx	@dptr,a
   044C A3                  814 	inc	dptr
   044D E0                  815 	movx	a,@dptr
   044E F0                  816 	movx	@dptr,a
                            817 ;	_atof.c:65: iexp=(signed char)atoi(s);
   044F 05 86               818 	inc	dps
   0451 90s00r00r00         819 	mov	dptr,#_atof_s_1_1
   0455 E0                  820 	movx	a,@dptr
   0456 F5 82               821 	mov	dpl,a
   0458 A3                  822 	inc	dptr
   0459 E0                  823 	movx	a,@dptr
   045A F5 83               824 	mov	dph,a
   045C A3                  825 	inc	dptr
   045D E0                  826 	movx	a,@dptr
   045E F5 93               827 	mov	dpx,a
   0460 A3                  828 	inc	dptr
   0461 E0                  829 	movx	a,@dptr
   0462 F5 F0               830 	mov	b,a
   0464 75 86 00            831 	mov	dps,#0
   0467 12s00r00r00         832 	lcall	_atoi
   046B AA 82               833 	mov	r2,dpl
   046D AB 83               834 	mov	r3,dph
                            835 ;	_atof.c:67: while(iexp!=0)
   046F                     836 00114$:
   046F EA                  837 	mov	a,r2
   0470 70 04               838 	jnz	00163$
   0472 02s00r05r0B         839 	ljmp	00118$
   0476                     840 00163$:
                            841 ;	_atof.c:69: if(iexp<0)
   0476 EA                  842 	mov	a,r2
   0477 30 E7 45            843 	jnb  acc.7,00112$
   047A                     844 00164$:
                            845 ;	_atof.c:71: value*=0.1;
   047A 90s00r00r04         846 	mov	dptr,#_atof_value_1_1
                            847 ;	genAssign: resultIsFar = TRUE
   047E 75 86 21            848 	mov	dps,#0x21
   0481 90s00r00r00         849 	mov	dptr,#___fsmul_PARM_2
   0485 E0                  850 	movx	a,@dptr
   0486 F0                  851 	movx	@dptr,a
   0487 A3                  852 	inc	dptr
   0488 A3                  853 	inc	dptr
   0489 E0                  854 	movx	a,@dptr
   048A F0                  855 	movx	@dptr,a
   048B A3                  856 	inc	dptr
   048C A3                  857 	inc	dptr
   048D E0                  858 	movx	a,@dptr
   048E F0                  859 	movx	@dptr,a
   048F A3                  860 	inc	dptr
   0490 A3                  861 	inc	dptr
   0491 E0                  862 	movx	a,@dptr
   0492 F0                  863 	movx	@dptr,a
   0493 75 86 00            864 	mov	dps,#0
   0496 C0 02               865 	push	ar2
   0498 90 CC CC CD         866 	mov	dptr,#0xCCCCCD
   049C 75 F0 3D            867 	mov	b,#0x3D
   049F 12s00r00r00         868 	lcall	___fsmul
   04A3 AB 82               869 	mov	r3,dpl
   04A5 AC 83               870 	mov	r4,dph
   04A7 AD 93               871 	mov	r5,dpx
   04A9 AE F0               872 	mov	r6,b
   04AB D0 02               873 	pop	ar2
                            874 ;	genAssign: resultIsFar = TRUE
   04AD 90s00r00r04         875 	mov	dptr,#_atof_value_1_1
   04B1 EB                  876 	mov	a,r3
   04B2 F0                  877 	movx	@dptr,a
   04B3 A3                  878 	inc	dptr
   04B4 EC                  879 	mov	a,r4
   04B5 F0                  880 	movx	@dptr,a
   04B6 A3                  881 	inc	dptr
   04B7 ED                  882 	mov	a,r5
   04B8 F0                  883 	movx	@dptr,a
   04B9 A3                  884 	inc	dptr
   04BA EE                  885 	mov	a,r6
   04BB F0                  886 	movx	@dptr,a
                            887 ;	_atof.c:72: iexp++;
   04BC 0A                  888 	inc	r2
   04BD 80 B0               889 	sjmp 00114$
   04BF                     890 00112$:
                            891 ;	_atof.c:76: value*=10.0;
   04BF 90s00r00r04         892 	mov	dptr,#_atof_value_1_1
                            893 ;	genAssign: resultIsFar = TRUE
   04C3 75 86 21            894 	mov	dps,#0x21
   04C6 90s00r00r00         895 	mov	dptr,#___fsmul_PARM_2
   04CA E0                  896 	movx	a,@dptr
   04CB F0                  897 	movx	@dptr,a
   04CC A3                  898 	inc	dptr
   04CD A3                  899 	inc	dptr
   04CE E0                  900 	movx	a,@dptr
   04CF F0                  901 	movx	@dptr,a
   04D0 A3                  902 	inc	dptr
   04D1 A3                  903 	inc	dptr
   04D2 E0                  904 	movx	a,@dptr
   04D3 F0                  905 	movx	@dptr,a
   04D4 A3                  906 	inc	dptr
   04D5 A3                  907 	inc	dptr
   04D6 E0                  908 	movx	a,@dptr
   04D7 F0                  909 	movx	@dptr,a
   04D8 75 86 00            910 	mov	dps,#0
   04DB C0 02               911 	push	ar2
   04DD 90 00 00 00         912 	mov  dptr,#0x0000
   04E1 75 93 20            913 	mov	dpx,#0x20
   04E4 75 F0 41            914 	mov	b,#0x41
   04E7 12s00r00r00         915 	lcall	___fsmul
   04EB AB 82               916 	mov	r3,dpl
   04ED AC 83               917 	mov	r4,dph
   04EF AD 93               918 	mov	r5,dpx
   04F1 AE F0               919 	mov	r6,b
   04F3 D0 02               920 	pop	ar2
                            921 ;	genAssign: resultIsFar = TRUE
   04F5 90s00r00r04         922 	mov	dptr,#_atof_value_1_1
   04F9 EB                  923 	mov	a,r3
   04FA F0                  924 	movx	@dptr,a
   04FB A3                  925 	inc	dptr
   04FC EC                  926 	mov	a,r4
   04FD F0                  927 	movx	@dptr,a
   04FE A3                  928 	inc	dptr
   04FF ED                  929 	mov	a,r5
   0500 F0                  930 	movx	@dptr,a
   0501 A3                  931 	inc	dptr
   0502 EE                  932 	mov	a,r6
   0503 F0                  933 	movx	@dptr,a
                            934 ;	_atof.c:77: iexp--;
   0504 EA                  935 	mov	a,r2
   0505 14                  936 	dec	a
                            937 ;	genAssign: resultIsFar = TRUE
   0506 FA                  938 	mov	r2,a
   0507 02s00r04r6F         939 	ljmp	00114$
   050B                     940 00118$:
                            941 ;	_atof.c:83: if(sign) value*=-1.0;
   050B 30*00 2E            942 	jnb  _atof_sign_1_1,00120$
   050E                     943 00165$:
   050E 90s00r00r04         944 	mov	dptr,#_atof_value_1_1
   0512 75 86 01            945 	mov	dps, #1
   0515 90s00r00r04         946 	mov	dptr, #_atof_value_1_1
   0519 15 86               947 	dec	dps
   051B E0                  948 	movx	a,@dptr
   051C 05 86               949 	inc	dps
   051E F0                  950 	movx	@dptr,a
   051F 15 86               951 	dec	dps
   0521 A3                  952 	inc	dptr
   0522 E0                  953 	movx	a,@dptr
   0523 05 86               954 	inc	dps
   0525 A3                  955 	inc	dptr
   0526 F0                  956 	movx	@dptr,a
   0527 15 86               957 	dec	dps
   0529 A3                  958 	inc	dptr
   052A E0                  959 	movx	a,@dptr
   052B 05 86               960 	inc	dps
   052D A3                  961 	inc	dptr
   052E F0                  962 	movx	@dptr,a
   052F 15 86               963 	dec	dps
   0531 A3                  964 	inc	dptr
   0532 E0                  965 	movx	a,@dptr
   0533 B2 E7               966 	cpl	acc.7
   0535 05 86               967 	inc	dps
   0537 A3                  968 	inc	dptr
   0538 F0                  969 	movx	@dptr,a
   0539 75 86 00            970 	mov	dps,#0
   053C                     971 00120$:
                            972 ;	_atof.c:84: return (value);
   053C 75 86 01            973 	mov     dps, #1
   053F 90s00r00r04         974 	mov     dptr, #_atof_value_1_1
   0543 E0                  975 	movx	a,@dptr
   0544 F5 82               976 	mov	dpl,a
   0546 A3                  977 	inc	dptr
   0547 E0                  978 	movx	a,@dptr
   0548 F5 83               979 	mov	dph,a
   054A A3                  980 	inc	dptr
   054B E0                  981 	movx	a,@dptr
   054C F5 93               982 	mov	dpx,a
   054E A3                  983 	inc	dptr
   054F E0                  984 	movx	a,@dptr
   0550 F5 F0               985 	mov	b,a
   0552 75 86 00            986 	mov	dps,#0
   0555                     987 00129$:
   0555 22                  988 	ret
                            989 	.area CSEG    (CODE)
                            990 	.area CONST   (CODE)
                            991 	.area XINIT   (CODE)
                            992 	.area CABS    (ABS,CODE)

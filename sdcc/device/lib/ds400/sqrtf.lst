                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:25:33 2013
                              5 ;--------------------------------------------------------
                              6 	.module sqrtf
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _sqrtf
                             31 ;--------------------------------------------------------
                             32 ; special function registers
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; special function bits
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; overlayable register banks
                             39 ;--------------------------------------------------------
                             40 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      41 	.ds 8
                             42 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                      43 	.ds 8
                             44 ;--------------------------------------------------------
                             45 ; internal ram data
                             46 ;--------------------------------------------------------
                             47 	.area DSEG    (DATA)
                             48 ;--------------------------------------------------------
                             49 ; overlayable items in internal ram 
                             50 ;--------------------------------------------------------
                             51 	.area OSEG    (OVR,DATA)
                             52 ;--------------------------------------------------------
                             53 ; indirectly addressable internal ram data
                             54 ;--------------------------------------------------------
                             55 	.area ISEG    (DATA)
                             56 ;--------------------------------------------------------
                             57 ; absolute internal ram data
                             58 ;--------------------------------------------------------
                             59 	.area IABS    (ABS,DATA)
                             60 	.area IABS    (ABS,DATA)
                             61 ;--------------------------------------------------------
                             62 ; bit data
                             63 ;--------------------------------------------------------
                             64 	.area BSEG    (BIT)
                             65 ;--------------------------------------------------------
                             66 ; paged external ram data
                             67 ;--------------------------------------------------------
                             68 	.area PSEG    (PAG,XDATA)
                             69 ;--------------------------------------------------------
                             70 ; external ram data
                             71 ;--------------------------------------------------------
                             72 	.area XSEG    (XDATA)
                             73 ;--------------------------------------------------------
                             74 ; absolute external ram data
                             75 ;--------------------------------------------------------
                             76 	.area XABS    (ABS,XDATA)
                             77 ;--------------------------------------------------------
                             78 ; external initialized ram data
                             79 ;--------------------------------------------------------
                             80 	.area XISEG   (XDATA)
                             81 ;--------------------------------------------------------
                             82 ; global & static initialisations
                             83 ;--------------------------------------------------------
                             84 	.area HOME    (CODE)
                             85 	.area GSINIT  (CODE)
                             86 	.area GSFINAL (CODE)
                             87 	.area GSINIT  (CODE)
                             88 ;--------------------------------------------------------
                             89 ; Home
                             90 ;--------------------------------------------------------
                             91 	.area HOME    (CODE)
                             92 	.area HOME    (CODE)
                             93 ;--------------------------------------------------------
                             94 ; code
                             95 ;--------------------------------------------------------
                             96 	.area CSEG    (CODE)
                             97 ;------------------------------------------------------------
                             98 ;Allocation info for local variables in function 'sqrtf'
                             99 ;------------------------------------------------------------
                            100 ;x                         Allocated to registers r2 r3 r4 r5 
                            101 ;f                         Allocated to stack - offset 1
                            102 ;y                         Allocated to registers r6 r7 r0 r1 
                            103 ;n                         Allocated to stack - offset 5
                            104 ;sloc0                     Allocated to stack - offset 7
                            105 ;------------------------------------------------------------
                            106 ;	sqrtf.c:27: float sqrtf(const float x) _FLOAT_FUNC_REENTRANT
                            107 ;	-----------------------------------------
                            108 ;	 function sqrtf
                            109 ;	-----------------------------------------
   0000                     110 _sqrtf:
                    0002    111 	ar2 = 0x02
                    0003    112 	ar3 = 0x03
                    0004    113 	ar4 = 0x04
                    0005    114 	ar5 = 0x05
                    0006    115 	ar6 = 0x06
                    0007    116 	ar7 = 0x07
                    0000    117 	ar0 = 0x00
                    0001    118 	ar1 = 0x01
   0000 C0*00               119 	push	_bpx
   0002 C0*01               120 	push	_bpx+1
   0004 85 81*00            121 	mov	_bpx,sp
   0007 85 9B*01            122 	mov	_bpx+1,esp
   000A 53*01 03            123 	anl	_bpx+1,#3
   000D 43*01 DC            124 	orl	_bpx+1,#0xDC
   0010 E5 81               125 	mov	a,sp
   0012 24 0A               126 	add	a,#0x0A
   0014 F5 81               127 	mov	sp,a
   0016 E5 9B               128 	mov	a,esp
   0018 54 03               129 	anl	a,#3
   001A 44 DC               130 	orl	a,#0xDC
   001C 34 00               131 	addc	a,#0x00
   001E F5 9B               132 	mov	esp,a
   0020 AA 82               133 	mov	r2,dpl
   0022 AB 83               134 	mov	r3,dph
   0024 AC 93               135 	mov	r4,dpx
   0026 AD F0               136 	mov	r5,b
                            137 ;	sqrtf.c:32: if (x==0.0) return x;
   0028 EA                  138 	mov	a,r2
   0029 4B                  139 	orl	a,r3
   002A 4C                  140 	orl	a,r4
   002B 4D                  141 	orl	a,r5
   002C 70 0C               142 	jnz  00107$
   002E                     143 00117$:
   002E 8A 82               144 	mov	dpl,r2
   0030 8B 83               145 	mov	dph,r3
   0032 8C 93               146 	mov	dpx,r4
   0034 8D F0               147 	mov	b,r5
   0036 02s00r03r48         148 	ljmp	00111$
   003A                     149 00107$:
                            150 ;	sqrtf.c:33: else if (x==1.0) return 1.0;
                            151 ;	genAssign: resultIsFar = TRUE
   003A 90s00r00r00         152 	mov	dptr,#___fseq_PARM_2
   003E E4                  153 	clr  a
   003F F0                  154 	movx @dptr,a
   0040 A3                  155 	inc  dptr
   0041 F0                  156 	movx @dptr,a
   0042 A3                  157 	inc	dptr
   0043 74 80               158 	mov	a,#0x80
   0045 F0                  159 	movx	@dptr,a
   0046 A3                  160 	inc	dptr
   0047 74 3F               161 	mov	a,#0x3F
   0049 F0                  162 	movx	@dptr,a
   004A C0 02               163 	push	ar2
   004C C0 03               164 	push	ar3
   004E C0 04               165 	push	ar4
   0050 C0 05               166 	push	ar5
   0052 8A 82               167 	mov	dpl,r2
   0054 8B 83               168 	mov	dph,r3
   0056 8C 93               169 	mov	dpx,r4
   0058 8D F0               170 	mov	b,r5
   005A 12s00r00r00         171 	lcall	___fseq
   005E D0 05               172 	pop	ar5
   0060 D0 04               173 	pop	ar4
   0062 D0 03               174 	pop	ar3
   0064 D0 02               175 	pop	ar2
   0066 E5 82               176 	mov	a,dpl
   0068 60 0E               177 	jz  00104$
   006A                     178 00118$:
   006A 90 00 00 00         179 	mov  dptr,#0x0000
   006E 75 93 80            180 	mov	dpx,#0x80
   0071 75 F0 3F            181 	mov	b,#0x3F
   0074 02s00r03r48         182 	ljmp	00111$
   0078                     183 00104$:
                            184 ;	sqrtf.c:34: else if (x<0.0)
                            185 ;	genAssign: resultIsFar = TRUE
   0078 90s00r00r00         186 	mov	dptr,#___fslt_PARM_2
   007C E4                  187 	clr  a
   007D F0                  188 	movx @dptr,a
   007E A3                  189 	inc  dptr
   007F F0                  190 	movx @dptr,a
   0080 A3                  191 	inc	dptr
   0081 E4                  192 	clr  a
   0082 F0                  193 	movx @dptr,a
   0083 A3                  194 	inc  dptr
   0084 F0                  195 	movx @dptr,a
   0085 C0 02               196 	push	ar2
   0087 C0 03               197 	push	ar3
   0089 C0 04               198 	push	ar4
   008B C0 05               199 	push	ar5
   008D 8A 82               200 	mov	dpl,r2
   008F 8B 83               201 	mov	dph,r3
   0091 8C 93               202 	mov	dpx,r4
   0093 8D F0               203 	mov	b,r5
   0095 12s00r00r00         204 	lcall	___fslt
   0099 D0 05               205 	pop	ar5
   009B D0 04               206 	pop	ar4
   009D D0 03               207 	pop	ar3
   009F D0 02               208 	pop	ar2
   00A1 E5 82               209 	mov	a,dpl
   00A3 60 15               210 	jz  00108$
   00A5                     211 00119$:
                            212 ;	sqrtf.c:36: errno=EDOM;
                            213 ;	genAssign: resultIsFar = TRUE
   00A5 90s00r00r00         214 	mov	dptr,#_errno
   00A9 74 21               215 	mov	a,#0x21
   00AB F0                  216 	movx	@dptr,a
   00AC E4                  217 	clr	a
   00AD A3                  218 	inc	dptr
   00AE F0                  219 	movx	@dptr,a
                            220 ;	sqrtf.c:37: return 0.0;
   00AF 90 00 00 00         221 	mov  dptr,#0x0000
   00B3 75 F0 00            222 	mov	b,#0x00
   00B6 02s00r03r48         223 	ljmp	00111$
   00BA                     224 00108$:
                            225 ;	sqrtf.c:39: f=frexpf(x, &n);
   00BA E5*00               226 	mov	a,_bpx
   00BC 24 05               227 	add	a,#0x05
   00BE F5 F0               228 	mov	b,a
   00C0 E4                  229 	clr	a
   00C1 35*01               230 	addc	a,_bpx+1
   00C3 AE F0               231 	mov	r6,b
   00C5 FF                  232 	mov	r7,a
   00C6 78 FF               233 	mov	r0,#0xFF
   00C8 90s00r00r00         234 	mov	dptr,#_frexpf_PARM_2
   00CC EE                  235 	mov	a,r6
   00CD F0                  236 	movx	@dptr,a
   00CE A3                  237 	inc	dptr
   00CF EF                  238 	mov	a,r7
   00D0 F0                  239 	movx	@dptr,a
   00D1 A3                  240 	inc	dptr
   00D2 E8                  241 	mov	a,r0
   00D3 F0                  242 	movx	@dptr,a
   00D4 A3                  243 	inc	dptr
   00D5 74 00               244 	mov	a,#0x0
   00D7 F0                  245 	movx	@dptr,a
   00D8 8A 82               246 	mov	dpl,r2
   00DA 8B 83               247 	mov	dph,r3
   00DC 8C 93               248 	mov	dpx,r4
   00DE 8D F0               249 	mov	b,r5
   00E0 12s00r00r00         250 	lcall	_frexpf
   00E4 AA 82               251 	mov	r2,dpl
   00E6 AB 83               252 	mov	r3,dph
   00E8 AC 93               253 	mov	r4,dpx
   00EA AD F0               254 	mov	r5,b
                            255 ;	genAssign: resultIsFar = TRUE
   00EC 75 93 FF            256 	mov	dpx,#0xFF
   00EF 85*01 83            257 	mov	dph,_bpx+1
   00F2 85*00 82            258 	mov	dpl,_bpx
   00F5 A3                  259 	inc	dptr
   00F6 EA                  260 	mov	a,r2
   00F7 F0                  261 	movx	@dptr,a
   00F8 A3                  262 	inc	dptr
   00F9 EB                  263 	mov	a,r3
   00FA F0                  264 	movx	@dptr,a
   00FB A3                  265 	inc	dptr
   00FC EC                  266 	mov	a,r4
   00FD F0                  267 	movx	@dptr,a
   00FE A3                  268 	inc	dptr
   00FF ED                  269 	mov	a,r5
   0100 F0                  270 	movx	@dptr,a
                            271 ;	sqrtf.c:40: y=0.41731+0.59016*f; /*Educated guess*/
   0101 75 93 FF            272 	mov	dpx,#0xFF
   0104 85*01 83            273 	mov	dph,_bpx+1
   0107 85*00 82            274 	mov	dpl,_bpx
   010A A3                  275 	inc	dptr
                            276 ;	genAssign: resultIsFar = TRUE
   010B 75 86 21            277 	mov	dps,#0x21
   010E 90s00r00r00         278 	mov	dptr,#___fsmul_PARM_2
   0112 E0                  279 	movx	a,@dptr
   0113 F0                  280 	movx	@dptr,a
   0114 A3                  281 	inc	dptr
   0115 A3                  282 	inc	dptr
   0116 E0                  283 	movx	a,@dptr
   0117 F0                  284 	movx	@dptr,a
   0118 A3                  285 	inc	dptr
   0119 A3                  286 	inc	dptr
   011A E0                  287 	movx	a,@dptr
   011B F0                  288 	movx	@dptr,a
   011C A3                  289 	inc	dptr
   011D A3                  290 	inc	dptr
   011E E0                  291 	movx	a,@dptr
   011F F0                  292 	movx	@dptr,a
   0120 75 86 00            293 	mov	dps,#0
   0123 90 17 14 BA         294 	mov	dptr,#0x1714BA
   0127 75 F0 3F            295 	mov	b,#0x3F
   012A 12s00r00r00         296 	lcall	___fsmul
   012E AE 82               297 	mov	r6,dpl
   0130 AF 83               298 	mov	r7,dph
   0132 A8 93               299 	mov	r0,dpx
   0134 A9 F0               300 	mov	r1,b
                            301 ;	genAssign: resultIsFar = TRUE
   0136 90s00r00r00         302 	mov	dptr,#___fsadd_PARM_2
   013A 74 A8               303 	mov	a,#0xA8
   013C F0                  304 	movx	@dptr,a
   013D A3                  305 	inc	dptr
   013E 74 A9               306 	mov	a,#0xA9
   0140 F0                  307 	movx	@dptr,a
   0141 A3                  308 	inc	dptr
   0142 74 D5               309 	mov	a,#0xD5
   0144 F0                  310 	movx	@dptr,a
   0145 A3                  311 	inc	dptr
   0146 74 3E               312 	mov	a,#0x3E
   0148 F0                  313 	movx	@dptr,a
   0149 8E 82               314 	mov	dpl,r6
   014B 8F 83               315 	mov	dph,r7
   014D 88 93               316 	mov	dpx,r0
   014F 89 F0               317 	mov	b,r1
   0151 12s00r00r00         318 	lcall	___fsadd
   0155 AE 82               319 	mov	r6,dpl
   0157 AF 83               320 	mov	r7,dph
   0159 A8 93               321 	mov	r0,dpx
   015B A9 F0               322 	mov	r1,b
                            323 ;	genAssign: resultIsFar = TRUE
                            324 ;	sqrtf.c:42: y+=f/y;
                            325 ;	genAssign: resultIsFar = TRUE
   015D 90s00r00r00         326 	mov	dptr,#___fsdiv_PARM_2
   0161 EE                  327 	mov	a,r6
   0162 F0                  328 	movx	@dptr,a
   0163 A3                  329 	inc	dptr
   0164 EF                  330 	mov	a,r7
   0165 F0                  331 	movx	@dptr,a
   0166 A3                  332 	inc	dptr
   0167 E8                  333 	mov	a,r0
   0168 F0                  334 	movx	@dptr,a
   0169 A3                  335 	inc	dptr
   016A E9                  336 	mov	a,r1
   016B F0                  337 	movx	@dptr,a
   016C C0 06               338 	push	ar6
   016E C0 07               339 	push	ar7
   0170 C0 00               340 	push	ar0
   0172 C0 01               341 	push	ar1
   0174 75 95 FF            342 	mov	dpx1,#0xFF
   0177 85*01 85            343 	mov	dph1,_bpx+1
   017A 85*00 84            344 	mov	dpl1,_bpx
   017D 75 86 01            345 	mov     dps,#1
   0180 A3                  346 	inc	dptr
   0181 E0                  347 	movx	a,@dptr
   0182 F5 82               348 	mov	dpl,a
   0184 A3                  349 	inc	dptr
   0185 E0                  350 	movx	a,@dptr
   0186 F5 83               351 	mov	dph,a
   0188 A3                  352 	inc	dptr
   0189 E0                  353 	movx	a,@dptr
   018A F5 93               354 	mov	dpx,a
   018C A3                  355 	inc	dptr
   018D E0                  356 	movx	a,@dptr
   018E F5 F0               357 	mov	b,a
   0190 75 86 00            358 	mov	dps,#0
   0193 12s00r00r00         359 	lcall	___fsdiv
   0197 AA 82               360 	mov	r2,dpl
   0199 AB 83               361 	mov	r3,dph
   019B AC 93               362 	mov	r4,dpx
   019D AD F0               363 	mov	r5,b
   019F D0 01               364 	pop	ar1
   01A1 D0 00               365 	pop	ar0
   01A3 D0 07               366 	pop	ar7
   01A5 D0 06               367 	pop	ar6
                            368 ;	genAssign: resultIsFar = TRUE
   01A7 90s00r00r00         369 	mov	dptr,#___fsadd_PARM_2
   01AB EA                  370 	mov	a,r2
   01AC F0                  371 	movx	@dptr,a
   01AD A3                  372 	inc	dptr
   01AE EB                  373 	mov	a,r3
   01AF F0                  374 	movx	@dptr,a
   01B0 A3                  375 	inc	dptr
   01B1 EC                  376 	mov	a,r4
   01B2 F0                  377 	movx	@dptr,a
   01B3 A3                  378 	inc	dptr
   01B4 ED                  379 	mov	a,r5
   01B5 F0                  380 	movx	@dptr,a
   01B6 8E 82               381 	mov	dpl,r6
   01B8 8F 83               382 	mov	dph,r7
   01BA 88 93               383 	mov	dpx,r0
   01BC 89 F0               384 	mov	b,r1
   01BE 12s00r00r00         385 	lcall	___fsadd
   01C2 AA 82               386 	mov	r2,dpl
   01C4 AB 83               387 	mov	r3,dph
   01C6 AC 93               388 	mov	r4,dpx
   01C8 AD F0               389 	mov	r5,b
                            390 ;	genAssign: resultIsFar = TRUE
   01CA 8A 06               391 	mov	ar6,r2
   01CC 8B 07               392 	mov	ar7,r3
   01CE 8C 00               393 	mov	ar0,r4
   01D0 8D 01               394 	mov	ar1,r5
                            395 ;	sqrtf.c:43: y=ldexpf(y, -2) + f/y; /*Faster version of 0.25 * y + f/y*/
                            396 ;	genAssign: resultIsFar = TRUE
   01D2 90s00r00r00         397 	mov	dptr,#_ldexpf_PARM_2
   01D6 74 FE               398 	mov	a,#0xFE
   01D8 F0                  399 	movx	@dptr,a
   01D9 A3                  400 	inc	dptr
   01DA 74 FF               401 	mov	a,#0xFF
   01DC F0                  402 	movx	@dptr,a
   01DD C0 06               403 	push	ar6
   01DF C0 07               404 	push	ar7
   01E1 C0 00               405 	push	ar0
   01E3 C0 01               406 	push	ar1
   01E5 8E 82               407 	mov	dpl,r6
   01E7 8F 83               408 	mov	dph,r7
   01E9 88 93               409 	mov	dpx,r0
   01EB 89 F0               410 	mov	b,r1
   01ED 12s00r00r00         411 	lcall	_ldexpf
   01F1 E5*00               412 	mov	a,_bpx
   01F3 C3                  413 	clr	c
   01F4 94 F9               414 	subb	a,#0xF9
   01F6 F5 84               415 	mov	dpl1,a
   01F8 E5*01               416 	mov	a,_bpx+1
   01FA 94 FF               417 	subb	a,#0xFF
   01FC F5 85               418 	mov	dph1,a
   01FE 75 95 FF            419 	mov	dpx1,#0xFF
   0201 05 86               420 	inc	dps
   0203 E5 82               421 	mov	a,dpl
   0205 F0                  422 	movx	@dptr,a
   0206 A3                  423 	inc	dptr
   0207 E5 83               424 	mov	a,dph
   0209 F0                  425 	movx	@dptr,a
   020A A3                  426 	inc	dptr
   020B E5 93               427 	mov	a,dpx
   020D F0                  428 	movx	@dptr,a
   020E A3                  429 	inc	dptr
   020F E5 F0               430 	mov	a,b
   0211 F0                  431 	movx	@dptr,a
   0212 75 86 00            432 	mov	dps,#0
   0215 D0 01               433 	pop	ar1
   0217 D0 00               434 	pop	ar0
   0219 D0 07               435 	pop	ar7
   021B D0 06               436 	pop	ar6
                            437 ;	genAssign: resultIsFar = TRUE
   021D 90s00r00r00         438 	mov	dptr,#___fsdiv_PARM_2
   0221 EE                  439 	mov	a,r6
   0222 F0                  440 	movx	@dptr,a
   0223 A3                  441 	inc	dptr
   0224 EF                  442 	mov	a,r7
   0225 F0                  443 	movx	@dptr,a
   0226 A3                  444 	inc	dptr
   0227 E8                  445 	mov	a,r0
   0228 F0                  446 	movx	@dptr,a
   0229 A3                  447 	inc	dptr
   022A E9                  448 	mov	a,r1
   022B F0                  449 	movx	@dptr,a
   022C 75 95 FF            450 	mov	dpx1,#0xFF
   022F 85*01 85            451 	mov	dph1,_bpx+1
   0232 85*00 84            452 	mov	dpl1,_bpx
   0235 75 86 01            453 	mov     dps,#1
   0238 A3                  454 	inc	dptr
   0239 E0                  455 	movx	a,@dptr
   023A F5 82               456 	mov	dpl,a
   023C A3                  457 	inc	dptr
   023D E0                  458 	movx	a,@dptr
   023E F5 83               459 	mov	dph,a
   0240 A3                  460 	inc	dptr
   0241 E0                  461 	movx	a,@dptr
   0242 F5 93               462 	mov	dpx,a
   0244 A3                  463 	inc	dptr
   0245 E0                  464 	movx	a,@dptr
   0246 F5 F0               465 	mov	b,a
   0248 75 86 00            466 	mov	dps,#0
   024B 12s00r00r00         467 	lcall	___fsdiv
   024F AA 82               468 	mov	r2,dpl
   0251 AB 83               469 	mov	r3,dph
   0253 AC 93               470 	mov	r4,dpx
   0255 AD F0               471 	mov	r5,b
                            472 ;	genAssign: resultIsFar = TRUE
   0257 90s00r00r00         473 	mov	dptr,#___fsadd_PARM_2
   025B EA                  474 	mov	a,r2
   025C F0                  475 	movx	@dptr,a
   025D A3                  476 	inc	dptr
   025E EB                  477 	mov	a,r3
   025F F0                  478 	movx	@dptr,a
   0260 A3                  479 	inc	dptr
   0261 EC                  480 	mov	a,r4
   0262 F0                  481 	movx	@dptr,a
   0263 A3                  482 	inc	dptr
   0264 ED                  483 	mov	a,r5
   0265 F0                  484 	movx	@dptr,a
   0266 E5*00               485 	mov	a,_bpx
   0268 C3                  486 	clr	c
   0269 94 F9               487 	subb	a,#0xF9
   026B F5 84               488 	mov	dpl1,a
   026D E5*01               489 	mov	a,_bpx+1
   026F 94 FF               490 	subb	a,#0xFF
   0271 F5 85               491 	mov	dph1,a
   0273 75 95 FF            492 	mov	dpx1,#0xFF
   0276 05 86               493 	inc	dps
   0278 E0                  494 	movx	a,@dptr
   0279 F5 82               495 	mov	dpl,a
   027B A3                  496 	inc	dptr
   027C E0                  497 	movx	a,@dptr
   027D F5 83               498 	mov	dph,a
   027F A3                  499 	inc	dptr
   0280 E0                  500 	movx	a,@dptr
   0281 F5 93               501 	mov	dpx,a
   0283 A3                  502 	inc	dptr
   0284 E0                  503 	movx	a,@dptr
   0285 F5 F0               504 	mov	b,a
   0287 75 86 00            505 	mov	dps,#0
   028A 12s00r00r00         506 	lcall	___fsadd
   028E AA 82               507 	mov	r2,dpl
   0290 AB 83               508 	mov	r3,dph
   0292 AC 93               509 	mov	r4,dpx
   0294 AD F0               510 	mov	r5,b
                            511 ;	genAssign: resultIsFar = TRUE
   0296 8A 06               512 	mov	ar6,r2
   0298 8B 07               513 	mov	ar7,r3
   029A 8C 00               514 	mov	ar0,r4
   029C 8D 01               515 	mov	ar1,r5
                            516 ;	sqrtf.c:45: if (n&1)
   029E E5*00               517 	mov	a,_bpx
   02A0 C3                  518 	clr	c
   02A1 94 FB               519 	subb	a,#0xFB
   02A3 F5 82               520 	mov	dpl,a
   02A5 E5*01               521 	mov	a,_bpx+1
   02A7 94 FF               522 	subb	a,#0xFF
   02A9 F5 83               523 	mov	dph,a
   02AB 75 93 FF            524 	mov	dpx,#0xFF
   02AE E0                  525 	movx	a,@dptr
   02AF 30 E0 43            526 	jnb  acc.0,00110$
   02B2                     527 00120$:
                            528 ;	sqrtf.c:47: y*=0.7071067812;
                            529 ;	genAssign: resultIsFar = TRUE
   02B2 90s00r00r00         530 	mov	dptr,#___fsmul_PARM_2
   02B6 EE                  531 	mov	a,r6
   02B7 F0                  532 	movx	@dptr,a
   02B8 A3                  533 	inc	dptr
   02B9 EF                  534 	mov	a,r7
   02BA F0                  535 	movx	@dptr,a
   02BB A3                  536 	inc	dptr
   02BC E8                  537 	mov	a,r0
   02BD F0                  538 	movx	@dptr,a
   02BE A3                  539 	inc	dptr
   02BF E9                  540 	mov	a,r1
   02C0 F0                  541 	movx	@dptr,a
   02C1 90 35 04 F3         542 	mov	dptr,#0x3504F3
   02C5 75 F0 3F            543 	mov	b,#0x3F
   02C8 12s00r00r00         544 	lcall	___fsmul
   02CC AA 82               545 	mov	r2,dpl
   02CE AB 83               546 	mov	r3,dph
   02D0 AC 93               547 	mov	r4,dpx
   02D2 AD F0               548 	mov	r5,b
                            549 ;	genAssign: resultIsFar = TRUE
   02D4 8A 06               550 	mov	ar6,r2
   02D6 8B 07               551 	mov	ar7,r3
   02D8 8C 00               552 	mov	ar0,r4
   02DA 8D 01               553 	mov	ar1,r5
                            554 ;	sqrtf.c:48: ++n;
   02DC E5*00               555 	mov	a,_bpx
   02DE C3                  556 	clr	c
   02DF 94 FB               557 	subb	a,#0xFB
   02E1 F5 82               558 	mov	dpl,a
   02E3 E5*01               559 	mov	a,_bpx+1
   02E5 94 FF               560 	subb	a,#0xFF
   02E7 F5 83               561 	mov	dph,a
   02E9 75 93 FF            562 	mov	dpx,#0xFF
   02EC E0                  563 	movx	a,@dptr
   02ED 24 01               564 	add	a,#0x01
   02EF F0                  565 	movx	@dptr,a
   02F0 A3                  566 	inc	dptr
   02F1 E0                  567 	movx	a,@dptr
   02F2 34 00               568 	addc	a,#0x00
   02F4 F0                  569 	movx	@dptr,a
   02F5                     570 00110$:
                            571 ;	sqrtf.c:50: return ldexpf(y, n/2);
                            572 ;	genAssign: resultIsFar = TRUE
   02F5 90s00r00r00         573 	mov	dptr,#__divsint_PARM_2
   02F9 74 02               574 	mov	a,#0x02
   02FB F0                  575 	movx	@dptr,a
   02FC E4                  576 	clr	a
   02FD A3                  577 	inc	dptr
   02FE F0                  578 	movx	@dptr,a
   02FF C0 06               579 	push	ar6
   0301 C0 07               580 	push	ar7
   0303 C0 00               581 	push	ar0
   0305 C0 01               582 	push	ar1
   0307 E5*00               583 	mov	a,_bpx
   0309 C3                  584 	clr	c
   030A 94 FB               585 	subb	a,#0xFB
   030C F5 84               586 	mov	dpl1,a
   030E E5*01               587 	mov	a,_bpx+1
   0310 94 FF               588 	subb	a,#0xFF
   0312 F5 85               589 	mov	dph1,a
   0314 75 95 FF            590 	mov	dpx1,#0xFF
   0317 05 86               591 	inc	dps
   0319 E0                  592 	movx	a,@dptr
   031A F5 82               593 	mov	dpl,a
   031C A3                  594 	inc	dptr
   031D E0                  595 	movx	a,@dptr
   031E F5 83               596 	mov	dph,a
   0320 75 86 00            597 	mov	dps,#0
   0323 12s00r00r00         598 	lcall	__divsint
   0327 AA 82               599 	mov	r2,dpl
   0329 AB 83               600 	mov	r3,dph
   032B D0 01               601 	pop	ar1
   032D D0 00               602 	pop	ar0
   032F D0 07               603 	pop	ar7
   0331 D0 06               604 	pop	ar6
                            605 ;	genAssign: resultIsFar = TRUE
   0333 90s00r00r00         606 	mov	dptr,#_ldexpf_PARM_2
   0337 EA                  607 	mov	a,r2
   0338 F0                  608 	movx	@dptr,a
   0339 A3                  609 	inc	dptr
   033A EB                  610 	mov	a,r3
   033B F0                  611 	movx	@dptr,a
   033C 8E 82               612 	mov	dpl,r6
   033E 8F 83               613 	mov	dph,r7
   0340 88 93               614 	mov	dpx,r0
   0342 89 F0               615 	mov	b,r1
   0344 12s00r00r00         616 	lcall	_ldexpf
   0348                     617 00111$:
   0348 85*00 81            618 	mov	sp,_bpx
   034B 85*01 9B            619 	mov	esp,_bpx+1
   034E D0*01               620 	pop	_bpx+1
   0350 D0*00               621 	pop	_bpx
   0352 22                  622 	ret
                            623 	.area CSEG    (CODE)
                            624 	.area CONST   (CODE)
                            625 	.area XINIT   (CODE)
                            626 	.area CABS    (ABS,CODE)

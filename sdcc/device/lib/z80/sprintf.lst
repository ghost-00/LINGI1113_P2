                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:26:10 2013
                              5 ;--------------------------------------------------------
                              6 	.module sprintf
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _vsprintf
                             13 	.globl _sprintf
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ;  ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; overlayable items in  ram 
                             23 ;--------------------------------------------------------
                             24 	.area _OVERLAY
                             25 ;--------------------------------------------------------
                             26 ; external initialized ram data
                             27 ;--------------------------------------------------------
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 	.area _HOME
                             40 ;--------------------------------------------------------
                             41 ; code
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 ;../sprintf.c:29: static void put_char_to_string( char c, void* p ) _REENTRANT
                             45 ;	---------------------------------
                             46 ; Function put_char_to_string
                             47 ; ---------------------------------
   0000                      48 _put_char_to_string:
   0000 DD E5                49 	push	ix
   0002 DD 21 00 00          50 	ld	ix,#0
   0006 DD 39                51 	add	ix,sp
                             52 ;../sprintf.c:31: char **buf = (char **)p;
   0008 DD 4E 05             53 	ld	c,5 (ix)
   000B DD 46 06             54 	ld	b,6 (ix)
   000E C5                   55 	push	bc
   000F FD E1                56 	pop	iy
                             57 ;../sprintf.c:32: *(*buf)++ = c;
   0011 FD 4E 00             58 	ld	c,0 (iy)
   0014 FD 46 01             59 	ld	b,1 (iy)
   0017 59                   60 	ld	e,c
   0018 50                   61 	ld	d,b
   0019 13                   62 	inc	de
   001A FD 73 00             63 	ld	0 (iy),e
   001D FD 72 01             64 	ld	1 (iy),d
   0020 DD 7E 04             65 	ld	a,4 (ix)
   0023 02                   66 	ld	(bc),a
   0024 DD E1                67 	pop	ix
   0026 C9                   68 	ret
                             69 ;../sprintf.c:35: int vsprintf (char *buf, const char *format, va_list ap)
                             70 ;	---------------------------------
                             71 ; Function vsprintf
                             72 ; ---------------------------------
   0027                      73 _vsprintf_start::
   0027                      74 _vsprintf:
   0027 DD E5                75 	push	ix
   0029 DD 21 00 00          76 	ld	ix,#0
   002D DD 39                77 	add	ix,sp
                             78 ;../sprintf.c:38: i = _print_format( put_char_to_string, &buf, format, ap );
   002F 21 04 00             79 	ld	hl,#0x0004
   0032 39                   80 	add	hl,sp
   0033 4D                   81 	ld	c,l
   0034 44                   82 	ld	b,h
   0035 DD 6E 08             83 	ld	l,8 (ix)
   0038 DD 66 09             84 	ld	h,9 (ix)
   003B E5                   85 	push	hl
   003C DD 6E 06             86 	ld	l,6 (ix)
   003F DD 66 07             87 	ld	h,7 (ix)
   0042 E5                   88 	push	hl
   0043 C5                   89 	push	bc
   0044 21r00s00             90 	ld	hl,#_put_char_to_string
   0047 E5                   91 	push	hl
   0048 CDr00s00             92 	call	__print_format
   004B F1                   93 	pop	af
   004C F1                   94 	pop	af
   004D F1                   95 	pop	af
   004E F1                   96 	pop	af
   004F 4D                   97 	ld	c,l
   0050 44                   98 	ld	b,h
                             99 ;../sprintf.c:39: *buf = 0;
   0051 DD 6E 04            100 	ld	l,4 (ix)
   0054 DD 66 05            101 	ld	h,5 (ix)
   0057 36 00               102 	ld	(hl),#0x00
                            103 ;../sprintf.c:40: return i;
   0059 69                  104 	ld	l,c
   005A 60                  105 	ld	h,b
   005B DD E1               106 	pop	ix
   005D C9                  107 	ret
   005E                     108 _vsprintf_end::
                            109 ;../sprintf.c:43: int sprintf (char *buf, const char *format, ...)
                            110 ;	---------------------------------
                            111 ; Function sprintf
                            112 ; ---------------------------------
   005E                     113 _sprintf_start::
   005E                     114 _sprintf:
   005E DD E5               115 	push	ix
   0060 DD 21 00 00         116 	ld	ix,#0
   0064 DD 39               117 	add	ix,sp
                            118 ;../sprintf.c:48: va_start (arg, format);
   0066 21 06 00            119 	ld	hl,#0x0006
   0069 39                  120 	add	hl,sp
   006A 23                  121 	inc	hl
   006B 23                  122 	inc	hl
   006C 4D                  123 	ld	c,l
   006D 44                  124 	ld	b,h
                            125 ;../sprintf.c:49: i = _print_format( put_char_to_string, &buf, format, arg );
   006E 21 04 00            126 	ld	hl,#0x0004
   0071 39                  127 	add	hl,sp
   0072 EB                  128 	ex	de,hl
   0073 C5                  129 	push	bc
   0074 DD 6E 06            130 	ld	l,6 (ix)
   0077 DD 66 07            131 	ld	h,7 (ix)
   007A E5                  132 	push	hl
   007B D5                  133 	push	de
   007C 21r00s00            134 	ld	hl,#_put_char_to_string
   007F E5                  135 	push	hl
   0080 CDr00s00            136 	call	__print_format
   0083 F1                  137 	pop	af
   0084 F1                  138 	pop	af
   0085 F1                  139 	pop	af
   0086 F1                  140 	pop	af
   0087 4D                  141 	ld	c,l
   0088 44                  142 	ld	b,h
                            143 ;../sprintf.c:50: *buf = 0;
   0089 DD 6E 04            144 	ld	l,4 (ix)
   008C DD 66 05            145 	ld	h,5 (ix)
   008F 36 00               146 	ld	(hl),#0x00
                            147 ;../sprintf.c:53: return i;
   0091 69                  148 	ld	l,c
   0092 60                  149 	ld	h,b
   0093 DD E1               150 	pop	ix
   0095 C9                  151 	ret
   0096                     152 _sprintf_end::
                            153 	.area _CODE
                            154 	.area _CABS

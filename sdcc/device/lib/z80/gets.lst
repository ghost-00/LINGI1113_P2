                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:26:09 2013
                              5 ;--------------------------------------------------------
                              6 	.module gets
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _gets
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ;  ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; overlayable items in  ram 
                             22 ;--------------------------------------------------------
                             23 	.area _OVERLAY
                             24 ;--------------------------------------------------------
                             25 ; external initialized ram data
                             26 ;--------------------------------------------------------
                             27 ;--------------------------------------------------------
                             28 ; global & static initialisations
                             29 ;--------------------------------------------------------
                             30 	.area _HOME
                             31 	.area _GSINIT
                             32 	.area _GSFINAL
                             33 	.area _GSINIT
                             34 ;--------------------------------------------------------
                             35 ; Home
                             36 ;--------------------------------------------------------
                             37 	.area _HOME
                             38 	.area _HOME
                             39 ;--------------------------------------------------------
                             40 ; code
                             41 ;--------------------------------------------------------
                             42 	.area _CODE
                             43 ;../gets.c:3: char * gets(char *s) {
                             44 ;	---------------------------------
                             45 ; Function gets
                             46 ; ---------------------------------
   0000                      47 _gets_start::
   0000                      48 _gets:
   0000 DD E5                49 	push	ix
   0002 DD 21 00 00          50 	ld	ix,#0
   0006 DD 39                51 	add	ix,sp
                             52 ;../gets.c:5: unsigned int count=0;
   0008 01 00 00             53 	ld	bc,#0x0000
                             54 ;../gets.c:7: while (1) {
   000B                      55 00109$:
                             56 ;../gets.c:8: c=getchar();
   000B C5                   57 	push	bc
   000C CDr00s00             58 	call	_getchar
   000F C1                   59 	pop	bc
   0010 5D                   60 	ld	e,l
                             61 ;../gets.c:9: switch(c) {
   0011 7B                   62 	ld	a,e
   0012 D6 08                63 	sub	a,#0x08
   0014 28 0C                64 	jr	Z,00101$
   0016 7B                   65 	ld	a,e
   0017 D6 0A                66 	sub	a,#0x0A
   0019 28 35                67 	jr	Z,00105$
   001B 7B                   68 	ld	a,e
   001C D6 0D                69 	sub	a,#0x0D
   001E 28 30                70 	jr	Z,00105$
   0020 18 48                71 	jr	00106$
                             72 ;../gets.c:10: case '\b': // backspace
   0022                      73 00101$:
                             74 ;../gets.c:11: if (count) {
   0022 79                   75 	ld	a,c
   0023 B0                   76 	or	a,b
   0024 28 E5                77 	jr	Z,00109$
                             78 ;../gets.c:12: putchar ('\b');
   0026 C5                   79 	push	bc
   0027 3E 08                80 	ld	a,#0x08
   0029 F5                   81 	push	af
   002A 33                   82 	inc	sp
   002B CDr00s00             83 	call	_putchar
   002E 33                   84 	inc	sp
   002F 3E 20                85 	ld	a,#0x20
   0031 F5                   86 	push	af
   0032 33                   87 	inc	sp
   0033 CDr00s00             88 	call	_putchar
   0036 33                   89 	inc	sp
   0037 3E 08                90 	ld	a,#0x08
   0039 F5                   91 	push	af
   003A 33                   92 	inc	sp
   003B CDr00s00             93 	call	_putchar
   003E 33                   94 	inc	sp
   003F C1                   95 	pop	bc
                             96 ;../gets.c:15: s--;
   0040 DD 6E 04             97 	ld	l,4 (ix)
   0043 DD 66 05             98 	ld	h,5 (ix)
   0046 2B                   99 	dec	hl
   0047 DD 75 04            100 	ld	4 (ix),l
   004A DD 74 05            101 	ld	5 (ix),h
                            102 ;../gets.c:16: count--;
   004D 0B                  103 	dec	bc
                            104 ;../gets.c:18: break;
   004E 18 BB               105 	jr	00109$
                            106 ;../gets.c:20: case '\r': // CR or LF
   0050                     107 00105$:
                            108 ;../gets.c:21: putchar('\r');
   0050 3E 0D               109 	ld	a,#0x0D
   0052 F5                  110 	push	af
   0053 33                  111 	inc	sp
   0054 CDr00s00            112 	call	_putchar
   0057 33                  113 	inc	sp
                            114 ;../gets.c:22: putchar('\n');
   0058 3E 0A               115 	ld	a,#0x0A
   005A F5                  116 	push	af
   005B 33                  117 	inc	sp
   005C CDr00s00            118 	call	_putchar
   005F 33                  119 	inc	sp
                            120 ;../gets.c:23: *s=0;
   0060 DD 6E 04            121 	ld	l,4 (ix)
   0063 DD 66 05            122 	ld	h,5 (ix)
   0066 36 00               123 	ld	(hl),#0x00
                            124 ;../gets.c:24: return s;
   0068 18 20               125 	jr	00111$
                            126 ;../gets.c:25: default:
   006A                     127 00106$:
                            128 ;../gets.c:26: *s++=c;
   006A DD 6E 04            129 	ld	l,4 (ix)
   006D DD 66 05            130 	ld	h,5 (ix)
   0070 73                  131 	ld	(hl),e
   0071 7D                  132 	ld	a,l
   0072 C6 01               133 	add	a,#0x01
   0074 DD 77 04            134 	ld	4 (ix),a
   0077 7C                  135 	ld	a,h
   0078 CE 00               136 	adc	a,#0x00
   007A DD 77 05            137 	ld	5 (ix),a
                            138 ;../gets.c:27: count++;
   007D 03                  139 	inc	bc
                            140 ;../gets.c:28: putchar(c);
   007E C5                  141 	push	bc
   007F 7B                  142 	ld	a,e
   0080 F5                  143 	push	af
   0081 33                  144 	inc	sp
   0082 CDr00s00            145 	call	_putchar
   0085 33                  146 	inc	sp
   0086 C1                  147 	pop	bc
                            148 ;../gets.c:30: }
   0087 C3r0Bs00            149 	jp	00109$
   008A                     150 00111$:
   008A DD E1               151 	pop	ix
   008C C9                  152 	ret
   008D                     153 _gets_end::
                            154 	.area _CODE
                            155 	.area _CABS

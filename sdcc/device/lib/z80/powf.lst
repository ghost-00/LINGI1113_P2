                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:26:07 2013
                              5 ;--------------------------------------------------------
                              6 	.module powf
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _powf
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ;  ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; overlayable items in  ram 
                             22 ;--------------------------------------------------------
                             23 	.area _OVERLAY
                             24 ;--------------------------------------------------------
                             25 ; external initialized ram data
                             26 ;--------------------------------------------------------
                             27 ;--------------------------------------------------------
                             28 ; global & static initialisations
                             29 ;--------------------------------------------------------
                             30 	.area _HOME
                             31 	.area _GSINIT
                             32 	.area _GSFINAL
                             33 	.area _GSINIT
                             34 ;--------------------------------------------------------
                             35 ; Home
                             36 ;--------------------------------------------------------
                             37 	.area _HOME
                             38 	.area _HOME
                             39 ;--------------------------------------------------------
                             40 ; code
                             41 ;--------------------------------------------------------
                             42 	.area _CODE
                             43 ;../powf.c:25: float powf(const float x, const float y)
                             44 ;	---------------------------------
                             45 ; Function powf
                             46 ; ---------------------------------
   0000                      47 _powf_start::
   0000                      48 _powf:
   0000 DD E5                49 	push	ix
   0002 DD 21 00 00          50 	ld	ix,#0
   0006 DD 39                51 	add	ix,sp
                             52 ;../powf.c:27: if(y == 0.0) return 1.0;
   0008 DD 7E 08             53 	ld	a,8 (ix)
   000B DD B6 09             54 	or	a,9 (ix)
   000E DD B6 0A             55 	or	a,10 (ix)
   0011 DD B6 0B             56 	or	a,11 (ix)
   0014 20 09                57 	jr	NZ,00102$
   0016 21 00 00             58 	ld	hl,#0x0000
   0019 11 80 3F             59 	ld	de,#0x3F80
   001C C3rB0s00             60 	jp	00107$
   001F                      61 00102$:
                             62 ;../powf.c:28: if(y==1.0) return x;
   001F 21 80 3F             63 	ld	hl,#0x3F80
   0022 E5                   64 	push	hl
   0023 21 00 00             65 	ld	hl,#0x0000
   0026 E5                   66 	push	hl
   0027 DD 6E 0A             67 	ld	l,10 (ix)
   002A DD 66 0B             68 	ld	h,11 (ix)
   002D E5                   69 	push	hl
   002E DD 6E 08             70 	ld	l,8 (ix)
   0031 DD 66 09             71 	ld	h,9 (ix)
   0034 E5                   72 	push	hl
   0035 CDr00s00             73 	call	___fseq
   0038 F1                   74 	pop	af
   0039 F1                   75 	pop	af
   003A F1                   76 	pop	af
   003B F1                   77 	pop	af
   003C AF                   78 	xor	a,a
   003D B5                   79 	or	a,l
   003E 28 0F                80 	jr	Z,00104$
   0040 DD 6E 04             81 	ld	l,4 (ix)
   0043 DD 66 05             82 	ld	h,5 (ix)
   0046 DD 5E 06             83 	ld	e,6 (ix)
   0049 DD 56 07             84 	ld	d,7 (ix)
   004C C3rB0s00             85 	jp	00107$
   004F                      86 00104$:
                             87 ;../powf.c:29: if(x <= 0.0) return 0.0;
   004F 21 00 00             88 	ld	hl,#0x0000
   0052 E5                   89 	push	hl
   0053 21 00 00             90 	ld	hl,#0x0000
   0056 E5                   91 	push	hl
   0057 DD 6E 06             92 	ld	l,6 (ix)
   005A DD 66 07             93 	ld	h,7 (ix)
   005D E5                   94 	push	hl
   005E DD 6E 04             95 	ld	l,4 (ix)
   0061 DD 66 05             96 	ld	h,5 (ix)
   0064 E5                   97 	push	hl
   0065 CDr00s00             98 	call	___fsgt
   0068 F1                   99 	pop	af
   0069 F1                  100 	pop	af
   006A F1                  101 	pop	af
   006B F1                  102 	pop	af
   006C AF                  103 	xor	a,a
   006D B5                  104 	or	a,l
   006E 20 07               105 	jr	NZ,00106$
   0070 21 00 00            106 	ld	hl,#0x0000
   0073 5D                  107 	ld	e,l
   0074 54                  108 	ld	d,h
   0075 18 39               109 	jr	00107$
   0077                     110 00106$:
                            111 ;../powf.c:30: return expf(logf(x) * y);
   0077 DD 6E 06            112 	ld	l,6 (ix)
   007A DD 66 07            113 	ld	h,7 (ix)
   007D E5                  114 	push	hl
   007E DD 6E 04            115 	ld	l,4 (ix)
   0081 DD 66 05            116 	ld	h,5 (ix)
   0084 E5                  117 	push	hl
   0085 CDr00s00            118 	call	_logf
   0088 F1                  119 	pop	af
   0089 F1                  120 	pop	af
   008A 44                  121 	ld	b,h
   008B 4D                  122 	ld	c,l
   008C DD 6E 0A            123 	ld	l,10 (ix)
   008F DD 66 0B            124 	ld	h,11 (ix)
   0092 E5                  125 	push	hl
   0093 DD 6E 08            126 	ld	l,8 (ix)
   0096 DD 66 09            127 	ld	h,9 (ix)
   0099 E5                  128 	push	hl
   009A D5                  129 	push	de
   009B C5                  130 	push	bc
   009C CDr00s00            131 	call	___fsmul
   009F F1                  132 	pop	af
   00A0 F1                  133 	pop	af
   00A1 F1                  134 	pop	af
   00A2 F1                  135 	pop	af
   00A3 44                  136 	ld	b,h
   00A4 4D                  137 	ld	c,l
   00A5 D5                  138 	push	de
   00A6 C5                  139 	push	bc
   00A7 CDr00s00            140 	call	_expf
   00AA F1                  141 	pop	af
   00AB F1                  142 	pop	af
   00AC 44                  143 	ld	b,h
   00AD 4D                  144 	ld	c,l
   00AE 69                  145 	ld	l,c
   00AF 60                  146 	ld	h,b
   00B0                     147 00107$:
   00B0 DD E1               148 	pop	ix
   00B2 C9                  149 	ret
   00B3                     150 _powf_end::
                            151 	.area _CODE
                            152 	.area _CABS

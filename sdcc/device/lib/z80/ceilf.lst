                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:26:08 2013
                              5 ;--------------------------------------------------------
                              6 	.module ceilf
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _ceilf
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ;  ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; overlayable items in  ram 
                             22 ;--------------------------------------------------------
                             23 	.area _OVERLAY
                             24 ;--------------------------------------------------------
                             25 ; external initialized ram data
                             26 ;--------------------------------------------------------
                             27 ;--------------------------------------------------------
                             28 ; global & static initialisations
                             29 ;--------------------------------------------------------
                             30 	.area _HOME
                             31 	.area _GSINIT
                             32 	.area _GSFINAL
                             33 	.area _GSINIT
                             34 ;--------------------------------------------------------
                             35 ; Home
                             36 ;--------------------------------------------------------
                             37 	.area _HOME
                             38 	.area _HOME
                             39 ;--------------------------------------------------------
                             40 ; code
                             41 ;--------------------------------------------------------
                             42 	.area _CODE
                             43 ;../ceilf.c:23: float ceilf(float x) _FLOAT_FUNC_REENTRANT
                             44 ;	---------------------------------
                             45 ; Function ceilf
                             46 ; ---------------------------------
   0000                      47 _ceilf_start::
   0000                      48 _ceilf:
   0000 DD E5                49 	push	ix
   0002 DD 21 00 00          50 	ld	ix,#0
   0006 DD 39                51 	add	ix,sp
   0008 21 F8 FF             52 	ld	hl,#-8
   000B 39                   53 	add	hl,sp
   000C F9                   54 	ld	sp,hl
                             55 ;../ceilf.c:26: r=x;
   000D DD 6E 06             56 	ld	l,6 (ix)
   0010 DD 66 07             57 	ld	h,7 (ix)
   0013 E5                   58 	push	hl
   0014 DD 6E 04             59 	ld	l,4 (ix)
   0017 DD 66 05             60 	ld	h,5 (ix)
   001A E5                   61 	push	hl
   001B CDr00s00             62 	call	___fs2slong
   001E F1                   63 	pop	af
   001F F1                   64 	pop	af
   0020 44                   65 	ld	b,h
   0021 4D                   66 	ld	c,l
   0022 DD 71 FC             67 	ld	-4 (ix),c
   0025 DD 70 FD             68 	ld	-3 (ix),b
   0028 DD 73 FE             69 	ld	-2 (ix),e
                             70 ;../ceilf.c:27: if (r<0)
   002B DD 72 FF             71 	ld	-1 (ix),d
   002E 7A                   72 	ld	a, d
   002F CB 7F                73 	bit	7,a
   0031 28 2B                74 	jr	Z,00102$
                             75 ;../ceilf.c:28: return r;
   0033 DD 6E FE             76 	ld	l,-2 (ix)
   0036 DD 66 FF             77 	ld	h,-1 (ix)
   0039 E5                   78 	push	hl
   003A DD 6E FC             79 	ld	l,-4 (ix)
   003D DD 66 FD             80 	ld	h,-3 (ix)
   0040 E5                   81 	push	hl
   0041 CDr00s00             82 	call	___slong2fs
   0044 F1                   83 	pop	af
   0045 F1                   84 	pop	af
   0046 DD 72 FB             85 	ld	-5 (ix),d
   0049 DD 73 FA             86 	ld	-6 (ix),e
   004C DD 74 F9             87 	ld	-7 (ix),h
   004F DD 75 F8             88 	ld	-8 (ix),l
   0052 DD 66 F9             89 	ld	h,-7 (ix)
   0055 DD 5E FA             90 	ld	e,-6 (ix)
   0058 DD 56 FB             91 	ld	d,-5 (ix)
   005B C3rBDs00             92 	jp	00104$
   005E                      93 00102$:
                             94 ;../ceilf.c:30: return (r+((r<x)?1:0));
   005E DD 6E FE             95 	ld	l,-2 (ix)
   0061 DD 66 FF             96 	ld	h,-1 (ix)
   0064 E5                   97 	push	hl
   0065 DD 6E FC             98 	ld	l,-4 (ix)
   0068 DD 66 FD             99 	ld	h,-3 (ix)
   006B E5                  100 	push	hl
   006C CDr00s00            101 	call	___slong2fs
   006F F1                  102 	pop	af
   0070 F1                  103 	pop	af
   0071 44                  104 	ld	b,h
   0072 4D                  105 	ld	c,l
   0073 DD 6E 06            106 	ld	l,6 (ix)
   0076 DD 66 07            107 	ld	h,7 (ix)
   0079 E5                  108 	push	hl
   007A DD 6E 04            109 	ld	l,4 (ix)
   007D DD 66 05            110 	ld	h,5 (ix)
   0080 E5                  111 	push	hl
   0081 D5                  112 	push	de
   0082 C5                  113 	push	bc
   0083 CDr00s00            114 	call	___fslt
   0086 F1                  115 	pop	af
   0087 F1                  116 	pop	af
   0088 F1                  117 	pop	af
   0089 F1                  118 	pop	af
   008A AF                  119 	xor	a,a
   008B B5                  120 	or	a,l
   008C 28 04               121 	jr	Z,00106$
   008E 0E 01               122 	ld	c,#0x01
   0090 18 02               123 	jr	00107$
   0092                     124 00106$:
   0092 0E 00               125 	ld	c,#0x00
   0094                     126 00107$:
   0094 69                  127 	ld	l,c
   0095 26 00               128 	ld	h,#0x00
   0097 4D                  129 	ld	c,l
   0098 7C                  130 	ld	a,h
   0099 47                  131 	ld	b,a
   009A 17                  132 	rla	
   009B 9F                  133 	sbc	a,a
   009C 5F                  134 	ld	e,a
   009D 57                  135 	ld	d,a
   009E DD 7E FC            136 	ld	a,-4 (ix)
   00A1 81                  137 	add	a,c
   00A2 4F                  138 	ld	c,a
   00A3 DD 7E FD            139 	ld	a,-3 (ix)
   00A6 88                  140 	adc	a,b
   00A7 47                  141 	ld	b,a
   00A8 DD 7E FE            142 	ld	a,-2 (ix)
   00AB 8B                  143 	adc	a,e
   00AC 5F                  144 	ld	e,a
   00AD DD 7E FF            145 	ld	a,-1 (ix)
   00B0 8A                  146 	adc	a,d
   00B1 57                  147 	ld	d,a
   00B2 D5                  148 	push	de
   00B3 C5                  149 	push	bc
   00B4 CDr00s00            150 	call	___slong2fs
   00B7 F1                  151 	pop	af
   00B8 F1                  152 	pop	af
   00B9 44                  153 	ld	b,h
   00BA 4D                  154 	ld	c,l
   00BB 69                  155 	ld	l,c
   00BC 60                  156 	ld	h,b
   00BD                     157 00104$:
   00BD DD F9               158 	ld	sp,ix
   00BF DD E1               159 	pop	ix
   00C1 C9                  160 	ret
   00C2                     161 _ceilf_end::
                            162 	.area _CODE
                            163 	.area _CABS

                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:26:09 2013
                              5 ;--------------------------------------------------------
                              6 	.module _malloc
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl __sdcc_heap_init
                             13 	.globl _malloc
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ;  ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; overlayable items in  ram 
                             23 ;--------------------------------------------------------
                             24 	.area _OVERLAY
                             25 ;--------------------------------------------------------
                             26 ; external initialized ram data
                             27 ;--------------------------------------------------------
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 	.area _HOME
                             40 ;--------------------------------------------------------
                             41 ; code
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 ;../_malloc.c:51: _sdcc_heap_init(void)
                             45 ;	---------------------------------
                             46 ; Function _sdcc_heap_init
                             47 ; ---------------------------------
   0000                      48 __sdcc_heap_init_start::
   0000                      49 __sdcc_heap_init:
                             50 ;../_malloc.c:53: MEMHEADER *pbase = &_sdcc_heap_start;
                             51 ;../_malloc.c:54: unsigned int size = &_sdcc_heap_end - (char *)pbase;
   0000 3Er00                52 	ld	a,#<(__sdcc_heap_end)
   0002 D6r00                53 	sub	a,#<(__sdcc_heap_start)
   0004 6F                   54 	ld	l,a
   0005 3Es00                55 	ld	a,#>(__sdcc_heap_end)
   0007 DEs00                56 	sbc	a,#>(__sdcc_heap_start)
   0009 67                   57 	ld	h,a
                             58 ;../_malloc.c:56: pbase->next = (MEMHEADER *)((char *)pbase + size - HEADER_SIZE);
   000A 3Er00                59 	ld	a,#<(__sdcc_heap_start)
   000C 85                   60 	add	a,l
   000D 4F                   61 	ld	c,a
   000E 3Es00                62 	ld	a,#>(__sdcc_heap_start)
   0010 8C                   63 	adc	a,h
   0011 47                   64 	ld	b,a
   0012 79                   65 	ld	a,c
   0013 C6 FA                66 	add	a,#0xFA
   0015 4F                   67 	ld	c,a
   0016 78                   68 	ld	a,b
   0017 CE FF                69 	adc	a,#0xFF
   0019 47                   70 	ld	b,a
   001A 21r00s00             71 	ld	hl,#__sdcc_heap_start
   001D 71                   72 	ld	(hl),c
   001E 23                   73 	inc	hl
   001F 70                   74 	ld	(hl),b
                             75 ;../_malloc.c:57: pbase->next->next = NULL; //And mark it as last
   0020 69                   76 	ld	l,c
   0021 60                   77 	ld	h,b
   0022 36 00                78 	ld	(hl),#0x00
   0024 23                   79 	inc	hl
   0025 36 00                80 	ld	(hl),#0x00
                             81 ;../_malloc.c:58: pbase->prev       = NULL; //and mark first as first
   0027 21r02s00             82 	ld	hl,#0x0002 + __sdcc_heap_start
   002A 36 00                83 	ld	(hl),#0x00
   002C 23                   84 	inc	hl
   002D 36 00                85 	ld	(hl),#0x00
                             86 ;../_malloc.c:59: pbase->len        = 0;    //Empty and ready.
   002F 21r04s00             87 	ld	hl,#0x0004 + __sdcc_heap_start
   0032 36 00                88 	ld	(hl),#0x00
   0034 23                   89 	inc	hl
   0035 36 00                90 	ld	(hl),#0x00
   0037 C9                   91 	ret
   0038                      92 __sdcc_heap_init_end::
                             93 ;../_malloc.c:63: malloc (unsigned int size)
                             94 ;	---------------------------------
                             95 ; Function malloc
                             96 ; ---------------------------------
   0038                      97 _malloc_start::
   0038                      98 _malloc:
   0038 DD E5                99 	push	ix
   003A DD 21 00 00         100 	ld	ix,#0
   003E DD 39               101 	add	ix,sp
   0040 21 FA FF            102 	ld	hl,#-6
   0043 39                  103 	add	hl,sp
   0044 F9                  104 	ld	sp,hl
                            105 ;../_malloc.c:69: if (size>(0xFFFF-HEADER_SIZE))
   0045 3E F9               106 	ld	a,#0xF9
   0047 DD 96 04            107 	sub	a,4 (ix)
   004A 3E FF               108 	ld	a,#0xFF
   004C DD 9E 05            109 	sbc	a,5 (ix)
   004F 30 06               110 	jr	NC,00102$
                            111 ;../_malloc.c:71: return NULL; //To prevent overflow in next line
   0051 21 00 00            112 	ld	hl,#0x0000
   0054 C3r8Fs01            113 	jp	00117$
   0057                     114 00102$:
                            115 ;../_malloc.c:74: size += HEADER_SIZE; //We need a memory for header too
   0057 DD 7E 04            116 	ld	a,4 (ix)
   005A C6 06               117 	add	a,#0x06
   005C DD 77 04            118 	ld	4 (ix),a
   005F DD 7E 05            119 	ld	a,5 (ix)
   0062 CE 00               120 	adc	a,#0x00
   0064 DD 77 05            121 	ld	5 (ix),a
                            122 ;../_malloc.c:75: current_header = &_sdcc_heap_start;
   0067 DD 36 FEr00         123 	ld	-2 (ix),#<(__sdcc_heap_start)
   006B DD 36 FFs00         124 	ld	-1 (ix),#>(__sdcc_heap_start)
                            125 ;../_malloc.c:124: }
   006F ED 57               126 	ld	a,i
   0071 F3                  127 	di
   0072 F5                  128 	push	af
                            129 ;../_malloc.c:79: while (1)
   0073                     130 00108$:
                            131 ;../_malloc.c:88: if ((((unsigned int)current_header->next) -
   0073 DD 6E FE            132 	ld	l,-2 (ix)
   0076 DD 66 FF            133 	ld	h,-1 (ix)
   0079 5E                  134 	ld	e,(hl)
   007A 23                  135 	inc	hl
   007B 56                  136 	ld	d,(hl)
   007C 6B                  137 	ld	l,e
   007D 62                  138 	ld	h,d
                            139 ;../_malloc.c:89: ((unsigned int)current_header) -
   007E DD 4E FE            140 	ld	c,-2 (ix)
   0081 DD 46 FF            141 	ld	b,-1 (ix)
   0084 7D                  142 	ld	a,l
   0085 91                  143 	sub	a,c
   0086 DD 77 FA            144 	ld	-6 (ix),a
   0089 7C                  145 	ld	a,h
   008A 98                  146 	sbc	a,b
   008B DD 77 FB            147 	ld	-5 (ix),a
                            148 ;../_malloc.c:90: current_header->len) >= size)
   008E DD 7E FE            149 	ld	a,-2 (ix)
   0091 C6 04               150 	add	a,#0x04
   0093 6F                  151 	ld	l, a
   0094 DD 7E FF            152 	ld	a, -1 (ix)
   0097 CE 00               153 	adc	a, #0x00
   0099 67                  154 	ld	h,a
   009A 7E                  155 	ld	a,(hl)
   009B 23                  156 	inc	hl
   009C 66                  157 	ld	h,(hl)
   009D 6F                  158 	ld	l,a
   009E DD 7E FA            159 	ld	a,-6 (ix)
   00A1 95                  160 	sub	a,l
   00A2 6F                  161 	ld	l,a
   00A3 DD 7E FB            162 	ld	a,-5 (ix)
   00A6 9C                  163 	sbc	a,h
   00A7 67                  164 	ld	h,a
   00A8 7D                  165 	ld	a,l
   00A9 DD 96 04            166 	sub	a,4 (ix)
   00AC 7C                  167 	ld	a,h
   00AD DD 9E 05            168 	sbc	a,5 (ix)
   00B0 38 0E               169 	jr	C,00104$
                            170 ;../_malloc.c:92: ret = &current_header->mem;
   00B2 DD 7E FE            171 	ld	a,-2 (ix)
   00B5 C6 06               172 	add	a,#0x06
   00B7 4F                  173 	ld	c,a
   00B8 DD 7E FF            174 	ld	a,-1 (ix)
   00BB CE 00               175 	adc	a,#0x00
   00BD 47                  176 	ld	b,a
                            177 ;../_malloc.c:93: break;
   00BE 18 13               178 	jr	00109$
   00C0                     179 00104$:
                            180 ;../_malloc.c:95: current_header = current_header->next;    //else try next
   00C0 6B                  181 	ld	l,e
   00C1 62                  182 	ld	h,d
                            183 ;../_malloc.c:96: if (!current_header->next)
   00C2 DD 75 FE            184 	ld	-2 (ix),l
   00C5 DD 74 FF            185 	ld	-1 (ix),h
   00C8 7E                  186 	ld	a,(hl)
   00C9 23                  187 	inc	hl
   00CA 66                  188 	ld	h,(hl)
   00CB 6F                  189 	ld	l,a
   00CC B4                  190 	or	a,h
   00CD C2r73s00            191 	jp	NZ,00108$
                            192 ;../_malloc.c:98: ret = NULL;
   00D0 01 00 00            193 	ld	bc,#0x0000
                            194 ;../_malloc.c:99: break;
   00D3                     195 00109$:
                            196 ;../_malloc.c:103: if (ret)
   00D3 79                  197 	ld	a,c
   00D4 B0                  198 	or	a,b
   00D5 CAr88s01            199 	jp	Z,00116$
                            200 ;../_malloc.c:105: if (!current_header->len)
   00D8 DD 7E FE            201 	ld	a,-2 (ix)
   00DB C6 04               202 	add	a,#0x04
   00DD 5F                  203 	ld	e,a
   00DE DD 7E FF            204 	ld	a,-1 (ix)
   00E1 CE 00               205 	adc	a,#0x00
   00E3 57                  206 	ld	d,a
   00E4 6B                  207 	ld	l,e
   00E5 67                  208 	ld	h,a
   00E6 7E                  209 	ld	a,(hl)
   00E7 DD 77 FA            210 	ld	-6 (ix),a
   00EA 23                  211 	inc	hl
   00EB 7E                  212 	ld	a,(hl)
   00EC DD 77 FB            213 	ld	-5 (ix),a
   00EF DD 7E FA            214 	ld	a,-6 (ix)
   00F2 DD B6 FB            215 	or	a,-5 (ix)
   00F5 20 0E               216 	jr	NZ,00113$
                            217 ;../_malloc.c:107: current_header->len = size; //for first allocation
   00F7 6B                  218 	ld	l,e
   00F8 62                  219 	ld	h,d
   00F9 DD 7E 04            220 	ld	a,4 (ix)
   00FC 77                  221 	ld	(hl),a
   00FD 23                  222 	inc	hl
   00FE DD 7E 05            223 	ld	a,5 (ix)
   0101 77                  224 	ld	(hl),a
   0102 C3r88s01            225 	jp	00116$
   0105                     226 00113$:
                            227 ;../_malloc.c:112: new_header = (MEMHEADER * )((char *)current_header + current_header->len);
   0105 DD 7E FE            228 	ld	a,-2 (ix)
   0108 DD 86 FA            229 	add	a,-6 (ix)
   010B 5F                  230 	ld	e,a
   010C DD 7E FF            231 	ld	a,-1 (ix)
   010F DD 8E FB            232 	adc	a,-5 (ix)
   0112 57                  233 	ld	d,a
   0113 DD 73 FC            234 	ld	-4 (ix),e
   0116 DD 72 FD            235 	ld	-3 (ix),d
                            236 ;../_malloc.c:113: new_header->next = current_header->next; //and plug it into the chain
   0119 DD 6E FE            237 	ld	l,-2 (ix)
   011C DD 66 FF            238 	ld	h,-1 (ix)
   011F 4E                  239 	ld	c,(hl)
   0120 23                  240 	inc	hl
   0121 46                  241 	ld	b,(hl)
   0122 DD 6E FC            242 	ld	l,-4 (ix)
   0125 DD 66 FD            243 	ld	h,-3 (ix)
   0128 71                  244 	ld	(hl),c
   0129 23                  245 	inc	hl
   012A 70                  246 	ld	(hl),b
                            247 ;../_malloc.c:114: new_header->prev = current_header;
   012B DD 5E FC            248 	ld	e,-4 (ix)
   012E DD 56 FD            249 	ld	d,-3 (ix)
   0131 EB                  250 	ex	de,hl
   0132 23                  251 	inc	hl
   0133 23                  252 	inc	hl
   0134 DD 7E FE            253 	ld	a,-2 (ix)
   0137 77                  254 	ld	(hl),a
   0138 23                  255 	inc	hl
   0139 DD 7E FF            256 	ld	a,-1 (ix)
   013C 77                  257 	ld	(hl),a
                            258 ;../_malloc.c:115: current_header->next  = new_header;
   013D DD 6E FE            259 	ld	l,-2 (ix)
   0140 DD 66 FF            260 	ld	h,-1 (ix)
   0143 DD 7E FC            261 	ld	a,-4 (ix)
   0146 77                  262 	ld	(hl),a
   0147 23                  263 	inc	hl
   0148 DD 7E FD            264 	ld	a,-3 (ix)
   014B 77                  265 	ld	(hl),a
                            266 ;../_malloc.c:116: if (new_header->next)
   014C DD 6E FC            267 	ld	l,-4 (ix)
   014F DD 66 FD            268 	ld	h,-3 (ix)
   0152 7E                  269 	ld	a,(hl)
   0153 23                  270 	inc	hl
   0154 66                  271 	ld	h,(hl)
   0155 6F                  272 	ld	l,a
   0156 79                  273 	ld	a,c
   0157 B0                  274 	or	a,b
   0158 28 0B               275 	jr	Z,00111$
                            276 ;../_malloc.c:118: new_header->next->prev = new_header;
   015A 23                  277 	inc	hl
   015B 23                  278 	inc	hl
   015C DD 7E FC            279 	ld	a,-4 (ix)
   015F 77                  280 	ld	(hl),a
   0160 23                  281 	inc	hl
   0161 DD 7E FD            282 	ld	a,-3 (ix)
   0164 77                  283 	ld	(hl),a
   0165                     284 00111$:
                            285 ;../_malloc.c:120: new_header->len  = size; //mark as used
   0165 DD 7E FC            286 	ld	a,-4 (ix)
   0168 C6 04               287 	add	a,#0x04
   016A 5F                  288 	ld	e,a
   016B DD 7E FD            289 	ld	a,-3 (ix)
   016E CE 00               290 	adc	a,#0x00
   0170 57                  291 	ld	d,a
   0171 6B                  292 	ld	l,e
   0172 67                  293 	ld	h,a
   0173 DD 7E 04            294 	ld	a,4 (ix)
   0176 77                  295 	ld	(hl),a
   0177 23                  296 	inc	hl
   0178 DD 7E 05            297 	ld	a,5 (ix)
   017B 77                  298 	ld	(hl),a
                            299 ;../_malloc.c:121: ret = &new_header->mem;
   017C DD 7E FC            300 	ld	a,-4 (ix)
   017F C6 06               301 	add	a,#0x06
   0181 4F                  302 	ld	c,a
   0182 DD 7E FD            303 	ld	a,-3 (ix)
   0185 CE 00               304 	adc	a,#0x00
   0187 47                  305 	ld	b,a
   0188                     306 00116$:
   0188 F1                  307 	pop	af
   0189 E2r8Ds01            308 	jp	PO,00127$
   018C FB                  309 	ei
   018D                     310 00127$:
                            311 ;../_malloc.c:125: return ret;
   018D 69                  312 	ld	l,c
   018E 60                  313 	ld	h,b
   018F                     314 00117$:
   018F DD F9               315 	ld	sp,ix
   0191 DD E1               316 	pop	ix
   0193 C9                  317 	ret
   0194                     318 _malloc_end::
                            319 	.area _CODE
                            320 	.area _CABS

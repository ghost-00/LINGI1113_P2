                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:26:10 2013
                              5 ;--------------------------------------------------------
                              6 	.module vprintf
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _vprintf
                             13 	.globl _printf
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ;  ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; overlayable items in  ram 
                             23 ;--------------------------------------------------------
                             24 	.area _OVERLAY
                             25 ;--------------------------------------------------------
                             26 ; external initialized ram data
                             27 ;--------------------------------------------------------
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 	.area _HOME
                             40 ;--------------------------------------------------------
                             41 ; code
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 ;../vprintf.c:29: static void put_char_to_stdout( char c, void* p ) _REENTRANT
                             45 ;	---------------------------------
                             46 ; Function put_char_to_stdout
                             47 ; ---------------------------------
   0000                      48 _put_char_to_stdout:
   0000 DD E5                49 	push	ix
   0002 DD 21 00 00          50 	ld	ix,#0
   0006 DD 39                51 	add	ix,sp
                             52 ;../vprintf.c:32: putchar( c );
   0008 DD 7E 04             53 	ld	a,4 (ix)
   000B F5                   54 	push	af
   000C 33                   55 	inc	sp
   000D CDr00s00             56 	call	_putchar
   0010 33                   57 	inc	sp
   0011 DD E1                58 	pop	ix
   0013 C9                   59 	ret
                             60 ;../vprintf.c:35: int vprintf (const char *format, va_list ap)
                             61 ;	---------------------------------
                             62 ; Function vprintf
                             63 ; ---------------------------------
   0014                      64 _vprintf_start::
   0014                      65 _vprintf:
   0014 DD E5                66 	push	ix
   0016 DD 21 00 00          67 	ld	ix,#0
   001A DD 39                68 	add	ix,sp
                             69 ;../vprintf.c:37: return _print_format( put_char_to_stdout, NULL, format, ap );
   001C DD 6E 06             70 	ld	l,6 (ix)
   001F DD 66 07             71 	ld	h,7 (ix)
   0022 E5                   72 	push	hl
   0023 DD 6E 04             73 	ld	l,4 (ix)
   0026 DD 66 05             74 	ld	h,5 (ix)
   0029 E5                   75 	push	hl
   002A 21 00 00             76 	ld	hl,#0x0000
   002D E5                   77 	push	hl
   002E 21r00s00             78 	ld	hl,#_put_char_to_stdout
   0031 E5                   79 	push	hl
   0032 CDr00s00             80 	call	__print_format
   0035 F1                   81 	pop	af
   0036 F1                   82 	pop	af
   0037 F1                   83 	pop	af
   0038 F1                   84 	pop	af
   0039 DD E1                85 	pop	ix
   003B C9                   86 	ret
   003C                      87 _vprintf_end::
                             88 ;../vprintf.c:40: int printf (const char *format, ...)
                             89 ;	---------------------------------
                             90 ; Function printf
                             91 ; ---------------------------------
   003C                      92 _printf_start::
   003C                      93 _printf:
   003C DD E5                94 	push	ix
   003E DD 21 00 00          95 	ld	ix,#0
   0042 DD 39                96 	add	ix,sp
                             97 ;../vprintf.c:45: va_start (arg, format);
   0044 21 04 00             98 	ld	hl,#0x0004
   0047 39                   99 	add	hl,sp
   0048 23                  100 	inc	hl
   0049 23                  101 	inc	hl
                            102 ;../vprintf.c:46: i = _print_format( put_char_to_stdout, NULL, format, arg );
   004A E5                  103 	push	hl
   004B DD 6E 04            104 	ld	l,4 (ix)
   004E DD 66 05            105 	ld	h,5 (ix)
   0051 E5                  106 	push	hl
   0052 21 00 00            107 	ld	hl,#0x0000
   0055 E5                  108 	push	hl
   0056 21r00s00            109 	ld	hl,#_put_char_to_stdout
   0059 E5                  110 	push	hl
   005A CDr00s00            111 	call	__print_format
   005D F1                  112 	pop	af
   005E F1                  113 	pop	af
   005F F1                  114 	pop	af
   0060 F1                  115 	pop	af
                            116 ;../vprintf.c:49: return i;
   0061 DD E1               117 	pop	ix
   0063 C9                  118 	ret
   0064                     119 _printf_end::
                            120 	.area _CODE
                            121 	.area _CABS

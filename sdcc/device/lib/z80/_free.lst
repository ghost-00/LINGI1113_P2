                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:26:09 2013
                              5 ;--------------------------------------------------------
                              6 	.module _free
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl __sdcc_find_memheader
                             13 	.globl __sdcc_prev_memheader
                             14 	.globl _free
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ;  ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
   0000                      22 __sdcc_prev_memheader::
   0000                      23 	.ds 2
                             24 ;--------------------------------------------------------
                             25 ; overlayable items in  ram 
                             26 ;--------------------------------------------------------
                             27 	.area _OVERLAY
                             28 ;--------------------------------------------------------
                             29 ; external initialized ram data
                             30 ;--------------------------------------------------------
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _HOME
                             35 	.area _GSINIT
                             36 	.area _GSFINAL
                             37 	.area _GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _HOME
                             42 	.area _HOME
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area _CODE
                             47 ;../_free.c:54: _sdcc_find_memheader(void * p)
                             48 ;	---------------------------------
                             49 ; Function _sdcc_find_memheader
                             50 ; ---------------------------------
   0000                      51 __sdcc_find_memheader_start::
   0000                      52 __sdcc_find_memheader:
   0000 DD E5                53 	push	ix
   0002 DD 21 00 00          54 	ld	ix,#0
   0006 DD 39                55 	add	ix,sp
                             56 ;../_free.c:57: if (!p)
   0008 DD 7E 04             57 	ld	a,4 (ix)
   000B DD B6 05             58 	or	a,5 (ix)
   000E 20 05                59 	jr	NZ,00102$
                             60 ;../_free.c:58: return NULL;
   0010 21 00 00             61 	ld	hl,#0x0000
   0013 18 21                62 	jr	00103$
   0015                      63 00102$:
                             64 ;../_free.c:59: pthis = (MEMHEADER * )((char *)  p - HEADER_SIZE); //to start of header
   0015 DD 6E 04             65 	ld	l,4 (ix)
   0018 DD 66 05             66 	ld	h,5 (ix)
   001B 7D                   67 	ld	a,l
   001C C6 FA                68 	add	a,#0xFA
   001E 4F                   69 	ld	c,a
   001F 7C                   70 	ld	a,h
   0020 CE FF                71 	adc	a,#0xFF
                             72 ;../_free.c:60: _sdcc_prev_memheader = pthis->prev;
   0022 47                   73 	ld	b,a
   0023 69                   74 	ld	l,c
   0024 67                   75 	ld	h,a
   0025 23                   76 	inc	hl
   0026 23                   77 	inc	hl
   0027 7E                   78 	ld	a,(hl)
   0028 FD 21r00s00          79 	ld	iy,#__sdcc_prev_memheader
   002C FD 77 00             80 	ld	0 (iy),a
   002F 23                   81 	inc	hl
   0030 7E                   82 	ld	a,(hl)
   0031 FD 77 01             83 	ld	1 (iy),a
                             84 ;../_free.c:62: return (pthis);
   0034 69                   85 	ld	l,c
   0035 60                   86 	ld	h,b
   0036                      87 00103$:
   0036 DD E1                88 	pop	ix
   0038 C9                   89 	ret
   0039                      90 __sdcc_find_memheader_end::
                             91 ;../_free.c:66: free (void *p)
                             92 ;	---------------------------------
                             93 ; Function free
                             94 ; ---------------------------------
   0039                      95 _free_start::
   0039                      96 _free:
   0039 DD E5                97 	push	ix
   003B DD 21 00 00          98 	ld	ix,#0
   003F DD 39                99 	add	ix,sp
   0041 F5                  100 	push	af
                            101 ;../_free.c:70: if ( p ) //For allocated pointers only!
   0042 DD 7E 04            102 	ld	a,4 (ix)
   0045 DD B6 05            103 	or	a,5 (ix)
   0048 CArA1s00            104 	jp	Z,00108$
                            105 ;../_free.c:87: }
   004B ED 57               106 	ld	a,i
   004D F3                  107 	di
   004E F5                  108 	push	af
                            109 ;../_free.c:73: pthis = (MEMHEADER * )((char *)  p - HEADER_SIZE); //to start of header
   004F DD 6E 04            110 	ld	l,4 (ix)
   0052 DD 66 05            111 	ld	h,5 (ix)
   0055 7D                  112 	ld	a,l
   0056 C6 FA               113 	add	a,#0xFA
   0058 4F                  114 	ld	c,a
   0059 7C                  115 	ld	a,h
   005A CE FF               116 	adc	a,#0xFF
                            117 ;../_free.c:74: if ( pthis->prev ) // For the regular header
   005C 47                  118 	ld	b,a
   005D 59                  119 	ld	e,c
   005E 57                  120 	ld	d,a
   005F 13                  121 	inc	de
   0060 13                  122 	inc	de
   0061 6B                  123 	ld	l,e
   0062 62                  124 	ld	h,d
   0063 7E                  125 	ld	a,(hl)
   0064 23                  126 	inc	hl
   0065 66                  127 	ld	h,(hl)
   0066 6F                  128 	ld	l,a
   0067 B4                  129 	or	a,h
   0068 28 27               130 	jr	Z,00104$
                            131 ;../_free.c:76: prev_header = pthis->prev;
   006A DD 75 FE            132 	ld	-2 (ix),l
   006D DD 74 FF            133 	ld	-1 (ix),h
                            134 ;../_free.c:77: prev_header->next = pthis->next;
   0070 69                  135 	ld	l,c
   0071 60                  136 	ld	h,b
   0072 5E                  137 	ld	e,(hl)
   0073 23                  138 	inc	hl
   0074 56                  139 	ld	d,(hl)
   0075 DD 6E FE            140 	ld	l,-2 (ix)
   0078 DD 66 FF            141 	ld	h,-1 (ix)
   007B 73                  142 	ld	(hl),e
   007C 23                  143 	inc	hl
   007D 72                  144 	ld	(hl),d
                            145 ;../_free.c:78: if (pthis->next)
   007E 7B                  146 	ld	a,e
   007F B2                  147 	or	a,d
   0080 28 1A               148 	jr	Z,00105$
                            149 ;../_free.c:80: pthis->next->prev = prev_header;
   0082 13                  150 	inc	de
   0083 13                  151 	inc	de
   0084 6B                  152 	ld	l,e
   0085 62                  153 	ld	h,d
   0086 DD 7E FE            154 	ld	a,-2 (ix)
   0089 77                  155 	ld	(hl),a
   008A 23                  156 	inc	hl
   008B DD 7E FF            157 	ld	a,-1 (ix)
   008E 77                  158 	ld	(hl),a
   008F 18 0B               159 	jr	00105$
   0091                     160 00104$:
                            161 ;../_free.c:85: pthis->len = 0; //For the first header
   0091 03                  162 	inc	bc
   0092 03                  163 	inc	bc
   0093 03                  164 	inc	bc
   0094 03                  165 	inc	bc
   0095 69                  166 	ld	l,c
   0096 60                  167 	ld	h,b
   0097 36 00               168 	ld	(hl),#0x00
   0099 23                  169 	inc	hl
   009A 36 00               170 	ld	(hl),#0x00
   009C                     171 00105$:
   009C F1                  172 	pop	af
   009D E2rA1s00            173 	jp	PO,00114$
   00A0 FB                  174 	ei
   00A1                     175 00114$:
   00A1                     176 00108$:
   00A1 DD F9               177 	ld	sp,ix
   00A3 DD E1               178 	pop	ix
   00A5 C9                  179 	ret
   00A6                     180 _free_end::
                            181 	.area _CODE
                            182 	.area _CABS

                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:25:55 2013
                              5 ;--------------------------------------------------------
                              6 	.module _free
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl __sdcc_find_memheader
                             13 	.globl __sdcc_prev_memheader
                             14 	.globl _free
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 	.area RSEG    (ABS,DATA)
   0000                      19 	.org 0x0000
                             20 ;--------------------------------------------------------
                             21 ; special function bits
                             22 ;--------------------------------------------------------
                             23 	.area RSEG    (ABS,DATA)
   0000                      24 	.org 0x0000
                             25 ;--------------------------------------------------------
                             26 ; overlayable register banks
                             27 ;--------------------------------------------------------
                             28 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      29 	.ds 8
                             30 ;--------------------------------------------------------
                             31 ; internal ram data
                             32 ;--------------------------------------------------------
                             33 	.area DSEG    (DATA)
                             34 ;--------------------------------------------------------
                             35 ; overlayable items in internal ram 
                             36 ;--------------------------------------------------------
                             37 	.area OSEG    (OVR,DATA)
                             38 ;--------------------------------------------------------
                             39 ; indirectly addressable internal ram data
                             40 ;--------------------------------------------------------
                             41 	.area ISEG    (DATA)
                             42 ;--------------------------------------------------------
                             43 ; absolute internal ram data
                             44 ;--------------------------------------------------------
                             45 	.area IABS    (ABS,DATA)
                             46 	.area IABS    (ABS,DATA)
                             47 ;--------------------------------------------------------
                             48 ; bit data
                             49 ;--------------------------------------------------------
                             50 	.area BSEG    (BIT)
                             51 ;--------------------------------------------------------
                             52 ; paged external ram data
                             53 ;--------------------------------------------------------
                             54 	.area PSEG    (PAG,XDATA)
                             55 ;--------------------------------------------------------
                             56 ; external ram data
                             57 ;--------------------------------------------------------
                             58 	.area XSEG    (XDATA)
   0000                      59 __sdcc_prev_memheader::
   0000                      60 	.ds 2
   0002                      61 __sdcc_find_memheader_p_1_1:
   0002                      62 	.ds 2
   0004                      63 __sdcc_find_memheader_cur_header_1_1:
   0004                      64 	.ds 2
   0006                      65 _free_p_1_1:
   0006                      66 	.ds 3
                             67 ;--------------------------------------------------------
                             68 ; absolute external ram data
                             69 ;--------------------------------------------------------
                             70 	.area XABS    (ABS,XDATA)
                             71 ;--------------------------------------------------------
                             72 ; external initialized ram data
                             73 ;--------------------------------------------------------
                             74 	.area XISEG   (XDATA)
                             75 	.area HOME    (CODE)
                             76 	.area GSINIT0 (CODE)
                             77 	.area GSINIT1 (CODE)
                             78 	.area GSINIT2 (CODE)
                             79 	.area GSINIT3 (CODE)
                             80 	.area GSINIT4 (CODE)
                             81 	.area GSINIT5 (CODE)
                             82 	.area GSINIT  (CODE)
                             83 	.area GSFINAL (CODE)
                             84 	.area CSEG    (CODE)
                             85 ;--------------------------------------------------------
                             86 ; global & static initialisations
                             87 ;--------------------------------------------------------
                             88 	.area HOME    (CODE)
                             89 	.area GSINIT  (CODE)
                             90 	.area GSFINAL (CODE)
                             91 	.area GSINIT  (CODE)
                             92 ;--------------------------------------------------------
                             93 ; Home
                             94 ;--------------------------------------------------------
                             95 	.area HOME    (CODE)
                             96 	.area HOME    (CODE)
                             97 ;--------------------------------------------------------
                             98 ; code
                             99 ;--------------------------------------------------------
                            100 	.area CSEG    (CODE)
                            101 ;------------------------------------------------------------
                            102 ;Allocation info for local variables in function '_sdcc_find_memheader'
                            103 ;------------------------------------------------------------
                            104 ;p                         Allocated with name '__sdcc_find_memheader_p_1_1'
                            105 ;pthis                     Allocated with name '__sdcc_find_memheader_pthis_1_1'
                            106 ;cur_header                Allocated with name '__sdcc_find_memheader_cur_header_1_1'
                            107 ;------------------------------------------------------------
                            108 ;	_free.c:121: MEMHEADER __xdata * _sdcc_find_memheader(void __xdata * p)
                            109 ;	-----------------------------------------
                            110 ;	 function _sdcc_find_memheader
                            111 ;	-----------------------------------------
   0000                     112 __sdcc_find_memheader:
                    0002    113 	ar2 = 0x02
                    0003    114 	ar3 = 0x03
                    0004    115 	ar4 = 0x04
                    0005    116 	ar5 = 0x05
                    0006    117 	ar6 = 0x06
                    0007    118 	ar7 = 0x07
                    0000    119 	ar0 = 0x00
                    0001    120 	ar1 = 0x01
   0000 AA 83               121 	mov	r2,dph
   0002 E5 82               122 	mov	a,dpl
   0004 90s00r02            123 	mov	dptr,#__sdcc_find_memheader_p_1_1
   0007 F0                  124 	movx	@dptr,a
   0008 A3                  125 	inc	dptr
   0009 EA                  126 	mov	a,r2
   000A F0                  127 	movx	@dptr,a
                            128 ;	_free.c:126: if (!p)
   000B 90s00r02            129 	mov	dptr,#__sdcc_find_memheader_p_1_1
   000E E0                  130 	movx	a,@dptr
   000F FA                  131 	mov	r2,a
   0010 A3                  132 	inc	dptr
   0011 E0                  133 	movx	a,@dptr
   0012 FB                  134 	mov	r3,a
   0013 4A                  135 	orl	a,r2
   0014 70 04               136 	jnz	00102$
                            137 ;	_free.c:127: return NULL;
   0016 90 00 00            138 	mov	dptr,#0x0000
   0019 22                  139 	ret
   001A                     140 00102$:
                            141 ;	_free.c:129: pthis -= 1; //to start of header
   001A EA                  142 	mov	a,r2
   001B 24 FC               143 	add	a,#0xfc
   001D FA                  144 	mov	r2,a
   001E EB                  145 	mov	a,r3
   001F 34 FF               146 	addc	a,#0xff
   0021 FB                  147 	mov	r3,a
                            148 ;	_free.c:130: cur_header = _sdcc_first_memheader;
   0022 90s00r00            149 	mov	dptr,#__sdcc_first_memheader
   0025 E0                  150 	movx	a,@dptr
   0026 FC                  151 	mov	r4,a
   0027 A3                  152 	inc	dptr
   0028 E0                  153 	movx	a,@dptr
   0029 FD                  154 	mov	r5,a
   002A 90s00r04            155 	mov	dptr,#__sdcc_find_memheader_cur_header_1_1
   002D EC                  156 	mov	a,r4
   002E F0                  157 	movx	@dptr,a
   002F A3                  158 	inc	dptr
   0030 ED                  159 	mov	a,r5
   0031 F0                  160 	movx	@dptr,a
                            161 ;	_free.c:131: _sdcc_prev_memheader = NULL;
   0032 90s00r00            162 	mov	dptr,#__sdcc_prev_memheader
   0035 E4                  163 	clr	a
   0036 F0                  164 	movx	@dptr,a
   0037 A3                  165 	inc	dptr
   0038 F0                  166 	movx	@dptr,a
                            167 ;	_free.c:132: while (cur_header && pthis != cur_header)
   0039                     168 00104$:
   0039 90s00r04            169 	mov	dptr,#__sdcc_find_memheader_cur_header_1_1
   003C E0                  170 	movx	a,@dptr
   003D FC                  171 	mov	r4,a
   003E A3                  172 	inc	dptr
   003F E0                  173 	movx	a,@dptr
   0040 FD                  174 	mov	r5,a
   0041 4C                  175 	orl	a,r4
   0042 60 25               176 	jz	00106$
   0044 EA                  177 	mov	a,r2
   0045 B5 04 06            178 	cjne	a,ar4,00115$
   0048 EB                  179 	mov	a,r3
   0049 B5 05 02            180 	cjne	a,ar5,00115$
   004C 80 1B               181 	sjmp	00106$
   004E                     182 00115$:
                            183 ;	_free.c:134: _sdcc_prev_memheader = cur_header;
   004E 90s00r00            184 	mov	dptr,#__sdcc_prev_memheader
   0051 EC                  185 	mov	a,r4
   0052 F0                  186 	movx	@dptr,a
   0053 A3                  187 	inc	dptr
   0054 ED                  188 	mov	a,r5
   0055 F0                  189 	movx	@dptr,a
                            190 ;	_free.c:135: cur_header = cur_header->next;
   0056 8C 82               191 	mov	dpl,r4
   0058 8D 83               192 	mov	dph,r5
   005A E0                  193 	movx	a,@dptr
   005B FC                  194 	mov	r4,a
   005C A3                  195 	inc	dptr
   005D E0                  196 	movx	a,@dptr
   005E FD                  197 	mov	r5,a
   005F 90s00r04            198 	mov	dptr,#__sdcc_find_memheader_cur_header_1_1
   0062 EC                  199 	mov	a,r4
   0063 F0                  200 	movx	@dptr,a
   0064 A3                  201 	inc	dptr
   0065 ED                  202 	mov	a,r5
   0066 F0                  203 	movx	@dptr,a
   0067 80 D0               204 	sjmp	00104$
   0069                     205 00106$:
                            206 ;	_free.c:137: return (cur_header);
   0069 90s00r04            207 	mov	dptr,#__sdcc_find_memheader_cur_header_1_1
   006C E0                  208 	movx	a,@dptr
   006D FA                  209 	mov	r2,a
   006E A3                  210 	inc	dptr
   006F E0                  211 	movx	a,@dptr
   0070 8A 82               212 	mov	dpl,r2
   0072 F5 83               213 	mov	dph,a
   0074 22                  214 	ret
                            215 ;------------------------------------------------------------
                            216 ;Allocation info for local variables in function 'free'
                            217 ;------------------------------------------------------------
                            218 ;p                         Allocated with name '_free_p_1_1'
                            219 ;pthis                     Allocated with name '_free_pthis_1_1'
                            220 ;------------------------------------------------------------
                            221 ;	_free.c:140: void free (void * p)
                            222 ;	-----------------------------------------
                            223 ;	 function free
                            224 ;	-----------------------------------------
   0075                     225 _free:
   0075 AA F0               226 	mov	r2,b
   0077 AB 83               227 	mov	r3,dph
   0079 E5 82               228 	mov	a,dpl
   007B 90s00r06            229 	mov	dptr,#_free_p_1_1
   007E F0                  230 	movx	@dptr,a
   007F A3                  231 	inc	dptr
   0080 EB                  232 	mov	a,r3
   0081 F0                  233 	movx	@dptr,a
   0082 A3                  234 	inc	dptr
   0083 EA                  235 	mov	a,r2
   0084 F0                  236 	movx	@dptr,a
                            237 ;	_free.c:146: pthis = _sdcc_find_memheader(p);
   0085 90s00r06            238 	mov	dptr,#_free_p_1_1
   0088 E0                  239 	movx	a,@dptr
   0089 FA                  240 	mov	r2,a
   008A A3                  241 	inc	dptr
   008B E0                  242 	movx	a,@dptr
   008C FB                  243 	mov	r3,a
   008D A3                  244 	inc	dptr
   008E E0                  245 	movx	a,@dptr
   008F 8A 82               246 	mov	dpl,r2
   0091 8B 83               247 	mov	dph,r3
   0093 12s00r00            248 	lcall	__sdcc_find_memheader
   0096 AA 82               249 	mov	r2,dpl
   0098 AB 83               250 	mov	r3,dph
                            251 ;	_free.c:147: if (pthis) //For allocated pointers only!
   009A EA                  252 	mov	a,r2
   009B 4B                  253 	orl	a,r3
   009C 60 28               254 	jz	00106$
                            255 ;	_free.c:149: if (!_sdcc_prev_memheader)
   009E 90s00r00            256 	mov	dptr,#__sdcc_prev_memheader
   00A1 E0                  257 	movx	a,@dptr
   00A2 FC                  258 	mov	r4,a
   00A3 A3                  259 	inc	dptr
   00A4 E0                  260 	movx	a,@dptr
   00A5 FD                  261 	mov	r5,a
   00A6 4C                  262 	orl	a,r4
   00A7 70 0B               263 	jnz	00102$
                            264 ;	_free.c:151: pthis->len = 0;
   00A9 8A 82               265 	mov	dpl,r2
   00AB 8B 83               266 	mov	dph,r3
   00AD A3                  267 	inc	dptr
   00AE A3                  268 	inc	dptr
   00AF E4                  269 	clr	a
   00B0 F0                  270 	movx	@dptr,a
   00B1 A3                  271 	inc	dptr
   00B2 F0                  272 	movx	@dptr,a
   00B3 22                  273 	ret
   00B4                     274 00102$:
                            275 ;	_free.c:155: _sdcc_prev_memheader->next = pthis->next;
   00B4 8A 82               276 	mov	dpl,r2
   00B6 8B 83               277 	mov	dph,r3
   00B8 E0                  278 	movx	a,@dptr
   00B9 FA                  279 	mov	r2,a
   00BA A3                  280 	inc	dptr
   00BB E0                  281 	movx	a,@dptr
   00BC FB                  282 	mov	r3,a
   00BD 8C 82               283 	mov	dpl,r4
   00BF 8D 83               284 	mov	dph,r5
   00C1 EA                  285 	mov	a,r2
   00C2 F0                  286 	movx	@dptr,a
   00C3 A3                  287 	inc	dptr
   00C4 EB                  288 	mov	a,r3
   00C5 F0                  289 	movx	@dptr,a
   00C6                     290 00106$:
   00C6 22                  291 	ret
                            292 	.area CSEG    (CODE)
                            293 	.area CONST   (CODE)
                            294 	.area XINIT   (CODE)
                            295 	.area CABS    (ABS,CODE)

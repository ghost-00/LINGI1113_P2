                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:25:56 2013
                              5 ;--------------------------------------------------------
                              6 	.module time
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl ___day
                             13 	.globl ___month
                             14 	.globl _RtcRead
                             15 	.globl _time
                             16 	.globl _asctime
                             17 	.globl _ctime
                             18 	.globl _localtime
                             19 	.globl _gmtime
                             20 	.globl _mktime
                             21 ;--------------------------------------------------------
                             22 ; special function registers
                             23 ;--------------------------------------------------------
                             24 	.area RSEG    (ABS,DATA)
   0000                      25 	.org 0x0000
                             26 ;--------------------------------------------------------
                             27 ; special function bits
                             28 ;--------------------------------------------------------
                             29 	.area RSEG    (ABS,DATA)
   0000                      30 	.org 0x0000
                             31 ;--------------------------------------------------------
                             32 ; overlayable register banks
                             33 ;--------------------------------------------------------
                             34 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      35 	.ds 8
                             36 ;--------------------------------------------------------
                             37 ; internal ram data
                             38 ;--------------------------------------------------------
                             39 	.area DSEG    (DATA)
   0000                      40 _asctime_sloc0_1_0:
   0000                      41 	.ds 2
   0002                      42 _asctime_sloc1_1_0:
   0002                      43 	.ds 2
   0004                      44 _asctime_sloc2_1_0:
   0004                      45 	.ds 2
   0006                      46 _asctime_sloc3_1_0:
   0006                      47 	.ds 2
   0008                      48 _gmtime_sloc0_1_0:
   0008                      49 	.ds 2
   000A                      50 _gmtime_sloc1_1_0:
   000A                      51 	.ds 2
   000C                      52 _gmtime_sloc2_1_0:
   000C                      53 	.ds 4
   0010                      54 _gmtime_sloc3_1_0:
   0010                      55 	.ds 4
   0014                      56 _mktime_sloc0_1_0:
   0014                      57 	.ds 2
   0016                      58 _mktime_sloc1_1_0:
   0016                      59 	.ds 4
   001A                      60 _mktime_sloc2_1_0:
   001A                      61 	.ds 3
   001D                      62 _mktime_sloc3_1_0:
   001D                      63 	.ds 4
                             64 ;--------------------------------------------------------
                             65 ; overlayable items in internal ram 
                             66 ;--------------------------------------------------------
                             67 	.area OSEG    (OVR,DATA)
                             68 ;--------------------------------------------------------
                             69 ; indirectly addressable internal ram data
                             70 ;--------------------------------------------------------
                             71 	.area ISEG    (DATA)
                             72 ;--------------------------------------------------------
                             73 ; absolute internal ram data
                             74 ;--------------------------------------------------------
                             75 	.area IABS    (ABS,DATA)
                             76 	.area IABS    (ABS,DATA)
                             77 ;--------------------------------------------------------
                             78 ; bit data
                             79 ;--------------------------------------------------------
                             80 	.area BSEG    (BIT)
                             81 ;--------------------------------------------------------
                             82 ; paged external ram data
                             83 ;--------------------------------------------------------
                             84 	.area PSEG    (PAG,XDATA)
                             85 ;--------------------------------------------------------
                             86 ; external ram data
                             87 ;--------------------------------------------------------
                             88 	.area XSEG    (XDATA)
   0000                      89 _time_timeptr_1_1:
   0000                      90 	.ds 3
   0003                      91 _time_now_1_1:
   0003                      92 	.ds 12
   000F                      93 _time_t_1_1:
   000F                      94 	.ds 4
   0013                      95 _ascTimeBuffer:
   0013                      96 	.ds 32
   0033                      97 _CheckTime_timeptr_1_1:
   0033                      98 	.ds 3
   0036                      99 _asctime_timeptr_1_1:
   0036                     100 	.ds 3
   0039                     101 _ctime_timep_1_1:
   0039                     102 	.ds 3
   003C                     103 _lastTime:
   003C                     104 	.ds 12
   0048                     105 _localtime_timep_1_1:
   0048                     106 	.ds 3
   004B                     107 _gmtime_timep_1_1:
   004B                     108 	.ds 3
   004E                     109 _gmtime_epoch_1_1:
   004E                     110 	.ds 4
   0052                     111 _gmtime_monthLength_1_1:
   0052                     112 	.ds 1
   0053                     113 _gmtime_days_1_1:
   0053                     114 	.ds 4
   0057                     115 _mktime_timeptr_1_1:
   0057                     116 	.ds 3
   005A                     117 _mktime_seconds_1_1:
   005A                     118 	.ds 4
                            119 ;--------------------------------------------------------
                            120 ; absolute external ram data
                            121 ;--------------------------------------------------------
                            122 	.area XABS    (ABS,XDATA)
                            123 ;--------------------------------------------------------
                            124 ; external initialized ram data
                            125 ;--------------------------------------------------------
                            126 	.area XISEG   (XDATA)
                            127 	.area HOME    (CODE)
                            128 	.area GSINIT0 (CODE)
                            129 	.area GSINIT1 (CODE)
                            130 	.area GSINIT2 (CODE)
                            131 	.area GSINIT3 (CODE)
                            132 	.area GSINIT4 (CODE)
                            133 	.area GSINIT5 (CODE)
                            134 	.area GSINIT  (CODE)
                            135 	.area GSFINAL (CODE)
                            136 	.area CSEG    (CODE)
                            137 ;--------------------------------------------------------
                            138 ; global & static initialisations
                            139 ;--------------------------------------------------------
                            140 	.area HOME    (CODE)
                            141 	.area GSINIT  (CODE)
                            142 	.area GSFINAL (CODE)
                            143 	.area GSINIT  (CODE)
                            144 ;--------------------------------------------------------
                            145 ; Home
                            146 ;--------------------------------------------------------
                            147 	.area HOME    (CODE)
                            148 	.area HOME    (CODE)
                            149 ;--------------------------------------------------------
                            150 ; code
                            151 ;--------------------------------------------------------
                            152 	.area CSEG    (CODE)
                            153 ;------------------------------------------------------------
                            154 ;Allocation info for local variables in function 'RtcRead'
                            155 ;------------------------------------------------------------
                            156 ;timeptr                   Allocated with name '_RtcRead_timeptr_1_1'
                            157 ;------------------------------------------------------------
                            158 ;	time.c:38: unsigned char RtcRead(struct tm *timeptr) {
                            159 ;	-----------------------------------------
                            160 ;	 function RtcRead
                            161 ;	-----------------------------------------
   0000                     162 _RtcRead:
                    0002    163 	ar2 = 0x02
                    0003    164 	ar3 = 0x03
                    0004    165 	ar4 = 0x04
                    0005    166 	ar5 = 0x05
                    0006    167 	ar6 = 0x06
                    0007    168 	ar7 = 0x07
                    0000    169 	ar0 = 0x00
                    0001    170 	ar1 = 0x01
                            171 ;	time.c:41: return 0;
   0000 75 82 00            172 	mov	dpl,#0x00
   0003 22                  173 	ret
                            174 ;------------------------------------------------------------
                            175 ;Allocation info for local variables in function 'time'
                            176 ;------------------------------------------------------------
                            177 ;timeptr                   Allocated with name '_time_timeptr_1_1'
                            178 ;now                       Allocated with name '_time_now_1_1'
                            179 ;t                         Allocated with name '_time_t_1_1'
                            180 ;------------------------------------------------------------
                            181 ;	time.c:46: time_t time(time_t *timeptr) {
                            182 ;	-----------------------------------------
                            183 ;	 function time
                            184 ;	-----------------------------------------
   0004                     185 _time:
   0004 AA F0               186 	mov	r2,b
   0006 AB 83               187 	mov	r3,dph
   0008 E5 82               188 	mov	a,dpl
   000A 90s00r00            189 	mov	dptr,#_time_timeptr_1_1
   000D F0                  190 	movx	@dptr,a
   000E A3                  191 	inc	dptr
   000F EB                  192 	mov	a,r3
   0010 F0                  193 	movx	@dptr,a
   0011 A3                  194 	inc	dptr
   0012 EA                  195 	mov	a,r2
   0013 F0                  196 	movx	@dptr,a
                            197 ;	time.c:48: time_t t=-1;
   0014 90s00r0F            198 	mov	dptr,#_time_t_1_1
   0017 74 FF               199 	mov	a,#0xFF
   0019 F0                  200 	movx	@dptr,a
   001A A3                  201 	inc	dptr
   001B F0                  202 	movx	@dptr,a
   001C A3                  203 	inc	dptr
   001D F0                  204 	movx	@dptr,a
   001E A3                  205 	inc	dptr
   001F F0                  206 	movx	@dptr,a
                            207 ;	time.c:50: if (RtcRead(&now)) {
   0020 90s00r03            208 	mov	dptr,#_time_now_1_1
   0023 75 F0 00            209 	mov	b,#0x00
   0026 12s00r00            210 	lcall	_RtcRead
   0029 E5 82               211 	mov	a,dpl
   002B 60 1E               212 	jz	00102$
                            213 ;	time.c:51: t=mktime(&now);
   002D 90s00r03            214 	mov	dptr,#_time_now_1_1
   0030 75 F0 00            215 	mov	b,#0x00
   0033 12s06r4A            216 	lcall	_mktime
   0036 AA 82               217 	mov	r2,dpl
   0038 AB 83               218 	mov	r3,dph
   003A AC F0               219 	mov	r4,b
   003C FD                  220 	mov	r5,a
   003D 90s00r0F            221 	mov	dptr,#_time_t_1_1
   0040 EA                  222 	mov	a,r2
   0041 F0                  223 	movx	@dptr,a
   0042 A3                  224 	inc	dptr
   0043 EB                  225 	mov	a,r3
   0044 F0                  226 	movx	@dptr,a
   0045 A3                  227 	inc	dptr
   0046 EC                  228 	mov	a,r4
   0047 F0                  229 	movx	@dptr,a
   0048 A3                  230 	inc	dptr
   0049 ED                  231 	mov	a,r5
   004A F0                  232 	movx	@dptr,a
   004B                     233 00102$:
                            234 ;	time.c:53: if (timeptr) {
   004B 90s00r00            235 	mov	dptr,#_time_timeptr_1_1
   004E E0                  236 	movx	a,@dptr
   004F FA                  237 	mov	r2,a
   0050 A3                  238 	inc	dptr
   0051 E0                  239 	movx	a,@dptr
   0052 FB                  240 	mov	r3,a
   0053 A3                  241 	inc	dptr
   0054 E0                  242 	movx	a,@dptr
   0055 FC                  243 	mov	r4,a
   0056 EA                  244 	mov	a,r2
   0057 4B                  245 	orl	a,r3
   0058 4C                  246 	orl	a,r4
   0059 60 27               247 	jz	00104$
                            248 ;	time.c:54: *timeptr=t;
   005B 90s00r0F            249 	mov	dptr,#_time_t_1_1
   005E E0                  250 	movx	a,@dptr
   005F FD                  251 	mov	r5,a
   0060 A3                  252 	inc	dptr
   0061 E0                  253 	movx	a,@dptr
   0062 FE                  254 	mov	r6,a
   0063 A3                  255 	inc	dptr
   0064 E0                  256 	movx	a,@dptr
   0065 FF                  257 	mov	r7,a
   0066 A3                  258 	inc	dptr
   0067 E0                  259 	movx	a,@dptr
   0068 F8                  260 	mov	r0,a
   0069 8A 82               261 	mov	dpl,r2
   006B 8B 83               262 	mov	dph,r3
   006D 8C F0               263 	mov	b,r4
   006F ED                  264 	mov	a,r5
   0070 12s00r00            265 	lcall	__gptrput
   0073 A3                  266 	inc	dptr
   0074 EE                  267 	mov	a,r6
   0075 12s00r00            268 	lcall	__gptrput
   0078 A3                  269 	inc	dptr
   0079 EF                  270 	mov	a,r7
   007A 12s00r00            271 	lcall	__gptrput
   007D A3                  272 	inc	dptr
   007E E8                  273 	mov	a,r0
   007F 12s00r00            274 	lcall	__gptrput
   0082                     275 00104$:
                            276 ;	time.c:56: return t;
   0082 90s00r0F            277 	mov	dptr,#_time_t_1_1
   0085 E0                  278 	movx	a,@dptr
   0086 FA                  279 	mov	r2,a
   0087 A3                  280 	inc	dptr
   0088 E0                  281 	movx	a,@dptr
   0089 FB                  282 	mov	r3,a
   008A A3                  283 	inc	dptr
   008B E0                  284 	movx	a,@dptr
   008C FC                  285 	mov	r4,a
   008D A3                  286 	inc	dptr
   008E E0                  287 	movx	a,@dptr
   008F 8A 82               288 	mov	dpl,r2
   0091 8B 83               289 	mov	dph,r3
   0093 8C F0               290 	mov	b,r4
   0095 22                  291 	ret
                            292 ;------------------------------------------------------------
                            293 ;Allocation info for local variables in function 'CheckTime'
                            294 ;------------------------------------------------------------
                            295 ;timeptr                   Allocated with name '_CheckTime_timeptr_1_1'
                            296 ;------------------------------------------------------------
                            297 ;	time.c:69: static void CheckTime(struct tm *timeptr) {
                            298 ;	-----------------------------------------
                            299 ;	 function CheckTime
                            300 ;	-----------------------------------------
   0096                     301 _CheckTime:
   0096 AA F0               302 	mov	r2,b
   0098 AB 83               303 	mov	r3,dph
   009A E5 82               304 	mov	a,dpl
   009C 90s00r33            305 	mov	dptr,#_CheckTime_timeptr_1_1
   009F F0                  306 	movx	@dptr,a
   00A0 A3                  307 	inc	dptr
   00A1 EB                  308 	mov	a,r3
   00A2 F0                  309 	movx	@dptr,a
   00A3 A3                  310 	inc	dptr
   00A4 EA                  311 	mov	a,r2
   00A5 F0                  312 	movx	@dptr,a
                            313 ;	time.c:80: if (timeptr->tm_sec>59) timeptr->tm_sec=59;
   00A6 90s00r33            314 	mov	dptr,#_CheckTime_timeptr_1_1
   00A9 E0                  315 	movx	a,@dptr
   00AA FA                  316 	mov	r2,a
   00AB A3                  317 	inc	dptr
   00AC E0                  318 	movx	a,@dptr
   00AD FB                  319 	mov	r3,a
   00AE A3                  320 	inc	dptr
   00AF E0                  321 	movx	a,@dptr
   00B0 FC                  322 	mov	r4,a
   00B1 8A 82               323 	mov	dpl,r2
   00B3 8B 83               324 	mov	dph,r3
   00B5 8C F0               325 	mov	b,r4
   00B7 12s00r00            326 	lcall	__gptrget
   00BA FD                  327 	mov  r5,a
   00BB 24 C4               328 	add	a,#0xff - 0x3B
   00BD 50 0B               329 	jnc	00102$
   00BF 8A 82               330 	mov	dpl,r2
   00C1 8B 83               331 	mov	dph,r3
   00C3 8C F0               332 	mov	b,r4
   00C5 74 3B               333 	mov	a,#0x3B
   00C7 12s00r00            334 	lcall	__gptrput
   00CA                     335 00102$:
                            336 ;	time.c:81: if (timeptr->tm_min>59) timeptr->tm_min=59;
   00CA 74 01               337 	mov	a,#0x01
   00CC 2A                  338 	add	a,r2
   00CD FD                  339 	mov	r5,a
   00CE E4                  340 	clr	a
   00CF 3B                  341 	addc	a,r3
   00D0 FE                  342 	mov	r6,a
   00D1 8C 07               343 	mov	ar7,r4
   00D3 8D 82               344 	mov	dpl,r5
   00D5 8E 83               345 	mov	dph,r6
   00D7 8F F0               346 	mov	b,r7
   00D9 12s00r00            347 	lcall	__gptrget
   00DC F8                  348 	mov  r0,a
   00DD 24 C4               349 	add	a,#0xff - 0x3B
   00DF 50 0B               350 	jnc	00104$
   00E1 8D 82               351 	mov	dpl,r5
   00E3 8E 83               352 	mov	dph,r6
   00E5 8F F0               353 	mov	b,r7
   00E7 74 3B               354 	mov	a,#0x3B
   00E9 12s00r00            355 	lcall	__gptrput
   00EC                     356 00104$:
                            357 ;	time.c:82: if (timeptr->tm_hour>23) timeptr->tm_hour=23;
   00EC 74 02               358 	mov	a,#0x02
   00EE 2A                  359 	add	a,r2
   00EF FD                  360 	mov	r5,a
   00F0 E4                  361 	clr	a
   00F1 3B                  362 	addc	a,r3
   00F2 FE                  363 	mov	r6,a
   00F3 8C 07               364 	mov	ar7,r4
   00F5 8D 82               365 	mov	dpl,r5
   00F7 8E 83               366 	mov	dph,r6
   00F9 8F F0               367 	mov	b,r7
   00FB 12s00r00            368 	lcall	__gptrget
   00FE F8                  369 	mov  r0,a
   00FF 24 E8               370 	add	a,#0xff - 0x17
   0101 50 0B               371 	jnc	00106$
   0103 8D 82               372 	mov	dpl,r5
   0105 8E 83               373 	mov	dph,r6
   0107 8F F0               374 	mov	b,r7
   0109 74 17               375 	mov	a,#0x17
   010B 12s00r00            376 	lcall	__gptrput
   010E                     377 00106$:
                            378 ;	time.c:83: if (timeptr->tm_wday>6) timeptr->tm_wday=6;
   010E 74 07               379 	mov	a,#0x07
   0110 2A                  380 	add	a,r2
   0111 FD                  381 	mov	r5,a
   0112 E4                  382 	clr	a
   0113 3B                  383 	addc	a,r3
   0114 FE                  384 	mov	r6,a
   0115 8C 07               385 	mov	ar7,r4
   0117 8D 82               386 	mov	dpl,r5
   0119 8E 83               387 	mov	dph,r6
   011B 8F F0               388 	mov	b,r7
   011D 12s00r00            389 	lcall	__gptrget
   0120 F8                  390 	mov  r0,a
   0121 24 F9               391 	add	a,#0xff - 0x06
   0123 50 0B               392 	jnc	00108$
   0125 8D 82               393 	mov	dpl,r5
   0127 8E 83               394 	mov	dph,r6
   0129 8F F0               395 	mov	b,r7
   012B 74 06               396 	mov	a,#0x06
   012D 12s00r00            397 	lcall	__gptrput
   0130                     398 00108$:
                            399 ;	time.c:84: if (timeptr->tm_mday<1) timeptr->tm_mday=1;
   0130 74 03               400 	mov	a,#0x03
   0132 2A                  401 	add	a,r2
   0133 FD                  402 	mov	r5,a
   0134 E4                  403 	clr	a
   0135 3B                  404 	addc	a,r3
   0136 FE                  405 	mov	r6,a
   0137 8C 07               406 	mov	ar7,r4
   0139 8D 82               407 	mov	dpl,r5
   013B 8E 83               408 	mov	dph,r6
   013D 8F F0               409 	mov	b,r7
   013F 12s00r00            410 	lcall	__gptrget
   0142 F8                  411 	mov	r0,a
   0143 B8 01 00            412 	cjne	r0,#0x01,00132$
   0146                     413 00132$:
   0146 50 0D               414 	jnc	00112$
   0148 8D 82               415 	mov	dpl,r5
   014A 8E 83               416 	mov	dph,r6
   014C 8F F0               417 	mov	b,r7
   014E 74 01               418 	mov	a,#0x01
   0150 12s00r00            419 	lcall	__gptrput
   0153 80 10               420 	sjmp	00113$
   0155                     421 00112$:
                            422 ;	time.c:85: else if (timeptr->tm_mday>31) timeptr->tm_mday=31;
   0155 E8                  423 	mov	a,r0
   0156 24 E0               424 	add	a,#0xff - 0x1F
   0158 50 0B               425 	jnc	00113$
   015A 8D 82               426 	mov	dpl,r5
   015C 8E 83               427 	mov	dph,r6
   015E 8F F0               428 	mov	b,r7
   0160 74 1F               429 	mov	a,#0x1F
   0162 12s00r00            430 	lcall	__gptrput
   0165                     431 00113$:
                            432 ;	time.c:86: if (timeptr->tm_mon>11) timeptr->tm_mon=11;
   0165 74 04               433 	mov	a,#0x04
   0167 2A                  434 	add	a,r2
   0168 FD                  435 	mov	r5,a
   0169 E4                  436 	clr	a
   016A 3B                  437 	addc	a,r3
   016B FE                  438 	mov	r6,a
   016C 8C 07               439 	mov	ar7,r4
   016E 8D 82               440 	mov	dpl,r5
   0170 8E 83               441 	mov	dph,r6
   0172 8F F0               442 	mov	b,r7
   0174 12s00r00            443 	lcall	__gptrget
   0177 F8                  444 	mov  r0,a
   0178 24 F4               445 	add	a,#0xff - 0x0B
   017A 50 0B               446 	jnc	00115$
   017C 8D 82               447 	mov	dpl,r5
   017E 8E 83               448 	mov	dph,r6
   0180 8F F0               449 	mov	b,r7
   0182 74 0B               450 	mov	a,#0x0B
   0184 12s00r00            451 	lcall	__gptrput
   0187                     452 00115$:
                            453 ;	time.c:87: if (timeptr->tm_year<0) timeptr->tm_year=0;
   0187 74 05               454 	mov	a,#0x05
   0189 2A                  455 	add	a,r2
   018A FA                  456 	mov	r2,a
   018B E4                  457 	clr	a
   018C 3B                  458 	addc	a,r3
   018D FB                  459 	mov	r3,a
   018E 8A 82               460 	mov	dpl,r2
   0190 8B 83               461 	mov	dph,r3
   0192 8C F0               462 	mov	b,r4
   0194 12s00r00            463 	lcall	__gptrget
   0197 FD                  464 	mov	r5,a
   0198 A3                  465 	inc	dptr
   0199 12s00r00            466 	lcall	__gptrget
   019C FE                  467 	mov	r6,a
   019D 30 E7 0F            468 	jnb	acc.7,00118$
   01A0 8A 82               469 	mov	dpl,r2
   01A2 8B 83               470 	mov	dph,r3
   01A4 8C F0               471 	mov	b,r4
   01A6 E4                  472 	clr	a
   01A7 12s00r00            473 	lcall	__gptrput
   01AA A3                  474 	inc	dptr
   01AB E4                  475 	clr	a
   01AC 02s00r00            476 	ljmp	__gptrput
   01AF                     477 00118$:
   01AF 22                  478 	ret
                            479 ;------------------------------------------------------------
                            480 ;Allocation info for local variables in function 'asctime'
                            481 ;------------------------------------------------------------
                            482 ;sloc0                     Allocated with name '_asctime_sloc0_1_0'
                            483 ;sloc1                     Allocated with name '_asctime_sloc1_1_0'
                            484 ;sloc2                     Allocated with name '_asctime_sloc2_1_0'
                            485 ;sloc3                     Allocated with name '_asctime_sloc3_1_0'
                            486 ;timeptr                   Allocated with name '_asctime_timeptr_1_1'
                            487 ;------------------------------------------------------------
                            488 ;	time.c:91: char *asctime(struct tm *timeptr) {
                            489 ;	-----------------------------------------
                            490 ;	 function asctime
                            491 ;	-----------------------------------------
   01B0                     492 _asctime:
   01B0 AA F0               493 	mov	r2,b
   01B2 AB 83               494 	mov	r3,dph
   01B4 E5 82               495 	mov	a,dpl
   01B6 90s00r36            496 	mov	dptr,#_asctime_timeptr_1_1
   01B9 F0                  497 	movx	@dptr,a
   01BA A3                  498 	inc	dptr
   01BB EB                  499 	mov	a,r3
   01BC F0                  500 	movx	@dptr,a
   01BD A3                  501 	inc	dptr
   01BE EA                  502 	mov	a,r2
   01BF F0                  503 	movx	@dptr,a
                            504 ;	time.c:92: CheckTime(timeptr);
   01C0 90s00r36            505 	mov	dptr,#_asctime_timeptr_1_1
   01C3 E0                  506 	movx	a,@dptr
   01C4 FA                  507 	mov	r2,a
   01C5 A3                  508 	inc	dptr
   01C6 E0                  509 	movx	a,@dptr
   01C7 FB                  510 	mov	r3,a
   01C8 A3                  511 	inc	dptr
   01C9 E0                  512 	movx	a,@dptr
   01CA FC                  513 	mov	r4,a
   01CB 8A 82               514 	mov	dpl,r2
   01CD 8B 83               515 	mov	dph,r3
   01CF 8C F0               516 	mov	b,r4
   01D1 12s00r96            517 	lcall	_CheckTime
                            518 ;	time.c:96: timeptr->tm_year+1900);
   01D4 90s00r36            519 	mov	dptr,#_asctime_timeptr_1_1
   01D7 E0                  520 	movx	a,@dptr
   01D8 FA                  521 	mov	r2,a
   01D9 A3                  522 	inc	dptr
   01DA E0                  523 	movx	a,@dptr
   01DB FB                  524 	mov	r3,a
   01DC A3                  525 	inc	dptr
   01DD E0                  526 	movx	a,@dptr
   01DE FC                  527 	mov	r4,a
   01DF 74 05               528 	mov	a,#0x05
   01E1 2A                  529 	add	a,r2
   01E2 FD                  530 	mov	r5,a
   01E3 E4                  531 	clr	a
   01E4 3B                  532 	addc	a,r3
   01E5 FE                  533 	mov	r6,a
   01E6 8C 07               534 	mov	ar7,r4
   01E8 8D 82               535 	mov	dpl,r5
   01EA 8E 83               536 	mov	dph,r6
   01EC 8F F0               537 	mov	b,r7
   01EE 12s00r00            538 	lcall	__gptrget
   01F1 FD                  539 	mov	r5,a
   01F2 A3                  540 	inc	dptr
   01F3 12s00r00            541 	lcall	__gptrget
   01F6 FE                  542 	mov	r6,a
   01F7 74 6C               543 	mov	a,#0x6C
   01F9 2D                  544 	add	a,r5
   01FA FD                  545 	mov	r5,a
   01FB 74 07               546 	mov	a,#0x07
   01FD 3E                  547 	addc	a,r6
   01FE FE                  548 	mov	r6,a
                            549 ;	time.c:95: timeptr->tm_hour, timeptr->tm_min, timeptr->tm_sec, 
   01FF 8A 82               550 	mov	dpl,r2
   0201 8B 83               551 	mov	dph,r3
   0203 8C F0               552 	mov	b,r4
   0205 12s00r00            553 	lcall	__gptrget
   0208 FF                  554 	mov	r7,a
   0209 8F*00               555 	mov	_asctime_sloc0_1_0,r7
   020B 75*01 00            556 	mov	(_asctime_sloc0_1_0 + 1),#0x00
   020E 74 01               557 	mov	a,#0x01
   0210 2A                  558 	add	a,r2
   0211 F9                  559 	mov	r1,a
   0212 E4                  560 	clr	a
   0213 3B                  561 	addc	a,r3
   0214 FF                  562 	mov	r7,a
   0215 8C 00               563 	mov	ar0,r4
   0217 89 82               564 	mov	dpl,r1
   0219 8F 83               565 	mov	dph,r7
   021B 88 F0               566 	mov	b,r0
   021D 12s00r00            567 	lcall	__gptrget
   0220 F9                  568 	mov	r1,a
   0221 89*02               569 	mov	_asctime_sloc1_1_0,r1
   0223 75*03 00            570 	mov	(_asctime_sloc1_1_0 + 1),#0x00
   0226 74 02               571 	mov	a,#0x02
   0228 2A                  572 	add	a,r2
   0229 F8                  573 	mov	r0,a
   022A E4                  574 	clr	a
   022B 3B                  575 	addc	a,r3
   022C FF                  576 	mov	r7,a
   022D 8C 01               577 	mov	ar1,r4
   022F 88 82               578 	mov	dpl,r0
   0231 8F 83               579 	mov	dph,r7
   0233 89 F0               580 	mov	b,r1
   0235 12s00r00            581 	lcall	__gptrget
   0238 F8                  582 	mov	r0,a
   0239 88*04               583 	mov	_asctime_sloc2_1_0,r0
   023B 75*05 00            584 	mov	(_asctime_sloc2_1_0 + 1),#0x00
                            585 ;	time.c:94: __day[timeptr->tm_wday], __month[timeptr->tm_mon], timeptr->tm_mday,
   023E 74 03               586 	mov	a,#0x03
   0240 2A                  587 	add	a,r2
   0241 F9                  588 	mov	r1,a
   0242 E4                  589 	clr	a
   0243 3B                  590 	addc	a,r3
   0244 FF                  591 	mov	r7,a
   0245 8C 00               592 	mov	ar0,r4
   0247 89 82               593 	mov	dpl,r1
   0249 8F 83               594 	mov	dph,r7
   024B 88 F0               595 	mov	b,r0
   024D 12s00r00            596 	lcall	__gptrget
   0250 F9                  597 	mov	r1,a
   0251 89*06               598 	mov	_asctime_sloc3_1_0,r1
   0253 75*07 00            599 	mov	(_asctime_sloc3_1_0 + 1),#0x00
   0256 74 04               600 	mov	a,#0x04
   0258 2A                  601 	add	a,r2
   0259 F8                  602 	mov	r0,a
   025A E4                  603 	clr	a
   025B 3B                  604 	addc	a,r3
   025C FF                  605 	mov	r7,a
   025D 8C 01               606 	mov	ar1,r4
   025F 88 82               607 	mov	dpl,r0
   0261 8F 83               608 	mov	dph,r7
   0263 89 F0               609 	mov	b,r1
   0265 12s00r00            610 	lcall	__gptrget
   0268 25 E0               611 	add	a,acc
   026A FF                  612 	mov	r7,a
   026B 90s00r0C            613 	mov	dptr,#___month
   026E 93                  614 	movc	a,@a+dptr
   026F CF                  615 	xch	a,r7
   0270 A3                  616 	inc	dptr
   0271 93                  617 	movc	a,@a+dptr
   0272 F8                  618 	mov	r0,a
   0273 79 80               619 	mov	r1,#0x80
   0275 74 07               620 	mov	a,#0x07
   0277 2A                  621 	add	a,r2
   0278 FA                  622 	mov	r2,a
   0279 E4                  623 	clr	a
   027A 3B                  624 	addc	a,r3
   027B FB                  625 	mov	r3,a
   027C 8A 82               626 	mov	dpl,r2
   027E 8B 83               627 	mov	dph,r3
   0280 8C F0               628 	mov	b,r4
   0282 12s00r00            629 	lcall	__gptrget
   0285 25 E0               630 	add	a,acc
   0287 FA                  631 	mov	r2,a
   0288 90s00r24            632 	mov	dptr,#___day
   028B 93                  633 	movc	a,@a+dptr
   028C CA                  634 	xch	a,r2
   028D A3                  635 	inc	dptr
   028E 93                  636 	movc	a,@a+dptr
   028F FB                  637 	mov	r3,a
   0290 7C 80               638 	mov	r4,#0x80
                            639 ;	time.c:93: sprintf (ascTimeBuffer, "%s %s %2d %02d:%02d:%02d %04d\n",
   0292 C0 05               640 	push	ar5
   0294 C0 06               641 	push	ar6
   0296 C0*00               642 	push	_asctime_sloc0_1_0
   0298 C0*01               643 	push	(_asctime_sloc0_1_0 + 1)
   029A C0*02               644 	push	_asctime_sloc1_1_0
   029C C0*03               645 	push	(_asctime_sloc1_1_0 + 1)
   029E C0*04               646 	push	_asctime_sloc2_1_0
   02A0 C0*05               647 	push	(_asctime_sloc2_1_0 + 1)
   02A2 C0*06               648 	push	_asctime_sloc3_1_0
   02A4 C0*07               649 	push	(_asctime_sloc3_1_0 + 1)
   02A6 C0 07               650 	push	ar7
   02A8 C0 00               651 	push	ar0
   02AA C0 01               652 	push	ar1
   02AC C0 02               653 	push	ar2
   02AE C0 03               654 	push	ar3
   02B0 C0 04               655 	push	ar4
   02B2 74r32               656 	mov	a,#__str_0
   02B4 C0 E0               657 	push	acc
   02B6 74s00               658 	mov	a,#(__str_0 >> 8)
   02B8 C0 E0               659 	push	acc
   02BA 74 80               660 	mov	a,#0x80
   02BC C0 E0               661 	push	acc
   02BE 74r13               662 	mov	a,#_ascTimeBuffer
   02C0 C0 E0               663 	push	acc
   02C2 74s00               664 	mov	a,#(_ascTimeBuffer >> 8)
   02C4 C0 E0               665 	push	acc
   02C6 E4                  666 	clr	a
   02C7 C0 E0               667 	push	acc
   02C9 12s00r00            668 	lcall	_sprintf
   02CC E5 81               669 	mov	a,sp
   02CE 24 EA               670 	add	a,#0xea
   02D0 F5 81               671 	mov	sp,a
                            672 ;	time.c:97: return ascTimeBuffer;
   02D2 90s00r13            673 	mov	dptr,#_ascTimeBuffer
   02D5 75 F0 00            674 	mov	b,#0x00
   02D8 22                  675 	ret
                            676 ;------------------------------------------------------------
                            677 ;Allocation info for local variables in function 'ctime'
                            678 ;------------------------------------------------------------
                            679 ;timep                     Allocated with name '_ctime_timep_1_1'
                            680 ;------------------------------------------------------------
                            681 ;	time.c:100: char *ctime(time_t *timep) {
                            682 ;	-----------------------------------------
                            683 ;	 function ctime
                            684 ;	-----------------------------------------
   02D9                     685 _ctime:
   02D9 AA F0               686 	mov	r2,b
   02DB AB 83               687 	mov	r3,dph
   02DD E5 82               688 	mov	a,dpl
   02DF 90s00r39            689 	mov	dptr,#_ctime_timep_1_1
   02E2 F0                  690 	movx	@dptr,a
   02E3 A3                  691 	inc	dptr
   02E4 EB                  692 	mov	a,r3
   02E5 F0                  693 	movx	@dptr,a
   02E6 A3                  694 	inc	dptr
   02E7 EA                  695 	mov	a,r2
   02E8 F0                  696 	movx	@dptr,a
                            697 ;	time.c:101: return asctime(localtime(timep));
   02E9 90s00r39            698 	mov	dptr,#_ctime_timep_1_1
   02EC E0                  699 	movx	a,@dptr
   02ED FA                  700 	mov	r2,a
   02EE A3                  701 	inc	dptr
   02EF E0                  702 	movx	a,@dptr
   02F0 FB                  703 	mov	r3,a
   02F1 A3                  704 	inc	dptr
   02F2 E0                  705 	movx	a,@dptr
   02F3 FC                  706 	mov	r4,a
   02F4 8A 82               707 	mov	dpl,r2
   02F6 8B 83               708 	mov	dph,r3
   02F8 8C F0               709 	mov	b,r4
   02FA 12s03r00            710 	lcall	_localtime
   02FD 02s01rB0            711 	ljmp	_asctime
                            712 ;------------------------------------------------------------
                            713 ;Allocation info for local variables in function 'localtime'
                            714 ;------------------------------------------------------------
                            715 ;timep                     Allocated with name '_localtime_timep_1_1'
                            716 ;------------------------------------------------------------
                            717 ;	time.c:117: struct tm *localtime(time_t *timep) {
                            718 ;	-----------------------------------------
                            719 ;	 function localtime
                            720 ;	-----------------------------------------
   0300                     721 _localtime:
   0300 AA F0               722 	mov	r2,b
   0302 AB 83               723 	mov	r3,dph
   0304 E5 82               724 	mov	a,dpl
   0306 90s00r48            725 	mov	dptr,#_localtime_timep_1_1
   0309 F0                  726 	movx	@dptr,a
   030A A3                  727 	inc	dptr
   030B EB                  728 	mov	a,r3
   030C F0                  729 	movx	@dptr,a
   030D A3                  730 	inc	dptr
   030E EA                  731 	mov	a,r2
   030F F0                  732 	movx	@dptr,a
                            733 ;	time.c:118: return gmtime(timep);
   0310 90s00r48            734 	mov	dptr,#_localtime_timep_1_1
   0313 E0                  735 	movx	a,@dptr
   0314 FA                  736 	mov	r2,a
   0315 A3                  737 	inc	dptr
   0316 E0                  738 	movx	a,@dptr
   0317 FB                  739 	mov	r3,a
   0318 A3                  740 	inc	dptr
   0319 E0                  741 	movx	a,@dptr
   031A FC                  742 	mov	r4,a
   031B 8A 82               743 	mov	dpl,r2
   031D 8B 83               744 	mov	dph,r3
   031F 8C F0               745 	mov	b,r4
   0321 02s03r24            746 	ljmp	_gmtime
                            747 ;------------------------------------------------------------
                            748 ;Allocation info for local variables in function 'gmtime'
                            749 ;------------------------------------------------------------
                            750 ;sloc0                     Allocated with name '_gmtime_sloc0_1_0'
                            751 ;sloc1                     Allocated with name '_gmtime_sloc1_1_0'
                            752 ;sloc2                     Allocated with name '_gmtime_sloc2_1_0'
                            753 ;sloc3                     Allocated with name '_gmtime_sloc3_1_0'
                            754 ;timep                     Allocated with name '_gmtime_timep_1_1'
                            755 ;epoch                     Allocated with name '_gmtime_epoch_1_1'
                            756 ;year                      Allocated with name '_gmtime_year_1_1'
                            757 ;month                     Allocated with name '_gmtime_month_1_1'
                            758 ;monthLength               Allocated with name '_gmtime_monthLength_1_1'
                            759 ;days                      Allocated with name '_gmtime_days_1_1'
                            760 ;------------------------------------------------------------
                            761 ;	time.c:121: struct tm *gmtime(time_t *timep) {
                            762 ;	-----------------------------------------
                            763 ;	 function gmtime
                            764 ;	-----------------------------------------
   0324                     765 _gmtime:
   0324 AA F0               766 	mov	r2,b
   0326 AB 83               767 	mov	r3,dph
   0328 E5 82               768 	mov	a,dpl
   032A 90s00r4B            769 	mov	dptr,#_gmtime_timep_1_1
   032D F0                  770 	movx	@dptr,a
   032E A3                  771 	inc	dptr
   032F EB                  772 	mov	a,r3
   0330 F0                  773 	movx	@dptr,a
   0331 A3                  774 	inc	dptr
   0332 EA                  775 	mov	a,r2
   0333 F0                  776 	movx	@dptr,a
                            777 ;	time.c:122: unsigned long epoch=*timep;
   0334 90s00r4B            778 	mov	dptr,#_gmtime_timep_1_1
   0337 E0                  779 	movx	a,@dptr
   0338 FA                  780 	mov	r2,a
   0339 A3                  781 	inc	dptr
   033A E0                  782 	movx	a,@dptr
   033B FB                  783 	mov	r3,a
   033C A3                  784 	inc	dptr
   033D E0                  785 	movx	a,@dptr
   033E FC                  786 	mov	r4,a
   033F 8A 82               787 	mov	dpl,r2
   0341 8B 83               788 	mov	dph,r3
   0343 8C F0               789 	mov	b,r4
   0345 12s00r00            790 	lcall	__gptrget
   0348 FA                  791 	mov	r2,a
   0349 A3                  792 	inc	dptr
   034A 12s00r00            793 	lcall	__gptrget
   034D FB                  794 	mov	r3,a
   034E A3                  795 	inc	dptr
   034F 12s00r00            796 	lcall	__gptrget
   0352 FC                  797 	mov	r4,a
   0353 A3                  798 	inc	dptr
   0354 12s00r00            799 	lcall	__gptrget
   0357 FD                  800 	mov	r5,a
                            801 ;	time.c:127: lastTime.tm_sec=epoch%60;
   0358 90s00r00            802 	mov	dptr,#__modulong_PARM_2
   035B 74 3C               803 	mov	a,#0x3C
   035D F0                  804 	movx	@dptr,a
   035E E4                  805 	clr	a
   035F A3                  806 	inc	dptr
   0360 F0                  807 	movx	@dptr,a
   0361 A3                  808 	inc	dptr
   0362 F0                  809 	movx	@dptr,a
   0363 A3                  810 	inc	dptr
   0364 F0                  811 	movx	@dptr,a
   0365 8A 82               812 	mov	dpl,r2
   0367 8B 83               813 	mov	dph,r3
   0369 8C F0               814 	mov	b,r4
   036B ED                  815 	mov	a,r5
   036C C0 02               816 	push	ar2
   036E C0 03               817 	push	ar3
   0370 C0 04               818 	push	ar4
   0372 C0 05               819 	push	ar5
   0374 12s00r00            820 	lcall	__modulong
   0377 AE 82               821 	mov	r6,dpl
   0379 D0 05               822 	pop	ar5
   037B D0 04               823 	pop	ar4
   037D D0 03               824 	pop	ar3
   037F D0 02               825 	pop	ar2
   0381 90s00r3C            826 	mov	dptr,#_lastTime
   0384 EE                  827 	mov	a,r6
   0385 F0                  828 	movx	@dptr,a
                            829 ;	time.c:128: epoch/=60; // now it is minutes
   0386 90s00r00            830 	mov	dptr,#__divulong_PARM_2
   0389 74 3C               831 	mov	a,#0x3C
   038B F0                  832 	movx	@dptr,a
   038C E4                  833 	clr	a
   038D A3                  834 	inc	dptr
   038E F0                  835 	movx	@dptr,a
   038F A3                  836 	inc	dptr
   0390 F0                  837 	movx	@dptr,a
   0391 A3                  838 	inc	dptr
   0392 F0                  839 	movx	@dptr,a
                            840 ;	time.c:129: lastTime.tm_min=epoch%60;
   0393 8A 82               841 	mov	dpl,r2
   0395 8B 83               842 	mov	dph,r3
   0397 8C F0               843 	mov	b,r4
   0399 ED                  844 	mov	a,r5
   039A 12s00r00            845 	lcall	__divulong
   039D AA 82               846 	mov	r2,dpl
   039F AB 83               847 	mov	r3,dph
   03A1 AC F0               848 	mov	r4,b
   03A3 FD                  849 	mov	r5,a
   03A4 90s00r00            850 	mov	dptr,#__modulong_PARM_2
   03A7 74 3C               851 	mov	a,#0x3C
   03A9 F0                  852 	movx	@dptr,a
   03AA E4                  853 	clr	a
   03AB A3                  854 	inc	dptr
   03AC F0                  855 	movx	@dptr,a
   03AD A3                  856 	inc	dptr
   03AE F0                  857 	movx	@dptr,a
   03AF A3                  858 	inc	dptr
   03B0 F0                  859 	movx	@dptr,a
   03B1 8A 82               860 	mov	dpl,r2
   03B3 8B 83               861 	mov	dph,r3
   03B5 8C F0               862 	mov	b,r4
   03B7 ED                  863 	mov	a,r5
   03B8 C0 02               864 	push	ar2
   03BA C0 03               865 	push	ar3
   03BC C0 04               866 	push	ar4
   03BE C0 05               867 	push	ar5
   03C0 12s00r00            868 	lcall	__modulong
   03C3 AE 82               869 	mov	r6,dpl
   03C5 D0 05               870 	pop	ar5
   03C7 D0 04               871 	pop	ar4
   03C9 D0 03               872 	pop	ar3
   03CB D0 02               873 	pop	ar2
   03CD 90s00r3D            874 	mov	dptr,#(_lastTime + 0x0001)
   03D0 EE                  875 	mov	a,r6
   03D1 F0                  876 	movx	@dptr,a
                            877 ;	time.c:130: epoch/=60; // now it is hours
   03D2 90s00r00            878 	mov	dptr,#__divulong_PARM_2
   03D5 74 3C               879 	mov	a,#0x3C
   03D7 F0                  880 	movx	@dptr,a
   03D8 E4                  881 	clr	a
   03D9 A3                  882 	inc	dptr
   03DA F0                  883 	movx	@dptr,a
   03DB A3                  884 	inc	dptr
   03DC F0                  885 	movx	@dptr,a
   03DD A3                  886 	inc	dptr
   03DE F0                  887 	movx	@dptr,a
                            888 ;	time.c:131: lastTime.tm_hour=epoch%24;
   03DF 8A 82               889 	mov	dpl,r2
   03E1 8B 83               890 	mov	dph,r3
   03E3 8C F0               891 	mov	b,r4
   03E5 ED                  892 	mov	a,r5
   03E6 12s00r00            893 	lcall	__divulong
   03E9 AA 82               894 	mov	r2,dpl
   03EB AB 83               895 	mov	r3,dph
   03ED AC F0               896 	mov	r4,b
   03EF FD                  897 	mov	r5,a
   03F0 90s00r00            898 	mov	dptr,#__modulong_PARM_2
   03F3 74 18               899 	mov	a,#0x18
   03F5 F0                  900 	movx	@dptr,a
   03F6 E4                  901 	clr	a
   03F7 A3                  902 	inc	dptr
   03F8 F0                  903 	movx	@dptr,a
   03F9 A3                  904 	inc	dptr
   03FA F0                  905 	movx	@dptr,a
   03FB A3                  906 	inc	dptr
   03FC F0                  907 	movx	@dptr,a
   03FD 8A 82               908 	mov	dpl,r2
   03FF 8B 83               909 	mov	dph,r3
   0401 8C F0               910 	mov	b,r4
   0403 ED                  911 	mov	a,r5
   0404 C0 02               912 	push	ar2
   0406 C0 03               913 	push	ar3
   0408 C0 04               914 	push	ar4
   040A C0 05               915 	push	ar5
   040C 12s00r00            916 	lcall	__modulong
   040F AE 82               917 	mov	r6,dpl
   0411 D0 05               918 	pop	ar5
   0413 D0 04               919 	pop	ar4
   0415 D0 03               920 	pop	ar3
   0417 D0 02               921 	pop	ar2
   0419 90s00r3E            922 	mov	dptr,#(_lastTime + 0x0002)
   041C EE                  923 	mov	a,r6
   041D F0                  924 	movx	@dptr,a
                            925 ;	time.c:132: epoch/=24; // now it is days
   041E 90s00r00            926 	mov	dptr,#__divulong_PARM_2
   0421 74 18               927 	mov	a,#0x18
   0423 F0                  928 	movx	@dptr,a
   0424 E4                  929 	clr	a
   0425 A3                  930 	inc	dptr
   0426 F0                  931 	movx	@dptr,a
   0427 A3                  932 	inc	dptr
   0428 F0                  933 	movx	@dptr,a
   0429 A3                  934 	inc	dptr
   042A F0                  935 	movx	@dptr,a
                            936 ;	time.c:133: lastTime.tm_wday=(epoch+4)%7;
   042B 8A 82               937 	mov	dpl,r2
   042D 8B 83               938 	mov	dph,r3
   042F 8C F0               939 	mov	b,r4
   0431 ED                  940 	mov	a,r5
   0432 12s00r00            941 	lcall	__divulong
   0435 AA 82               942 	mov	r2,dpl
   0437 AB 83               943 	mov	r3,dph
   0439 AC F0               944 	mov	r4,b
   043B FD                  945 	mov	r5,a
   043C 74 04               946 	mov	a,#0x04
   043E 2A                  947 	add	a,r2
   043F FE                  948 	mov	r6,a
   0440 E4                  949 	clr	a
   0441 3B                  950 	addc	a,r3
   0442 FF                  951 	mov	r7,a
   0443 E4                  952 	clr	a
   0444 3C                  953 	addc	a,r4
   0445 F8                  954 	mov	r0,a
   0446 E4                  955 	clr	a
   0447 3D                  956 	addc	a,r5
   0448 F9                  957 	mov	r1,a
   0449 90s00r00            958 	mov	dptr,#__modulong_PARM_2
   044C 74 07               959 	mov	a,#0x07
   044E F0                  960 	movx	@dptr,a
   044F E4                  961 	clr	a
   0450 A3                  962 	inc	dptr
   0451 F0                  963 	movx	@dptr,a
   0452 A3                  964 	inc	dptr
   0453 F0                  965 	movx	@dptr,a
   0454 A3                  966 	inc	dptr
   0455 F0                  967 	movx	@dptr,a
   0456 8E 82               968 	mov	dpl,r6
   0458 8F 83               969 	mov	dph,r7
   045A 88 F0               970 	mov	b,r0
   045C E9                  971 	mov	a,r1
   045D C0 02               972 	push	ar2
   045F C0 03               973 	push	ar3
   0461 C0 04               974 	push	ar4
   0463 C0 05               975 	push	ar5
   0465 12s00r00            976 	lcall	__modulong
   0468 AE 82               977 	mov	r6,dpl
   046A D0 05               978 	pop	ar5
   046C D0 04               979 	pop	ar4
   046E D0 03               980 	pop	ar3
   0470 D0 02               981 	pop	ar2
   0472 90s00r43            982 	mov	dptr,#(_lastTime + 0x0007)
   0475 EE                  983 	mov	a,r6
   0476 F0                  984 	movx	@dptr,a
                            985 ;	time.c:136: days=0;
   0477 90s00r53            986 	mov	dptr,#_gmtime_days_1_1
   047A E4                  987 	clr	a
   047B F0                  988 	movx	@dptr,a
   047C A3                  989 	inc	dptr
   047D F0                  990 	movx	@dptr,a
   047E A3                  991 	inc	dptr
   047F F0                  992 	movx	@dptr,a
   0480 A3                  993 	inc	dptr
   0481 F0                  994 	movx	@dptr,a
                            995 ;	time.c:137: while((days += (LEAP_YEAR(year) ? 366 : 365)) <= epoch) {
   0482 8A 06               996 	mov	ar6,r2
   0484 8B 07               997 	mov	ar7,r3
   0486 8C 00               998 	mov	ar0,r4
   0488 8D 01               999 	mov	ar1,r5
   048A 75*08 B2           1000 	mov	_gmtime_sloc0_1_0,#0xB2
   048D 75*09 07           1001 	mov	(_gmtime_sloc0_1_0 + 1),#0x07
   0490                    1002 00101$:
   0490 C0 06              1003 	push	ar6
   0492 C0 07              1004 	push	ar7
   0494 C0 00              1005 	push	ar0
   0496 C0 01              1006 	push	ar1
   0498 74 03              1007 	mov	a,#0x03
   049A 55*08              1008 	anl	a,_gmtime_sloc0_1_0
   049C FE                 1009 	mov	r6,a
   049D 7F 00              1010 	mov	r7,#0x00
   049F 4F                 1011 	orl	a,r7
   04A0 B4 01 00           1012 	cjne	a,#0x01,00134$
   04A3                    1013 00134$:
   04A3 E4                 1014 	clr	a
   04A4 33                 1015 	rlc	a
   04A5 D0 01              1016 	pop	ar1
   04A7 D0 00              1017 	pop	ar0
   04A9 D0 07              1018 	pop	ar7
   04AB D0 06              1019 	pop	ar6
   04AD 60 08              1020 	jz	00119$
   04AF 75*0A 6E           1021 	mov	_gmtime_sloc1_1_0,#0x6E
   04B2 75*0B 01           1022 	mov	(_gmtime_sloc1_1_0 + 1),#0x01
   04B5 80 06              1023 	sjmp	00120$
   04B7                    1024 00119$:
   04B7 75*0A 6D           1025 	mov	_gmtime_sloc1_1_0,#0x6D
   04BA 75*0B 01           1026 	mov	(_gmtime_sloc1_1_0 + 1),#0x01
   04BD                    1027 00120$:
   04BD C0 06              1028 	push	ar6
   04BF C0 07              1029 	push	ar7
   04C1 C0 00              1030 	push	ar0
   04C3 C0 01              1031 	push	ar1
   04C5 90s00r53           1032 	mov	dptr,#_gmtime_days_1_1
   04C8 E0                 1033 	movx	a,@dptr
   04C9 F5*0C              1034 	mov	_gmtime_sloc2_1_0,a
   04CB A3                 1035 	inc	dptr
   04CC E0                 1036 	movx	a,@dptr
   04CD F5*0D              1037 	mov	(_gmtime_sloc2_1_0 + 1),a
   04CF A3                 1038 	inc	dptr
   04D0 E0                 1039 	movx	a,@dptr
   04D1 F5*0E              1040 	mov	(_gmtime_sloc2_1_0 + 2),a
   04D3 A3                 1041 	inc	dptr
   04D4 E0                 1042 	movx	a,@dptr
   04D5 F5*0F              1043 	mov	(_gmtime_sloc2_1_0 + 3),a
   04D7 AE*0A              1044 	mov	r6,_gmtime_sloc1_1_0
   04D9 E5*0B              1045 	mov	a,(_gmtime_sloc1_1_0 + 1)
   04DB FF                 1046 	mov	r7,a
   04DC 33                 1047 	rlc	a
   04DD 95 E0              1048 	subb	a,acc
   04DF F8                 1049 	mov	r0,a
   04E0 F9                 1050 	mov	r1,a
   04E1 EE                 1051 	mov	a,r6
   04E2 25*0C              1052 	add	a,_gmtime_sloc2_1_0
   04E4 FE                 1053 	mov	r6,a
   04E5 EF                 1054 	mov	a,r7
   04E6 35*0D              1055 	addc	a,(_gmtime_sloc2_1_0 + 1)
   04E8 FF                 1056 	mov	r7,a
   04E9 E8                 1057 	mov	a,r0
   04EA 35*0E              1058 	addc	a,(_gmtime_sloc2_1_0 + 2)
   04EC F8                 1059 	mov	r0,a
   04ED E9                 1060 	mov	a,r1
   04EE 35*0F              1061 	addc	a,(_gmtime_sloc2_1_0 + 3)
   04F0 F9                 1062 	mov	r1,a
   04F1 90s00r53           1063 	mov	dptr,#_gmtime_days_1_1
   04F4 EE                 1064 	mov	a,r6
   04F5 F0                 1065 	movx	@dptr,a
   04F6 A3                 1066 	inc	dptr
   04F7 EF                 1067 	mov	a,r7
   04F8 F0                 1068 	movx	@dptr,a
   04F9 A3                 1069 	inc	dptr
   04FA E8                 1070 	mov	a,r0
   04FB F0                 1071 	movx	@dptr,a
   04FC A3                 1072 	inc	dptr
   04FD E9                 1073 	mov	a,r1
   04FE F0                 1074 	movx	@dptr,a
   04FF C3                 1075 	clr	c
   0500 EA                 1076 	mov	a,r2
   0501 9E                 1077 	subb	a,r6
   0502 EB                 1078 	mov	a,r3
   0503 9F                 1079 	subb	a,r7
   0504 EC                 1080 	mov	a,r4
   0505 98                 1081 	subb	a,r0
   0506 ED                 1082 	mov	a,r5
   0507 99                 1083 	subb	a,r1
   0508 D0 01              1084 	pop	ar1
   050A D0 00              1085 	pop	ar0
   050C D0 07              1086 	pop	ar7
   050E D0 06              1087 	pop	ar6
   0510 40 0B              1088 	jc	00103$
                           1089 ;	time.c:138: year++;
   0512 05*08              1090 	inc	_gmtime_sloc0_1_0
   0514 E4                 1091 	clr	a
   0515 B5*08 02           1092 	cjne	a,_gmtime_sloc0_1_0,00137$
   0518 05*09              1093 	inc	(_gmtime_sloc0_1_0 + 1)
   051A                    1094 00137$:
   051A 02s04r90           1095 	ljmp	00101$
   051D                    1096 00103$:
                           1097 ;	time.c:140: lastTime.tm_year=year-1900;
   051D E5*08              1098 	mov	a,_gmtime_sloc0_1_0
   051F 24 94              1099 	add	a,#0x94
   0521 FA                 1100 	mov	r2,a
   0522 E5*09              1101 	mov	a,(_gmtime_sloc0_1_0 + 1)
   0524 34 F8              1102 	addc	a,#0xf8
   0526 FB                 1103 	mov	r3,a
   0527 90s00r41           1104 	mov	dptr,#(_lastTime + 0x0005)
   052A EA                 1105 	mov	a,r2
   052B F0                 1106 	movx	@dptr,a
   052C A3                 1107 	inc	dptr
   052D EB                 1108 	mov	a,r3
   052E F0                 1109 	movx	@dptr,a
                           1110 ;	time.c:142: days -= LEAP_YEAR(year) ? 366 : 365;
   052F 74 03              1111 	mov	a,#0x03
   0531 55*08              1112 	anl	a,_gmtime_sloc0_1_0
   0533 FA                 1113 	mov	r2,a
   0534 7B 00              1114 	mov	r3,#0x00
   0536 4B                 1115 	orl	a,r3
   0537 B4 01 00           1116 	cjne	a,#0x01,00138$
   053A                    1117 00138$:
   053A E4                 1118 	clr	a
   053B 33                 1119 	rlc	a
   053C FC                 1120 	mov	r4,a
   053D 60 08              1121 	jz	00121$
   053F 75*0C 6E           1122 	mov	_gmtime_sloc2_1_0,#0x6E
   0542 75*0D 01           1123 	mov	(_gmtime_sloc2_1_0 + 1),#0x01
   0545 80 06              1124 	sjmp	00122$
   0547                    1125 00121$:
   0547 75*0C 6D           1126 	mov	_gmtime_sloc2_1_0,#0x6D
   054A 75*0D 01           1127 	mov	(_gmtime_sloc2_1_0 + 1),#0x01
   054D                    1128 00122$:
   054D C0 02              1129 	push	ar2
   054F C0 03              1130 	push	ar3
   0551 90s00r53           1131 	mov	dptr,#_gmtime_days_1_1
   0554 E0                 1132 	movx	a,@dptr
   0555 F5*10              1133 	mov	_gmtime_sloc3_1_0,a
   0557 A3                 1134 	inc	dptr
   0558 E0                 1135 	movx	a,@dptr
   0559 F5*11              1136 	mov	(_gmtime_sloc3_1_0 + 1),a
   055B A3                 1137 	inc	dptr
   055C E0                 1138 	movx	a,@dptr
   055D F5*12              1139 	mov	(_gmtime_sloc3_1_0 + 2),a
   055F A3                 1140 	inc	dptr
   0560 E0                 1141 	movx	a,@dptr
   0561 F5*13              1142 	mov	(_gmtime_sloc3_1_0 + 3),a
   0563 AA*0C              1143 	mov	r2,_gmtime_sloc2_1_0
   0565 E5*0D              1144 	mov	a,(_gmtime_sloc2_1_0 + 1)
   0567 FD                 1145 	mov	r5,a
   0568 33                 1146 	rlc	a
   0569 95 E0              1147 	subb	a,acc
   056B FB                 1148 	mov	r3,a
   056C FC                 1149 	mov	r4,a
   056D 90s00r53           1150 	mov	dptr,#_gmtime_days_1_1
   0570 E5*10              1151 	mov	a,_gmtime_sloc3_1_0
   0572 C3                 1152 	clr	c
   0573 9A                 1153 	subb	a,r2
   0574 F0                 1154 	movx	@dptr,a
   0575 E5*11              1155 	mov	a,(_gmtime_sloc3_1_0 + 1)
   0577 9D                 1156 	subb	a,r5
   0578 A3                 1157 	inc	dptr
   0579 F0                 1158 	movx	@dptr,a
   057A E5*12              1159 	mov	a,(_gmtime_sloc3_1_0 + 2)
   057C 9B                 1160 	subb	a,r3
   057D A3                 1161 	inc	dptr
   057E F0                 1162 	movx	@dptr,a
   057F E5*13              1163 	mov	a,(_gmtime_sloc3_1_0 + 3)
   0581 9C                 1164 	subb	a,r4
   0582 A3                 1165 	inc	dptr
   0583 F0                 1166 	movx	@dptr,a
                           1167 ;	time.c:143: epoch -= days; // now it is days in this year, starting at 0
   0584 90s00r53           1168 	mov	dptr,#_gmtime_days_1_1
   0587 E0                 1169 	movx	a,@dptr
   0588 FA                 1170 	mov	r2,a
   0589 A3                 1171 	inc	dptr
   058A E0                 1172 	movx	a,@dptr
   058B FB                 1173 	mov	r3,a
   058C A3                 1174 	inc	dptr
   058D E0                 1175 	movx	a,@dptr
   058E FC                 1176 	mov	r4,a
   058F A3                 1177 	inc	dptr
   0590 E0                 1178 	movx	a,@dptr
   0591 FD                 1179 	mov	r5,a
   0592 EE                 1180 	mov	a,r6
   0593 C3                 1181 	clr	c
   0594 9A                 1182 	subb	a,r2
   0595 FE                 1183 	mov	r6,a
   0596 EF                 1184 	mov	a,r7
   0597 9B                 1185 	subb	a,r3
   0598 FF                 1186 	mov	r7,a
   0599 E8                 1187 	mov	a,r0
   059A 9C                 1188 	subb	a,r4
   059B F8                 1189 	mov	r0,a
   059C E9                 1190 	mov	a,r1
   059D 9D                 1191 	subb	a,r5
   059E F9                 1192 	mov	r1,a
   059F 90s00r4E           1193 	mov	dptr,#_gmtime_epoch_1_1
   05A2 EE                 1194 	mov	a,r6
   05A3 F0                 1195 	movx	@dptr,a
   05A4 A3                 1196 	inc	dptr
   05A5 EF                 1197 	mov	a,r7
   05A6 F0                 1198 	movx	@dptr,a
   05A7 A3                 1199 	inc	dptr
   05A8 E8                 1200 	mov	a,r0
   05A9 F0                 1201 	movx	@dptr,a
   05AA A3                 1202 	inc	dptr
   05AB E9                 1203 	mov	a,r1
   05AC F0                 1204 	movx	@dptr,a
                           1205 ;	time.c:144: lastTime.tm_yday=epoch;
   05AD 90s00r44           1206 	mov	dptr,#(_lastTime + 0x0008)
   05B0 EE                 1207 	mov	a,r6
   05B1 F0                 1208 	movx	@dptr,a
   05B2 A3                 1209 	inc	dptr
   05B3 EF                 1210 	mov	a,r7
   05B4 F0                 1211 	movx	@dptr,a
                           1212 ;	time.c:171: return &lastTime;
   05B5 D0 03              1213 	pop	ar3
   05B7 D0 02              1214 	pop	ar2
                           1215 ;	time.c:149: for (month=0; month<12; month++) {
   05B9 7C 00              1216 	mov	r4,#0x00
   05BB                    1217 00113$:
   05BB BC 0C 00           1218 	cjne	r4,#0x0C,00140$
   05BE                    1219 00140$:
   05BE 50 68              1220 	jnc	00116$
                           1221 ;	time.c:150: if (month==1) { // februari
   05C0 BC 01 14           1222 	cjne	r4,#0x01,00108$
                           1223 ;	time.c:151: if (LEAP_YEAR(year)) {
   05C3 EA                 1224 	mov	a,r2
   05C4 4B                 1225 	orl	a,r3
   05C5 70 08              1226 	jnz	00105$
                           1227 ;	time.c:152: monthLength=29;
   05C7 90s00r52           1228 	mov	dptr,#_gmtime_monthLength_1_1
   05CA 74 1D              1229 	mov	a,#0x1D
   05CC F0                 1230 	movx	@dptr,a
   05CD 80 12              1231 	sjmp	00109$
   05CF                    1232 00105$:
                           1233 ;	time.c:154: monthLength=28;
   05CF 90s00r52           1234 	mov	dptr,#_gmtime_monthLength_1_1
   05D2 74 1C              1235 	mov	a,#0x1C
   05D4 F0                 1236 	movx	@dptr,a
   05D5 80 0A              1237 	sjmp	00109$
   05D7                    1238 00108$:
                           1239 ;	time.c:157: monthLength = monthDays[month];
   05D7 EC                 1240 	mov	a,r4
   05D8 90s00r00           1241 	mov	dptr,#_monthDays
   05DB 93                 1242 	movc	a,@a+dptr
   05DC FD                 1243 	mov	r5,a
   05DD 90s00r52           1244 	mov	dptr,#_gmtime_monthLength_1_1
   05E0 F0                 1245 	movx	@dptr,a
   05E1                    1246 00109$:
                           1247 ;	time.c:160: if (epoch>=monthLength) {
   05E1 90s00r4E           1248 	mov	dptr,#_gmtime_epoch_1_1
   05E4 E0                 1249 	movx	a,@dptr
   05E5 FD                 1250 	mov	r5,a
   05E6 A3                 1251 	inc	dptr
   05E7 E0                 1252 	movx	a,@dptr
   05E8 FE                 1253 	mov	r6,a
   05E9 A3                 1254 	inc	dptr
   05EA E0                 1255 	movx	a,@dptr
   05EB FF                 1256 	mov	r7,a
   05EC A3                 1257 	inc	dptr
   05ED E0                 1258 	movx	a,@dptr
   05EE F8                 1259 	mov	r0,a
   05EF 90s00r52           1260 	mov	dptr,#_gmtime_monthLength_1_1
   05F2 E0                 1261 	movx	a,@dptr
   05F3 F9                 1262 	mov	r1,a
   05F4 89*10              1263 	mov	_gmtime_sloc3_1_0,r1
   05F6 75*11 00           1264 	mov	(_gmtime_sloc3_1_0 + 1),#0x00
   05F9 75*12 00           1265 	mov	(_gmtime_sloc3_1_0 + 2),#0x00
   05FC 75*13 00           1266 	mov	(_gmtime_sloc3_1_0 + 3),#0x00
   05FF C3                 1267 	clr	c
   0600 ED                 1268 	mov	a,r5
   0601 95*10              1269 	subb	a,_gmtime_sloc3_1_0
   0603 EE                 1270 	mov	a,r6
   0604 95*11              1271 	subb	a,(_gmtime_sloc3_1_0 + 1)
   0606 EF                 1272 	mov	a,r7
   0607 95*12              1273 	subb	a,(_gmtime_sloc3_1_0 + 2)
   0609 E8                 1274 	mov	a,r0
   060A 95*13              1275 	subb	a,(_gmtime_sloc3_1_0 + 3)
   060C 40 1A              1276 	jc	00116$
                           1277 ;	time.c:161: epoch-=monthLength;
   060E 90s00r4E           1278 	mov	dptr,#_gmtime_epoch_1_1
   0611 ED                 1279 	mov	a,r5
   0612 C3                 1280 	clr	c
   0613 95*10              1281 	subb	a,_gmtime_sloc3_1_0
   0615 F0                 1282 	movx	@dptr,a
   0616 EE                 1283 	mov	a,r6
   0617 95*11              1284 	subb	a,(_gmtime_sloc3_1_0 + 1)
   0619 A3                 1285 	inc	dptr
   061A F0                 1286 	movx	@dptr,a
   061B EF                 1287 	mov	a,r7
   061C 95*12              1288 	subb	a,(_gmtime_sloc3_1_0 + 2)
   061E A3                 1289 	inc	dptr
   061F F0                 1290 	movx	@dptr,a
   0620 E8                 1291 	mov	a,r0
   0621 95*13              1292 	subb	a,(_gmtime_sloc3_1_0 + 3)
   0623 A3                 1293 	inc	dptr
   0624 F0                 1294 	movx	@dptr,a
                           1295 ;	time.c:149: for (month=0; month<12; month++) {
   0625 0C                 1296 	inc	r4
   0626 80 93              1297 	sjmp	00113$
   0628                    1298 00116$:
                           1299 ;	time.c:166: lastTime.tm_mon=month;
   0628 90s00r40           1300 	mov	dptr,#(_lastTime + 0x0004)
   062B EC                 1301 	mov	a,r4
   062C F0                 1302 	movx	@dptr,a
                           1303 ;	time.c:167: lastTime.tm_mday=epoch+1;
   062D 90s00r4E           1304 	mov	dptr,#_gmtime_epoch_1_1
   0630 E0                 1305 	movx	a,@dptr
   0631 FA                 1306 	mov	r2,a
   0632 A3                 1307 	inc	dptr
   0633 E0                 1308 	movx	a,@dptr
   0634 A3                 1309 	inc	dptr
   0635 E0                 1310 	movx	a,@dptr
   0636 A3                 1311 	inc	dptr
   0637 E0                 1312 	movx	a,@dptr
   0638 0A                 1313 	inc	r2
   0639 90s00r3F           1314 	mov	dptr,#(_lastTime + 0x0003)
   063C EA                 1315 	mov	a,r2
   063D F0                 1316 	movx	@dptr,a
                           1317 ;	time.c:169: lastTime.tm_isdst=0;
   063E 90s00r46           1318 	mov	dptr,#(_lastTime + 0x000a)
   0641 E4                 1319 	clr	a
   0642 F0                 1320 	movx	@dptr,a
                           1321 ;	time.c:171: return &lastTime;
   0643 90s00r3C           1322 	mov	dptr,#_lastTime
   0646 75 F0 00           1323 	mov	b,#0x00
   0649 22                 1324 	ret
                           1325 ;------------------------------------------------------------
                           1326 ;Allocation info for local variables in function 'mktime'
                           1327 ;------------------------------------------------------------
                           1328 ;sloc0                     Allocated with name '_mktime_sloc0_1_0'
                           1329 ;sloc1                     Allocated with name '_mktime_sloc1_1_0'
                           1330 ;sloc2                     Allocated with name '_mktime_sloc2_1_0'
                           1331 ;sloc3                     Allocated with name '_mktime_sloc3_1_0'
                           1332 ;timeptr                   Allocated with name '_mktime_timeptr_1_1'
                           1333 ;year                      Allocated with name '_mktime_year_1_1'
                           1334 ;month                     Allocated with name '_mktime_month_1_1'
                           1335 ;i                         Allocated with name '_mktime_i_1_1'
                           1336 ;seconds                   Allocated with name '_mktime_seconds_1_1'
                           1337 ;------------------------------------------------------------
                           1338 ;	time.c:175: time_t mktime(struct tm *timeptr) {
                           1339 ;	-----------------------------------------
                           1340 ;	 function mktime
                           1341 ;	-----------------------------------------
   064A                    1342 _mktime:
   064A AA F0              1343 	mov	r2,b
   064C AB 83              1344 	mov	r3,dph
   064E E5 82              1345 	mov	a,dpl
   0650 90s00r57           1346 	mov	dptr,#_mktime_timeptr_1_1
   0653 F0                 1347 	movx	@dptr,a
   0654 A3                 1348 	inc	dptr
   0655 EB                 1349 	mov	a,r3
   0656 F0                 1350 	movx	@dptr,a
   0657 A3                 1351 	inc	dptr
   0658 EA                 1352 	mov	a,r2
   0659 F0                 1353 	movx	@dptr,a
                           1354 ;	time.c:176: int year=timeptr->tm_year+1900, month=timeptr->tm_mon, i;
   065A 90s00r57           1355 	mov	dptr,#_mktime_timeptr_1_1
   065D E0                 1356 	movx	a,@dptr
   065E F5*1A              1357 	mov	_mktime_sloc2_1_0,a
   0660 A3                 1358 	inc	dptr
   0661 E0                 1359 	movx	a,@dptr
   0662 F5*1B              1360 	mov	(_mktime_sloc2_1_0 + 1),a
   0664 A3                 1361 	inc	dptr
   0665 E0                 1362 	movx	a,@dptr
   0666 F5*1C              1363 	mov	(_mktime_sloc2_1_0 + 2),a
   0668 74 05              1364 	mov	a,#0x05
   066A 25*1A              1365 	add	a,_mktime_sloc2_1_0
   066C FD                 1366 	mov	r5,a
   066D E4                 1367 	clr	a
   066E 35*1B              1368 	addc	a,(_mktime_sloc2_1_0 + 1)
   0670 FE                 1369 	mov	r6,a
   0671 AF*1C              1370 	mov	r7,(_mktime_sloc2_1_0 + 2)
   0673 8D 82              1371 	mov	dpl,r5
   0675 8E 83              1372 	mov	dph,r6
   0677 8F F0              1373 	mov	b,r7
   0679 12s00r00           1374 	lcall	__gptrget
   067C FD                 1375 	mov	r5,a
   067D A3                 1376 	inc	dptr
   067E 12s00r00           1377 	lcall	__gptrget
   0681 FE                 1378 	mov	r6,a
   0682 74 6C              1379 	mov	a,#0x6C
   0684 2D                 1380 	add	a,r5
   0685 FD                 1381 	mov	r5,a
   0686 74 07              1382 	mov	a,#0x07
   0688 3E                 1383 	addc	a,r6
   0689 FE                 1384 	mov	r6,a
   068A 74 04              1385 	mov	a,#0x04
   068C 25*1A              1386 	add	a,_mktime_sloc2_1_0
   068E FF                 1387 	mov	r7,a
   068F E4                 1388 	clr	a
   0690 35*1B              1389 	addc	a,(_mktime_sloc2_1_0 + 1)
   0692 F8                 1390 	mov	r0,a
   0693 A9*1C              1391 	mov	r1,(_mktime_sloc2_1_0 + 2)
   0695 8F 82              1392 	mov	dpl,r7
   0697 88 83              1393 	mov	dph,r0
   0699 89 F0              1394 	mov	b,r1
   069B 12s00r00           1395 	lcall	__gptrget
   069E FF                 1396 	mov	r7,a
   069F 8F*14              1397 	mov	_mktime_sloc0_1_0,r7
   06A1 75*15 00           1398 	mov	(_mktime_sloc0_1_0 + 1),#0x00
                           1399 ;	time.c:179: CheckTime(timeptr);
   06A4 85*1A 82           1400 	mov	dpl,_mktime_sloc2_1_0
   06A7 85*1B 83           1401 	mov	dph,(_mktime_sloc2_1_0 + 1)
   06AA 85*1C F0           1402 	mov	b,(_mktime_sloc2_1_0 + 2)
   06AD C0 05              1403 	push	ar5
   06AF C0 06              1404 	push	ar6
   06B1 12s00r96           1405 	lcall	_CheckTime
   06B4 D0 06              1406 	pop	ar6
   06B6 D0 05              1407 	pop	ar5
                           1408 ;	time.c:182: seconds= (year-1970)*(60*60*24L*365);
   06B8 ED                 1409 	mov	a,r5
   06B9 24 4E              1410 	add	a,#0x4e
   06BB F9                 1411 	mov	r1,a
   06BC EE                 1412 	mov	a,r6
   06BD 34 F8              1413 	addc	a,#0xf8
   06BF FF                 1414 	mov	r7,a
   06C0 90s00r00           1415 	mov	dptr,#__mullong_PARM_2
   06C3 E9                 1416 	mov	a,r1
   06C4 F0                 1417 	movx	@dptr,a
   06C5 A3                 1418 	inc	dptr
   06C6 EF                 1419 	mov	a,r7
   06C7 F0                 1420 	movx	@dptr,a
   06C8 EF                 1421 	mov	a,r7
   06C9 33                 1422 	rlc	a
   06CA 95 E0              1423 	subb	a,acc
   06CC A3                 1424 	inc	dptr
   06CD F0                 1425 	movx	@dptr,a
   06CE A3                 1426 	inc	dptr
   06CF F0                 1427 	movx	@dptr,a
   06D0 90 33 80           1428 	mov	dptr,#0x3380
   06D3 75 F0 E1           1429 	mov	b,#0xE1
   06D6 74 01              1430 	mov	a,#0x01
   06D8 C0 05              1431 	push	ar5
   06DA C0 06              1432 	push	ar6
   06DC 12s00r00           1433 	lcall	__mullong
   06DF 85 82*16           1434 	mov	_mktime_sloc1_1_0,dpl
   06E2 85 83*17           1435 	mov	(_mktime_sloc1_1_0 + 1),dph
   06E5 85 F0*18           1436 	mov	(_mktime_sloc1_1_0 + 2),b
   06E8 F5*19              1437 	mov	(_mktime_sloc1_1_0 + 3),a
   06EA D0 06              1438 	pop	ar6
   06EC D0 05              1439 	pop	ar5
                           1440 ;	time.c:185: for (i=1970; i<year; i++) {
   06EE 7F B2              1441 	mov	r7,#0xB2
   06F0 78 07              1442 	mov	r0,#0x07
   06F2                    1443 00107$:
   06F2 C3                 1444 	clr	c
   06F3 EF                 1445 	mov	a,r7
   06F4 9D                 1446 	subb	a,r5
   06F5 E8                 1447 	mov	a,r0
   06F6 64 80              1448 	xrl	a,#0x80
   06F8 8E F0              1449 	mov	b,r6
   06FA 63 F0 80           1450 	xrl	b,#0x80
   06FD 95 F0              1451 	subb	a,b
   06FF 50 47              1452 	jnc	00124$
                           1453 ;	time.c:186: if (LEAP_YEAR(i)) {
   0701 90s00r00           1454 	mov	dptr,#__modsint_PARM_2
   0704 74 04              1455 	mov	a,#0x04
   0706 F0                 1456 	movx	@dptr,a
   0707 E4                 1457 	clr	a
   0708 A3                 1458 	inc	dptr
   0709 F0                 1459 	movx	@dptr,a
   070A 8F 82              1460 	mov	dpl,r7
   070C 88 83              1461 	mov	dph,r0
   070E C0 05              1462 	push	ar5
   0710 C0 06              1463 	push	ar6
   0712 C0 07              1464 	push	ar7
   0714 C0 00              1465 	push	ar0
   0716 12s00r00           1466 	lcall	__modsint
   0719 E5 82              1467 	mov	a,dpl
   071B 85 83 F0           1468 	mov	b,dph
   071E D0 00              1469 	pop	ar0
   0720 D0 07              1470 	pop	ar7
   0722 D0 06              1471 	pop	ar6
   0724 D0 05              1472 	pop	ar5
   0726 45 F0              1473 	orl	a,b
   0728 70 17              1474 	jnz	00109$
                           1475 ;	time.c:187: seconds+= 60*60*24L;
   072A 74 80              1476 	mov	a,#0x80
   072C 25*16              1477 	add	a,_mktime_sloc1_1_0
   072E F5*16              1478 	mov	_mktime_sloc1_1_0,a
   0730 74 51              1479 	mov	a,#0x51
   0732 35*17              1480 	addc	a,(_mktime_sloc1_1_0 + 1)
   0734 F5*17              1481 	mov	(_mktime_sloc1_1_0 + 1),a
   0736 74 01              1482 	mov	a,#0x01
   0738 35*18              1483 	addc	a,(_mktime_sloc1_1_0 + 2)
   073A F5*18              1484 	mov	(_mktime_sloc1_1_0 + 2),a
   073C E4                 1485 	clr	a
   073D 35*19              1486 	addc	a,(_mktime_sloc1_1_0 + 3)
   073F F5*19              1487 	mov	(_mktime_sloc1_1_0 + 3),a
   0741                    1488 00109$:
                           1489 ;	time.c:185: for (i=1970; i<year; i++) {
   0741 0F                 1490 	inc	r7
   0742 BF 00 AD           1491 	cjne	r7,#0x00,00107$
   0745 08                 1492 	inc	r0
   0746 80 AA              1493 	sjmp	00107$
   0748                    1494 00124$:
   0748 90s00r5A           1495 	mov	dptr,#_mktime_seconds_1_1
   074B E5*16              1496 	mov	a,_mktime_sloc1_1_0
   074D F0                 1497 	movx	@dptr,a
   074E A3                 1498 	inc	dptr
   074F E5*17              1499 	mov	a,(_mktime_sloc1_1_0 + 1)
   0751 F0                 1500 	movx	@dptr,a
   0752 A3                 1501 	inc	dptr
   0753 E5*18              1502 	mov	a,(_mktime_sloc1_1_0 + 2)
   0755 F0                 1503 	movx	@dptr,a
   0756 A3                 1504 	inc	dptr
   0757 E5*19              1505 	mov	a,(_mktime_sloc1_1_0 + 3)
   0759 F0                 1506 	movx	@dptr,a
                           1507 ;	time.c:192: for (i=0; i<month; i++) {
   075A 90s00r00           1508 	mov	dptr,#__modsint_PARM_2
   075D 74 04              1509 	mov	a,#0x04
   075F F0                 1510 	movx	@dptr,a
   0760 E4                 1511 	clr	a
   0761 A3                 1512 	inc	dptr
   0762 F0                 1513 	movx	@dptr,a
   0763 8D 82              1514 	mov	dpl,r5
   0765 8E 83              1515 	mov	dph,r6
   0767 12s00r00           1516 	lcall	__modsint
   076A 85 82*16           1517 	mov	_mktime_sloc1_1_0,dpl
   076D 85 83*17           1518 	mov	(_mktime_sloc1_1_0 + 1),dph
   0770 7F 00              1519 	mov	r7,#0x00
   0772 78 00              1520 	mov	r0,#0x00
   0774                    1521 00111$:
   0774 C3                 1522 	clr	c
   0775 EF                 1523 	mov	a,r7
   0776 95*14              1524 	subb	a,_mktime_sloc0_1_0
   0778 E8                 1525 	mov	a,r0
   0779 64 80              1526 	xrl	a,#0x80
   077B 85*15 F0           1527 	mov	b,(_mktime_sloc0_1_0 + 1)
   077E 63 F0 80           1528 	xrl	b,#0x80
   0781 95 F0              1529 	subb	a,b
   0783 40 03              1530 	jc	00128$
   0785 02s08r1D           1531 	ljmp	00114$
   0788                    1532 00128$:
                           1533 ;	time.c:193: if (i==1 && LEAP_YEAR(year)) { 
   0788 BF 01 2E           1534 	cjne	r7,#0x01,00104$
   078B B8 00 2B           1535 	cjne	r0,#0x00,00104$
   078E E5*16              1536 	mov	a,_mktime_sloc1_1_0
   0790 45*17              1537 	orl	a,(_mktime_sloc1_1_0 + 1)
   0792 70 25              1538 	jnz	00104$
                           1539 ;	time.c:194: seconds+= 60*60*24L*29;
   0794 90s00r5A           1540 	mov	dptr,#_mktime_seconds_1_1
   0797 E0                 1541 	movx	a,@dptr
   0798 F9                 1542 	mov	r1,a
   0799 A3                 1543 	inc	dptr
   079A E0                 1544 	movx	a,@dptr
   079B FD                 1545 	mov	r5,a
   079C A3                 1546 	inc	dptr
   079D E0                 1547 	movx	a,@dptr
   079E FE                 1548 	mov	r6,a
   079F A3                 1549 	inc	dptr
   07A0 E0                 1550 	movx	a,@dptr
   07A1 FA                 1551 	mov	r2,a
   07A2 90s00r5A           1552 	mov	dptr,#_mktime_seconds_1_1
   07A5 74 80              1553 	mov	a,#0x80
   07A7 29                 1554 	add	a,r1
   07A8 F0                 1555 	movx	@dptr,a
   07A9 74 3B              1556 	mov	a,#0x3B
   07AB 3D                 1557 	addc	a,r5
   07AC A3                 1558 	inc	dptr
   07AD F0                 1559 	movx	@dptr,a
   07AE 74 26              1560 	mov	a,#0x26
   07B0 3E                 1561 	addc	a,r6
   07B1 A3                 1562 	inc	dptr
   07B2 F0                 1563 	movx	@dptr,a
   07B3 E4                 1564 	clr	a
   07B4 3A                 1565 	addc	a,r2
   07B5 A3                 1566 	inc	dptr
   07B6 F0                 1567 	movx	@dptr,a
   07B7 80 5C              1568 	sjmp	00113$
   07B9                    1569 00104$:
                           1570 ;	time.c:196: seconds+= 60*60*24L*monthDays[i];
   07B9 EF                 1571 	mov	a,r7
   07BA 24r00              1572 	add	a,#_monthDays
   07BC F5 82              1573 	mov	dpl,a
   07BE E8                 1574 	mov	a,r0
   07BF 34s00              1575 	addc	a,#(_monthDays >> 8)
   07C1 F5 83              1576 	mov	dph,a
   07C3 E4                 1577 	clr	a
   07C4 93                 1578 	movc	a,@a+dptr
   07C5 FA                 1579 	mov	r2,a
   07C6 90s00r00           1580 	mov	dptr,#__mullong_PARM_2
   07C9 F0                 1581 	movx	@dptr,a
   07CA EA                 1582 	mov	a,r2
   07CB 33                 1583 	rlc	a
   07CC 95 E0              1584 	subb	a,acc
   07CE A3                 1585 	inc	dptr
   07CF F0                 1586 	movx	@dptr,a
   07D0 A3                 1587 	inc	dptr
   07D1 F0                 1588 	movx	@dptr,a
   07D2 A3                 1589 	inc	dptr
   07D3 F0                 1590 	movx	@dptr,a
   07D4 90 51 80           1591 	mov	dptr,#0x5180
   07D7 75 F0 01           1592 	mov	b,#0x01
   07DA E4                 1593 	clr	a
   07DB C0 07              1594 	push	ar7
   07DD C0 00              1595 	push	ar0
   07DF 12s00r00           1596 	lcall	__mullong
   07E2 85 82*1D           1597 	mov	_mktime_sloc3_1_0,dpl
   07E5 85 83*1E           1598 	mov	(_mktime_sloc3_1_0 + 1),dph
   07E8 85 F0*1F           1599 	mov	(_mktime_sloc3_1_0 + 2),b
   07EB F5*20              1600 	mov	(_mktime_sloc3_1_0 + 3),a
   07ED D0 00              1601 	pop	ar0
   07EF D0 07              1602 	pop	ar7
   07F1 90s00r5A           1603 	mov	dptr,#_mktime_seconds_1_1
   07F4 E0                 1604 	movx	a,@dptr
   07F5 FD                 1605 	mov	r5,a
   07F6 A3                 1606 	inc	dptr
   07F7 E0                 1607 	movx	a,@dptr
   07F8 FE                 1608 	mov	r6,a
   07F9 A3                 1609 	inc	dptr
   07FA E0                 1610 	movx	a,@dptr
   07FB FA                 1611 	mov	r2,a
   07FC A3                 1612 	inc	dptr
   07FD E0                 1613 	movx	a,@dptr
   07FE FB                 1614 	mov	r3,a
   07FF 90s00r5A           1615 	mov	dptr,#_mktime_seconds_1_1
   0802 E5*1D              1616 	mov	a,_mktime_sloc3_1_0
   0804 2D                 1617 	add	a,r5
   0805 F0                 1618 	movx	@dptr,a
   0806 E5*1E              1619 	mov	a,(_mktime_sloc3_1_0 + 1)
   0808 3E                 1620 	addc	a,r6
   0809 A3                 1621 	inc	dptr
   080A F0                 1622 	movx	@dptr,a
   080B E5*1F              1623 	mov	a,(_mktime_sloc3_1_0 + 2)
   080D 3A                 1624 	addc	a,r2
   080E A3                 1625 	inc	dptr
   080F F0                 1626 	movx	@dptr,a
   0810 E5*20              1627 	mov	a,(_mktime_sloc3_1_0 + 3)
   0812 3B                 1628 	addc	a,r3
   0813 A3                 1629 	inc	dptr
   0814 F0                 1630 	movx	@dptr,a
   0815                    1631 00113$:
                           1632 ;	time.c:192: for (i=0; i<month; i++) {
   0815 0F                 1633 	inc	r7
   0816 BF 00 01           1634 	cjne	r7,#0x00,00132$
   0819 08                 1635 	inc	r0
   081A                    1636 00132$:
   081A 02s07r74           1637 	ljmp	00111$
   081D                    1638 00114$:
                           1639 ;	time.c:200: seconds+= (timeptr->tm_mday-1)*60*60*24L;
   081D 74 03              1640 	mov	a,#0x03
   081F 25*1A              1641 	add	a,_mktime_sloc2_1_0
   0821 FA                 1642 	mov	r2,a
   0822 E4                 1643 	clr	a
   0823 35*1B              1644 	addc	a,(_mktime_sloc2_1_0 + 1)
   0825 FB                 1645 	mov	r3,a
   0826 AC*1C              1646 	mov	r4,(_mktime_sloc2_1_0 + 2)
   0828 8A 82              1647 	mov	dpl,r2
   082A 8B 83              1648 	mov	dph,r3
   082C 8C F0              1649 	mov	b,r4
   082E 12s00r00           1650 	lcall	__gptrget
   0831 FA                 1651 	mov	r2,a
   0832 7B 00              1652 	mov	r3,#0x00
   0834 1A                 1653 	dec	r2
   0835 BA FF 01           1654 	cjne	r2,#0xff,00133$
   0838 1B                 1655 	dec	r3
   0839                    1656 00133$:
   0839 90s00r00           1657 	mov	dptr,#__mullong_PARM_2
   083C EA                 1658 	mov	a,r2
   083D F0                 1659 	movx	@dptr,a
   083E A3                 1660 	inc	dptr
   083F EB                 1661 	mov	a,r3
   0840 F0                 1662 	movx	@dptr,a
   0841 EB                 1663 	mov	a,r3
   0842 33                 1664 	rlc	a
   0843 95 E0              1665 	subb	a,acc
   0845 A3                 1666 	inc	dptr
   0846 F0                 1667 	movx	@dptr,a
   0847 A3                 1668 	inc	dptr
   0848 F0                 1669 	movx	@dptr,a
   0849 90 51 80           1670 	mov	dptr,#0x5180
   084C 75 F0 01           1671 	mov	b,#0x01
   084F E4                 1672 	clr	a
   0850 12s00r00           1673 	lcall	__mullong
   0853 AA 82              1674 	mov	r2,dpl
   0855 AB 83              1675 	mov	r3,dph
   0857 AC F0              1676 	mov	r4,b
   0859 FD                 1677 	mov	r5,a
   085A 90s00r5A           1678 	mov	dptr,#_mktime_seconds_1_1
   085D E0                 1679 	movx	a,@dptr
   085E FE                 1680 	mov	r6,a
   085F A3                 1681 	inc	dptr
   0860 E0                 1682 	movx	a,@dptr
   0861 FF                 1683 	mov	r7,a
   0862 A3                 1684 	inc	dptr
   0863 E0                 1685 	movx	a,@dptr
   0864 F8                 1686 	mov	r0,a
   0865 A3                 1687 	inc	dptr
   0866 E0                 1688 	movx	a,@dptr
   0867 F9                 1689 	mov	r1,a
   0868 90s00r5A           1690 	mov	dptr,#_mktime_seconds_1_1
   086B EA                 1691 	mov	a,r2
   086C 2E                 1692 	add	a,r6
   086D F0                 1693 	movx	@dptr,a
   086E EB                 1694 	mov	a,r3
   086F 3F                 1695 	addc	a,r7
   0870 A3                 1696 	inc	dptr
   0871 F0                 1697 	movx	@dptr,a
   0872 EC                 1698 	mov	a,r4
   0873 38                 1699 	addc	a,r0
   0874 A3                 1700 	inc	dptr
   0875 F0                 1701 	movx	@dptr,a
   0876 ED                 1702 	mov	a,r5
   0877 39                 1703 	addc	a,r1
   0878 A3                 1704 	inc	dptr
   0879 F0                 1705 	movx	@dptr,a
                           1706 ;	time.c:201: seconds+= timeptr->tm_hour*60*60L;
   087A 74 02              1707 	mov	a,#0x02
   087C 25*1A              1708 	add	a,_mktime_sloc2_1_0
   087E FA                 1709 	mov	r2,a
   087F E4                 1710 	clr	a
   0880 35*1B              1711 	addc	a,(_mktime_sloc2_1_0 + 1)
   0882 FB                 1712 	mov	r3,a
   0883 AC*1C              1713 	mov	r4,(_mktime_sloc2_1_0 + 2)
   0885 8A 82              1714 	mov	dpl,r2
   0887 8B 83              1715 	mov	dph,r3
   0889 8C F0              1716 	mov	b,r4
   088B 12s00r00           1717 	lcall	__gptrget
   088E 90s00r00           1718 	mov	dptr,#__mullong_PARM_2
   0891 F0                 1719 	movx	@dptr,a
   0892 A3                 1720 	inc	dptr
   0893 E4                 1721 	clr	a
   0894 F0                 1722 	movx	@dptr,a
   0895 A3                 1723 	inc	dptr
   0896 F0                 1724 	movx	@dptr,a
   0897 A3                 1725 	inc	dptr
   0898 F0                 1726 	movx	@dptr,a
   0899 90 0E 10           1727 	mov	dptr,#0x0E10
   089C E4                 1728 	clr	a
   089D F5 F0              1729 	mov	b,a
   089F 12s00r00           1730 	lcall	__mullong
   08A2 AA 82              1731 	mov	r2,dpl
   08A4 AB 83              1732 	mov	r3,dph
   08A6 AC F0              1733 	mov	r4,b
   08A8 FD                 1734 	mov	r5,a
   08A9 90s00r5A           1735 	mov	dptr,#_mktime_seconds_1_1
   08AC E0                 1736 	movx	a,@dptr
   08AD FE                 1737 	mov	r6,a
   08AE A3                 1738 	inc	dptr
   08AF E0                 1739 	movx	a,@dptr
   08B0 FF                 1740 	mov	r7,a
   08B1 A3                 1741 	inc	dptr
   08B2 E0                 1742 	movx	a,@dptr
   08B3 F8                 1743 	mov	r0,a
   08B4 A3                 1744 	inc	dptr
   08B5 E0                 1745 	movx	a,@dptr
   08B6 F9                 1746 	mov	r1,a
   08B7 90s00r5A           1747 	mov	dptr,#_mktime_seconds_1_1
   08BA EA                 1748 	mov	a,r2
   08BB 2E                 1749 	add	a,r6
   08BC F0                 1750 	movx	@dptr,a
   08BD EB                 1751 	mov	a,r3
   08BE 3F                 1752 	addc	a,r7
   08BF A3                 1753 	inc	dptr
   08C0 F0                 1754 	movx	@dptr,a
   08C1 EC                 1755 	mov	a,r4
   08C2 38                 1756 	addc	a,r0
   08C3 A3                 1757 	inc	dptr
   08C4 F0                 1758 	movx	@dptr,a
   08C5 ED                 1759 	mov	a,r5
   08C6 39                 1760 	addc	a,r1
   08C7 A3                 1761 	inc	dptr
   08C8 F0                 1762 	movx	@dptr,a
                           1763 ;	time.c:202: seconds+= timeptr->tm_min*60;
   08C9 74 01              1764 	mov	a,#0x01
   08CB 25*1A              1765 	add	a,_mktime_sloc2_1_0
   08CD FA                 1766 	mov	r2,a
   08CE E4                 1767 	clr	a
   08CF 35*1B              1768 	addc	a,(_mktime_sloc2_1_0 + 1)
   08D1 FB                 1769 	mov	r3,a
   08D2 AC*1C              1770 	mov	r4,(_mktime_sloc2_1_0 + 2)
   08D4 8A 82              1771 	mov	dpl,r2
   08D6 8B 83              1772 	mov	dph,r3
   08D8 8C F0              1773 	mov	b,r4
   08DA 12s00r00           1774 	lcall	__gptrget
   08DD 75 F0 3C           1775 	mov	b,#0x3C
   08E0 A4                 1776 	mul	ab
   08E1 FA                 1777 	mov	r2,a
   08E2 AB F0              1778 	mov	r3,b
   08E4 90s00r5A           1779 	mov	dptr,#_mktime_seconds_1_1
   08E7 E0                 1780 	movx	a,@dptr
   08E8 FC                 1781 	mov	r4,a
   08E9 A3                 1782 	inc	dptr
   08EA E0                 1783 	movx	a,@dptr
   08EB FD                 1784 	mov	r5,a
   08EC A3                 1785 	inc	dptr
   08ED E0                 1786 	movx	a,@dptr
   08EE FE                 1787 	mov	r6,a
   08EF A3                 1788 	inc	dptr
   08F0 E0                 1789 	movx	a,@dptr
   08F1 FF                 1790 	mov	r7,a
   08F2 EB                 1791 	mov	a,r3
   08F3 33                 1792 	rlc	a
   08F4 95 E0              1793 	subb	a,acc
   08F6 F8                 1794 	mov	r0,a
   08F7 F9                 1795 	mov	r1,a
   08F8 90s00r5A           1796 	mov	dptr,#_mktime_seconds_1_1
   08FB EA                 1797 	mov	a,r2
   08FC 2C                 1798 	add	a,r4
   08FD F0                 1799 	movx	@dptr,a
   08FE EB                 1800 	mov	a,r3
   08FF 3D                 1801 	addc	a,r5
   0900 A3                 1802 	inc	dptr
   0901 F0                 1803 	movx	@dptr,a
   0902 E8                 1804 	mov	a,r0
   0903 3E                 1805 	addc	a,r6
   0904 A3                 1806 	inc	dptr
   0905 F0                 1807 	movx	@dptr,a
   0906 E9                 1808 	mov	a,r1
   0907 3F                 1809 	addc	a,r7
   0908 A3                 1810 	inc	dptr
   0909 F0                 1811 	movx	@dptr,a
                           1812 ;	time.c:203: seconds+= timeptr->tm_sec;
   090A 85*1A 82           1813 	mov	dpl,_mktime_sloc2_1_0
   090D 85*1B 83           1814 	mov	dph,(_mktime_sloc2_1_0 + 1)
   0910 85*1C F0           1815 	mov	b,(_mktime_sloc2_1_0 + 2)
   0913 12s00r00           1816 	lcall	__gptrget
   0916 FA                 1817 	mov	r2,a
   0917 7B 00              1818 	mov	r3,#0x00
   0919 90s00r5A           1819 	mov	dptr,#_mktime_seconds_1_1
   091C E0                 1820 	movx	a,@dptr
   091D FC                 1821 	mov	r4,a
   091E A3                 1822 	inc	dptr
   091F E0                 1823 	movx	a,@dptr
   0920 FD                 1824 	mov	r5,a
   0921 A3                 1825 	inc	dptr
   0922 E0                 1826 	movx	a,@dptr
   0923 FE                 1827 	mov	r6,a
   0924 A3                 1828 	inc	dptr
   0925 E0                 1829 	movx	a,@dptr
   0926 FF                 1830 	mov	r7,a
   0927 EB                 1831 	mov	a,r3
   0928 33                 1832 	rlc	a
   0929 95 E0              1833 	subb	a,acc
   092B F8                 1834 	mov	r0,a
   092C F9                 1835 	mov	r1,a
   092D 90s00r5A           1836 	mov	dptr,#_mktime_seconds_1_1
   0930 EA                 1837 	mov	a,r2
   0931 2C                 1838 	add	a,r4
   0932 F0                 1839 	movx	@dptr,a
   0933 EB                 1840 	mov	a,r3
   0934 3D                 1841 	addc	a,r5
   0935 A3                 1842 	inc	dptr
   0936 F0                 1843 	movx	@dptr,a
   0937 E8                 1844 	mov	a,r0
   0938 3E                 1845 	addc	a,r6
   0939 A3                 1846 	inc	dptr
   093A F0                 1847 	movx	@dptr,a
   093B E9                 1848 	mov	a,r1
   093C 3F                 1849 	addc	a,r7
   093D A3                 1850 	inc	dptr
   093E F0                 1851 	movx	@dptr,a
                           1852 ;	time.c:204: return seconds;
   093F 90s00r5A           1853 	mov	dptr,#_mktime_seconds_1_1
   0942 E0                 1854 	movx	a,@dptr
   0943 FA                 1855 	mov	r2,a
   0944 A3                 1856 	inc	dptr
   0945 E0                 1857 	movx	a,@dptr
   0946 FB                 1858 	mov	r3,a
   0947 A3                 1859 	inc	dptr
   0948 E0                 1860 	movx	a,@dptr
   0949 FC                 1861 	mov	r4,a
   094A A3                 1862 	inc	dptr
   094B E0                 1863 	movx	a,@dptr
   094C 8A 82              1864 	mov	dpl,r2
   094E 8B 83              1865 	mov	dph,r3
   0950 8C F0              1866 	mov	b,r4
   0952 22                 1867 	ret
                           1868 	.area CSEG    (CODE)
                           1869 	.area CONST   (CODE)
   0000                    1870 _monthDays:
   0000 1F                 1871 	.db #0x1F	;  31
   0001 1C                 1872 	.db #0x1C	;  28
   0002 1F                 1873 	.db #0x1F	;  31
   0003 1E                 1874 	.db #0x1E	;  30
   0004 1F                 1875 	.db #0x1F	;  31
   0005 1E                 1876 	.db #0x1E	;  30
   0006 1F                 1877 	.db #0x1F	;  31
   0007 1F                 1878 	.db #0x1F	;  31
   0008 1E                 1879 	.db #0x1E	;  30
   0009 1F                 1880 	.db #0x1F	;  31
   000A 1E                 1881 	.db #0x1E	;  30
   000B 1F                 1882 	.db #0x1F	;  31
   000C                    1883 ___month:
   000Cr51s00              1884 	.byte _str_1,(_str_1 >> 8)
   000Er55s00              1885 	.byte _str_2,(_str_2 >> 8)
   0010r59s00              1886 	.byte _str_3,(_str_3 >> 8)
   0012r5Ds00              1887 	.byte _str_4,(_str_4 >> 8)
   0014r61s00              1888 	.byte _str_5,(_str_5 >> 8)
   0016r65s00              1889 	.byte _str_6,(_str_6 >> 8)
   0018r69s00              1890 	.byte _str_7,(_str_7 >> 8)
   001Ar6Ds00              1891 	.byte _str_8,(_str_8 >> 8)
   001Cr71s00              1892 	.byte _str_9,(_str_9 >> 8)
   001Er75s00              1893 	.byte _str_10,(_str_10 >> 8)
   0020r79s00              1894 	.byte _str_11,(_str_11 >> 8)
   0022r7Ds00              1895 	.byte _str_12,(_str_12 >> 8)
   0024                    1896 ___day:
   0024r81s00              1897 	.byte _str_13,(_str_13 >> 8)
   0026r85s00              1898 	.byte _str_14,(_str_14 >> 8)
   0028r89s00              1899 	.byte _str_15,(_str_15 >> 8)
   002Ar8Ds00              1900 	.byte _str_16,(_str_16 >> 8)
   002Cr91s00              1901 	.byte _str_17,(_str_17 >> 8)
   002Er95s00              1902 	.byte _str_18,(_str_18 >> 8)
   0030r99s00              1903 	.byte _str_19,(_str_19 >> 8)
   0032                    1904 __str_0:
   0032 25 73 20 25 73 20  1905 	.ascii "%s %s %2d %02d:%02d:%02d %04d"
        25 32 64 20 25 30
        32 64 3A 25 30 32
        64 3A 25 30 32 64
        20 25 30 34 64
   004F 0A                 1906 	.db 0x0A
   0050 00                 1907 	.db 0x00
   0051                    1908 _str_1:
   0051 4A 61 6E           1909 	.ascii "Jan"
   0054 00                 1910 	.db 0x00
   0055                    1911 _str_2:
   0055 46 65 62           1912 	.ascii "Feb"
   0058 00                 1913 	.db 0x00
   0059                    1914 _str_3:
   0059 4D 61 72           1915 	.ascii "Mar"
   005C 00                 1916 	.db 0x00
   005D                    1917 _str_4:
   005D 41 70 72           1918 	.ascii "Apr"
   0060 00                 1919 	.db 0x00
   0061                    1920 _str_5:
   0061 4D 61 79           1921 	.ascii "May"
   0064 00                 1922 	.db 0x00
   0065                    1923 _str_6:
   0065 4A 75 6E           1924 	.ascii "Jun"
   0068 00                 1925 	.db 0x00
   0069                    1926 _str_7:
   0069 4A 75 6C           1927 	.ascii "Jul"
   006C 00                 1928 	.db 0x00
   006D                    1929 _str_8:
   006D 41 75 67           1930 	.ascii "Aug"
   0070 00                 1931 	.db 0x00
   0071                    1932 _str_9:
   0071 53 65 70           1933 	.ascii "Sep"
   0074 00                 1934 	.db 0x00
   0075                    1935 _str_10:
   0075 4F 63 74           1936 	.ascii "Oct"
   0078 00                 1937 	.db 0x00
   0079                    1938 _str_11:
   0079 4E 6F 76           1939 	.ascii "Nov"
   007C 00                 1940 	.db 0x00
   007D                    1941 _str_12:
   007D 44 65 63           1942 	.ascii "Dec"
   0080 00                 1943 	.db 0x00
   0081                    1944 _str_13:
   0081 53 75 6E           1945 	.ascii "Sun"
   0084 00                 1946 	.db 0x00
   0085                    1947 _str_14:
   0085 4D 6F 6E           1948 	.ascii "Mon"
   0088 00                 1949 	.db 0x00
   0089                    1950 _str_15:
   0089 54 75 65           1951 	.ascii "Tue"
   008C 00                 1952 	.db 0x00
   008D                    1953 _str_16:
   008D 57 65 64           1954 	.ascii "Wed"
   0090 00                 1955 	.db 0x00
   0091                    1956 _str_17:
   0091 54 68 75           1957 	.ascii "Thu"
   0094 00                 1958 	.db 0x00
   0095                    1959 _str_18:
   0095 46 72 69           1960 	.ascii "Fri"
   0098 00                 1961 	.db 0x00
   0099                    1962 _str_19:
   0099 53 61 74           1963 	.ascii "Sat"
   009C 00                 1964 	.db 0x00
                           1965 	.area XINIT   (CODE)
                           1966 	.area CABS    (ABS,CODE)

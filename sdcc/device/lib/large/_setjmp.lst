                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:25:56 2013
                              5 ;--------------------------------------------------------
                              6 	.module _setjmp
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _CY
                             13 	.globl _AC
                             14 	.globl _F0
                             15 	.globl _RS1
                             16 	.globl _RS0
                             17 	.globl _OV
                             18 	.globl _F1
                             19 	.globl _P
                             20 	.globl _PS
                             21 	.globl _PT1
                             22 	.globl _PX1
                             23 	.globl _PT0
                             24 	.globl _PX0
                             25 	.globl _RD
                             26 	.globl _WR
                             27 	.globl _T1
                             28 	.globl _T0
                             29 	.globl _INT1
                             30 	.globl _INT0
                             31 	.globl _TXD
                             32 	.globl _RXD
                             33 	.globl _P3_7
                             34 	.globl _P3_6
                             35 	.globl _P3_5
                             36 	.globl _P3_4
                             37 	.globl _P3_3
                             38 	.globl _P3_2
                             39 	.globl _P3_1
                             40 	.globl _P3_0
                             41 	.globl _EA
                             42 	.globl _ES
                             43 	.globl _ET1
                             44 	.globl _EX1
                             45 	.globl _ET0
                             46 	.globl _EX0
                             47 	.globl _P2_7
                             48 	.globl _P2_6
                             49 	.globl _P2_5
                             50 	.globl _P2_4
                             51 	.globl _P2_3
                             52 	.globl _P2_2
                             53 	.globl _P2_1
                             54 	.globl _P2_0
                             55 	.globl _SM0
                             56 	.globl _SM1
                             57 	.globl _SM2
                             58 	.globl _REN
                             59 	.globl _TB8
                             60 	.globl _RB8
                             61 	.globl _TI
                             62 	.globl _RI
                             63 	.globl _P1_7
                             64 	.globl _P1_6
                             65 	.globl _P1_5
                             66 	.globl _P1_4
                             67 	.globl _P1_3
                             68 	.globl _P1_2
                             69 	.globl _P1_1
                             70 	.globl _P1_0
                             71 	.globl _TF1
                             72 	.globl _TR1
                             73 	.globl _TF0
                             74 	.globl _TR0
                             75 	.globl _IE1
                             76 	.globl _IT1
                             77 	.globl _IE0
                             78 	.globl _IT0
                             79 	.globl _P0_7
                             80 	.globl _P0_6
                             81 	.globl _P0_5
                             82 	.globl _P0_4
                             83 	.globl _P0_3
                             84 	.globl _P0_2
                             85 	.globl _P0_1
                             86 	.globl _P0_0
                             87 	.globl _B
                             88 	.globl _ACC
                             89 	.globl _PSW
                             90 	.globl _IP
                             91 	.globl _P3
                             92 	.globl _IE
                             93 	.globl _P2
                             94 	.globl _SBUF
                             95 	.globl _SCON
                             96 	.globl _P1
                             97 	.globl _TH1
                             98 	.globl _TH0
                             99 	.globl _TL1
                            100 	.globl _TL0
                            101 	.globl _TMOD
                            102 	.globl _TCON
                            103 	.globl _PCON
                            104 	.globl _DPH
                            105 	.globl _DPL
                            106 	.globl _SP
                            107 	.globl _P0
                            108 	.globl _longjmp_PARM_2
                            109 	.globl _setjmp
                            110 	.globl _longjmp
                            111 ;--------------------------------------------------------
                            112 ; special function registers
                            113 ;--------------------------------------------------------
                            114 	.area RSEG    (ABS,DATA)
   0000                     115 	.org 0x0000
                    0080    116 _P0	=	0x0080
                    0081    117 _SP	=	0x0081
                    0082    118 _DPL	=	0x0082
                    0083    119 _DPH	=	0x0083
                    0087    120 _PCON	=	0x0087
                    0088    121 _TCON	=	0x0088
                    0089    122 _TMOD	=	0x0089
                    008A    123 _TL0	=	0x008a
                    008B    124 _TL1	=	0x008b
                    008C    125 _TH0	=	0x008c
                    008D    126 _TH1	=	0x008d
                    0090    127 _P1	=	0x0090
                    0098    128 _SCON	=	0x0098
                    0099    129 _SBUF	=	0x0099
                    00A0    130 _P2	=	0x00a0
                    00A8    131 _IE	=	0x00a8
                    00B0    132 _P3	=	0x00b0
                    00B8    133 _IP	=	0x00b8
                    00D0    134 _PSW	=	0x00d0
                    00E0    135 _ACC	=	0x00e0
                    00F0    136 _B	=	0x00f0
                            137 ;--------------------------------------------------------
                            138 ; special function bits
                            139 ;--------------------------------------------------------
                            140 	.area RSEG    (ABS,DATA)
   0000                     141 	.org 0x0000
                    0080    142 _P0_0	=	0x0080
                    0081    143 _P0_1	=	0x0081
                    0082    144 _P0_2	=	0x0082
                    0083    145 _P0_3	=	0x0083
                    0084    146 _P0_4	=	0x0084
                    0085    147 _P0_5	=	0x0085
                    0086    148 _P0_6	=	0x0086
                    0087    149 _P0_7	=	0x0087
                    0088    150 _IT0	=	0x0088
                    0089    151 _IE0	=	0x0089
                    008A    152 _IT1	=	0x008a
                    008B    153 _IE1	=	0x008b
                    008C    154 _TR0	=	0x008c
                    008D    155 _TF0	=	0x008d
                    008E    156 _TR1	=	0x008e
                    008F    157 _TF1	=	0x008f
                    0090    158 _P1_0	=	0x0090
                    0091    159 _P1_1	=	0x0091
                    0092    160 _P1_2	=	0x0092
                    0093    161 _P1_3	=	0x0093
                    0094    162 _P1_4	=	0x0094
                    0095    163 _P1_5	=	0x0095
                    0096    164 _P1_6	=	0x0096
                    0097    165 _P1_7	=	0x0097
                    0098    166 _RI	=	0x0098
                    0099    167 _TI	=	0x0099
                    009A    168 _RB8	=	0x009a
                    009B    169 _TB8	=	0x009b
                    009C    170 _REN	=	0x009c
                    009D    171 _SM2	=	0x009d
                    009E    172 _SM1	=	0x009e
                    009F    173 _SM0	=	0x009f
                    00A0    174 _P2_0	=	0x00a0
                    00A1    175 _P2_1	=	0x00a1
                    00A2    176 _P2_2	=	0x00a2
                    00A3    177 _P2_3	=	0x00a3
                    00A4    178 _P2_4	=	0x00a4
                    00A5    179 _P2_5	=	0x00a5
                    00A6    180 _P2_6	=	0x00a6
                    00A7    181 _P2_7	=	0x00a7
                    00A8    182 _EX0	=	0x00a8
                    00A9    183 _ET0	=	0x00a9
                    00AA    184 _EX1	=	0x00aa
                    00AB    185 _ET1	=	0x00ab
                    00AC    186 _ES	=	0x00ac
                    00AF    187 _EA	=	0x00af
                    00B0    188 _P3_0	=	0x00b0
                    00B1    189 _P3_1	=	0x00b1
                    00B2    190 _P3_2	=	0x00b2
                    00B3    191 _P3_3	=	0x00b3
                    00B4    192 _P3_4	=	0x00b4
                    00B5    193 _P3_5	=	0x00b5
                    00B6    194 _P3_6	=	0x00b6
                    00B7    195 _P3_7	=	0x00b7
                    00B0    196 _RXD	=	0x00b0
                    00B1    197 _TXD	=	0x00b1
                    00B2    198 _INT0	=	0x00b2
                    00B3    199 _INT1	=	0x00b3
                    00B4    200 _T0	=	0x00b4
                    00B5    201 _T1	=	0x00b5
                    00B6    202 _WR	=	0x00b6
                    00B7    203 _RD	=	0x00b7
                    00B8    204 _PX0	=	0x00b8
                    00B9    205 _PT0	=	0x00b9
                    00BA    206 _PX1	=	0x00ba
                    00BB    207 _PT1	=	0x00bb
                    00BC    208 _PS	=	0x00bc
                    00D0    209 _P	=	0x00d0
                    00D1    210 _F1	=	0x00d1
                    00D2    211 _OV	=	0x00d2
                    00D3    212 _RS0	=	0x00d3
                    00D4    213 _RS1	=	0x00d4
                    00D5    214 _F0	=	0x00d5
                    00D6    215 _AC	=	0x00d6
                    00D7    216 _CY	=	0x00d7
                            217 ;--------------------------------------------------------
                            218 ; overlayable register banks
                            219 ;--------------------------------------------------------
                            220 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     221 	.ds 8
                            222 ;--------------------------------------------------------
                            223 ; internal ram data
                            224 ;--------------------------------------------------------
                            225 	.area DSEG    (DATA)
                            226 ;--------------------------------------------------------
                            227 ; overlayable items in internal ram 
                            228 ;--------------------------------------------------------
                            229 	.area OSEG    (OVR,DATA)
                            230 ;--------------------------------------------------------
                            231 ; indirectly addressable internal ram data
                            232 ;--------------------------------------------------------
                            233 	.area ISEG    (DATA)
                            234 ;--------------------------------------------------------
                            235 ; absolute internal ram data
                            236 ;--------------------------------------------------------
                            237 	.area IABS    (ABS,DATA)
                            238 	.area IABS    (ABS,DATA)
                            239 ;--------------------------------------------------------
                            240 ; bit data
                            241 ;--------------------------------------------------------
                            242 	.area BSEG    (BIT)
                            243 ;--------------------------------------------------------
                            244 ; paged external ram data
                            245 ;--------------------------------------------------------
                            246 	.area PSEG    (PAG,XDATA)
                            247 ;--------------------------------------------------------
                            248 ; external ram data
                            249 ;--------------------------------------------------------
                            250 	.area XSEG    (XDATA)
   0000                     251 _setjmp_buf_1_1:
   0000                     252 	.ds 3
   0003                     253 _longjmp_PARM_2:
   0003                     254 	.ds 2
   0005                     255 _longjmp_buf_1_1:
   0005                     256 	.ds 3
                            257 ;--------------------------------------------------------
                            258 ; absolute external ram data
                            259 ;--------------------------------------------------------
                            260 	.area XABS    (ABS,XDATA)
                            261 ;--------------------------------------------------------
                            262 ; external initialized ram data
                            263 ;--------------------------------------------------------
                            264 	.area XISEG   (XDATA)
                            265 	.area HOME    (CODE)
                            266 	.area GSINIT0 (CODE)
                            267 	.area GSINIT1 (CODE)
                            268 	.area GSINIT2 (CODE)
                            269 	.area GSINIT3 (CODE)
                            270 	.area GSINIT4 (CODE)
                            271 	.area GSINIT5 (CODE)
                            272 	.area GSINIT  (CODE)
                            273 	.area GSFINAL (CODE)
                            274 	.area CSEG    (CODE)
                            275 ;--------------------------------------------------------
                            276 ; global & static initialisations
                            277 ;--------------------------------------------------------
                            278 	.area HOME    (CODE)
                            279 	.area GSINIT  (CODE)
                            280 	.area GSFINAL (CODE)
                            281 	.area GSINIT  (CODE)
                            282 ;--------------------------------------------------------
                            283 ; Home
                            284 ;--------------------------------------------------------
                            285 	.area HOME    (CODE)
                            286 	.area HOME    (CODE)
                            287 ;--------------------------------------------------------
                            288 ; code
                            289 ;--------------------------------------------------------
                            290 	.area CSEG    (CODE)
                            291 ;------------------------------------------------------------
                            292 ;Allocation info for local variables in function 'setjmp'
                            293 ;------------------------------------------------------------
                            294 ;buf                       Allocated with name '_setjmp_buf_1_1'
                            295 ;------------------------------------------------------------
                            296 ;	_setjmp.c:325: int setjmp (jmp_buf buf)
                            297 ;	-----------------------------------------
                            298 ;	 function setjmp
                            299 ;	-----------------------------------------
   0000                     300 _setjmp:
                    0002    301 	ar2 = 0x02
                    0003    302 	ar3 = 0x03
                    0004    303 	ar4 = 0x04
                    0005    304 	ar5 = 0x05
                    0006    305 	ar6 = 0x06
                    0007    306 	ar7 = 0x07
                    0000    307 	ar0 = 0x00
                    0001    308 	ar1 = 0x01
   0000 AA F0               309 	mov	r2,b
   0002 AB 83               310 	mov	r3,dph
   0004 E5 82               311 	mov	a,dpl
   0006 90s00r00            312 	mov	dptr,#_setjmp_buf_1_1
   0009 F0                  313 	movx	@dptr,a
   000A A3                  314 	inc	dptr
   000B EB                  315 	mov	a,r3
   000C F0                  316 	movx	@dptr,a
   000D A3                  317 	inc	dptr
   000E EA                  318 	mov	a,r2
   000F F0                  319 	movx	@dptr,a
                            320 ;	_setjmp.c:331: *buf++ = SP;
   0010 90s00r00            321 	mov	dptr,#_setjmp_buf_1_1
   0013 E0                  322 	movx	a,@dptr
   0014 FA                  323 	mov	r2,a
   0015 A3                  324 	inc	dptr
   0016 E0                  325 	movx	a,@dptr
   0017 FB                  326 	mov	r3,a
   0018 A3                  327 	inc	dptr
   0019 E0                  328 	movx	a,@dptr
   001A FC                  329 	mov	r4,a
   001B 8A 82               330 	mov	dpl,r2
   001D 8B 83               331 	mov	dph,r3
   001F 8C F0               332 	mov	b,r4
   0021 E5 81               333 	mov	a,_SP
   0023 12s00r00            334 	lcall	__gptrput
   0026 90s00r00            335 	mov	dptr,#_setjmp_buf_1_1
   0029 74 01               336 	mov	a,#0x01
   002B 2A                  337 	add	a,r2
   002C F0                  338 	movx	@dptr,a
   002D E4                  339 	clr	a
   002E 3B                  340 	addc	a,r3
   002F A3                  341 	inc	dptr
   0030 F0                  342 	movx	@dptr,a
   0031 A3                  343 	inc	dptr
   0032 EC                  344 	mov	a,r4
   0033 F0                  345 	movx	@dptr,a
                            346 ;	_setjmp.c:332: *buf++ = *((unsigned char __data *) SP  );
   0034 90s00r00            347 	mov	dptr,#_setjmp_buf_1_1
   0037 E0                  348 	movx	a,@dptr
   0038 FA                  349 	mov	r2,a
   0039 A3                  350 	inc	dptr
   003A E0                  351 	movx	a,@dptr
   003B FB                  352 	mov	r3,a
   003C A3                  353 	inc	dptr
   003D E0                  354 	movx	a,@dptr
   003E FC                  355 	mov	r4,a
   003F A8 81               356 	mov	r0,_SP
   0041 86 05               357 	mov	ar5,@r0
   0043 8A 82               358 	mov	dpl,r2
   0045 8B 83               359 	mov	dph,r3
   0047 8C F0               360 	mov	b,r4
   0049 ED                  361 	mov	a,r5
   004A 12s00r00            362 	lcall	__gptrput
   004D 90s00r00            363 	mov	dptr,#_setjmp_buf_1_1
   0050 74 01               364 	mov	a,#0x01
   0052 2A                  365 	add	a,r2
   0053 F0                  366 	movx	@dptr,a
   0054 E4                  367 	clr	a
   0055 3B                  368 	addc	a,r3
   0056 A3                  369 	inc	dptr
   0057 F0                  370 	movx	@dptr,a
   0058 A3                  371 	inc	dptr
   0059 EC                  372 	mov	a,r4
   005A F0                  373 	movx	@dptr,a
                            374 ;	_setjmp.c:333: *buf   = *((unsigned char __data *)SP - 1);
   005B 90s00r00            375 	mov	dptr,#_setjmp_buf_1_1
   005E E0                  376 	movx	a,@dptr
   005F FA                  377 	mov	r2,a
   0060 A3                  378 	inc	dptr
   0061 E0                  379 	movx	a,@dptr
   0062 FB                  380 	mov	r3,a
   0063 A3                  381 	inc	dptr
   0064 E0                  382 	movx	a,@dptr
   0065 FC                  383 	mov	r4,a
   0066 E5 81               384 	mov	a,_SP
   0068 14                  385 	dec	a
   0069 F8                  386 	mov	r0,a
   006A 86 05               387 	mov	ar5,@r0
   006C 8A 82               388 	mov	dpl,r2
   006E 8B 83               389 	mov	dph,r3
   0070 8C F0               390 	mov	b,r4
   0072 ED                  391 	mov	a,r5
   0073 12s00r00            392 	lcall	__gptrput
                            393 ;	_setjmp.c:334: return 0;
   0076 90 00 00            394 	mov	dptr,#0x0000
   0079 22                  395 	ret
                            396 ;------------------------------------------------------------
                            397 ;Allocation info for local variables in function 'longjmp'
                            398 ;------------------------------------------------------------
                            399 ;rv                        Allocated with name '_longjmp_PARM_2'
                            400 ;buf                       Allocated with name '_longjmp_buf_1_1'
                            401 ;lsp                       Allocated with name '_longjmp_lsp_1_1'
                            402 ;------------------------------------------------------------
                            403 ;	_setjmp.c:337: int longjmp (jmp_buf buf, int rv)
                            404 ;	-----------------------------------------
                            405 ;	 function longjmp
                            406 ;	-----------------------------------------
   007A                     407 _longjmp:
   007A AA F0               408 	mov	r2,b
   007C AB 83               409 	mov	r3,dph
   007E E5 82               410 	mov	a,dpl
   0080 90s00r05            411 	mov	dptr,#_longjmp_buf_1_1
   0083 F0                  412 	movx	@dptr,a
   0084 A3                  413 	inc	dptr
   0085 EB                  414 	mov	a,r3
   0086 F0                  415 	movx	@dptr,a
   0087 A3                  416 	inc	dptr
   0088 EA                  417 	mov	a,r2
   0089 F0                  418 	movx	@dptr,a
                            419 ;	_setjmp.c:341: lsp = *buf++;
   008A 90s00r05            420 	mov	dptr,#_longjmp_buf_1_1
   008D E0                  421 	movx	a,@dptr
   008E FA                  422 	mov	r2,a
   008F A3                  423 	inc	dptr
   0090 E0                  424 	movx	a,@dptr
   0091 FB                  425 	mov	r3,a
   0092 A3                  426 	inc	dptr
   0093 E0                  427 	movx	a,@dptr
   0094 FC                  428 	mov	r4,a
   0095 8A 82               429 	mov	dpl,r2
   0097 8B 83               430 	mov	dph,r3
   0099 8C F0               431 	mov	b,r4
   009B 12s00r00            432 	lcall	__gptrget
   009E FD                  433 	mov	r5,a
   009F 90s00r05            434 	mov	dptr,#_longjmp_buf_1_1
   00A2 74 01               435 	mov	a,#0x01
   00A4 2A                  436 	add	a,r2
   00A5 F0                  437 	movx	@dptr,a
   00A6 E4                  438 	clr	a
   00A7 3B                  439 	addc	a,r3
   00A8 A3                  440 	inc	dptr
   00A9 F0                  441 	movx	@dptr,a
   00AA A3                  442 	inc	dptr
   00AB EC                  443 	mov	a,r4
   00AC F0                  444 	movx	@dptr,a
                            445 ;	_setjmp.c:342: *((unsigned char __data *) lsp) = *buf++;
   00AD 8D 00               446 	mov	ar0,r5
   00AF 90s00r05            447 	mov	dptr,#_longjmp_buf_1_1
   00B2 E0                  448 	movx	a,@dptr
   00B3 FA                  449 	mov	r2,a
   00B4 A3                  450 	inc	dptr
   00B5 E0                  451 	movx	a,@dptr
   00B6 FB                  452 	mov	r3,a
   00B7 A3                  453 	inc	dptr
   00B8 E0                  454 	movx	a,@dptr
   00B9 FC                  455 	mov	r4,a
   00BA 8A 82               456 	mov	dpl,r2
   00BC 8B 83               457 	mov	dph,r3
   00BE 8C F0               458 	mov	b,r4
   00C0 12s00r00            459 	lcall	__gptrget
   00C3 FE                  460 	mov	r6,a
   00C4 90s00r05            461 	mov	dptr,#_longjmp_buf_1_1
   00C7 74 01               462 	mov	a,#0x01
   00C9 2A                  463 	add	a,r2
   00CA F0                  464 	movx	@dptr,a
   00CB E4                  465 	clr	a
   00CC 3B                  466 	addc	a,r3
   00CD A3                  467 	inc	dptr
   00CE F0                  468 	movx	@dptr,a
   00CF A3                  469 	inc	dptr
   00D0 EC                  470 	mov	a,r4
   00D1 F0                  471 	movx	@dptr,a
   00D2 A6 06               472 	mov	@r0,ar6
                            473 ;	_setjmp.c:343: *((unsigned char __data *) lsp - 1) = *buf;
   00D4 18                  474 	dec	r0
   00D5 90s00r05            475 	mov	dptr,#_longjmp_buf_1_1
   00D8 E0                  476 	movx	a,@dptr
   00D9 FA                  477 	mov	r2,a
   00DA A3                  478 	inc	dptr
   00DB E0                  479 	movx	a,@dptr
   00DC FB                  480 	mov	r3,a
   00DD A3                  481 	inc	dptr
   00DE E0                  482 	movx	a,@dptr
   00DF FC                  483 	mov	r4,a
   00E0 8A 82               484 	mov	dpl,r2
   00E2 8B 83               485 	mov	dph,r3
   00E4 8C F0               486 	mov	b,r4
   00E6 12s00r00            487 	lcall	__gptrget
   00E9 F6                  488 	mov	@r0,a
                            489 ;	_setjmp.c:344: SP = lsp;
   00EA 8D 81               490 	mov	_SP,r5
                            491 ;	_setjmp.c:345: return rv;
   00EC 90s00r03            492 	mov	dptr,#_longjmp_PARM_2
   00EF E0                  493 	movx	a,@dptr
   00F0 FA                  494 	mov	r2,a
   00F1 A3                  495 	inc	dptr
   00F2 E0                  496 	movx	a,@dptr
   00F3 8A 82               497 	mov	dpl,r2
   00F5 F5 83               498 	mov	dph,a
   00F7 22                  499 	ret
                            500 	.area CSEG    (CODE)
                            501 	.area CONST   (CODE)
                            502 	.area XINIT   (CODE)
                            503 	.area CABS    (ABS,CODE)

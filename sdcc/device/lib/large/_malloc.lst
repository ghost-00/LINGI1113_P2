                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:25:55 2013
                              5 ;--------------------------------------------------------
                              6 	.module _malloc
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl __sdcc_first_memheader
                             13 	.globl _malloc
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 	.area RSEG    (ABS,DATA)
   0000                      18 	.org 0x0000
                             19 ;--------------------------------------------------------
                             20 ; special function bits
                             21 ;--------------------------------------------------------
                             22 	.area RSEG    (ABS,DATA)
   0000                      23 	.org 0x0000
                             24 ;--------------------------------------------------------
                             25 ; overlayable register banks
                             26 ;--------------------------------------------------------
                             27 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      28 	.ds 8
                             29 ;--------------------------------------------------------
                             30 ; internal ram data
                             31 ;--------------------------------------------------------
                             32 	.area DSEG    (DATA)
   0000                      33 _malloc_sloc0_1_0:
   0000                      34 	.ds 2
                             35 ;--------------------------------------------------------
                             36 ; overlayable items in internal ram 
                             37 ;--------------------------------------------------------
                             38 	.area OSEG    (OVR,DATA)
                             39 ;--------------------------------------------------------
                             40 ; indirectly addressable internal ram data
                             41 ;--------------------------------------------------------
                             42 	.area ISEG    (DATA)
                             43 ;--------------------------------------------------------
                             44 ; absolute internal ram data
                             45 ;--------------------------------------------------------
                             46 	.area IABS    (ABS,DATA)
                             47 	.area IABS    (ABS,DATA)
                             48 ;--------------------------------------------------------
                             49 ; bit data
                             50 ;--------------------------------------------------------
                             51 	.area BSEG    (BIT)
                             52 ;--------------------------------------------------------
                             53 ; paged external ram data
                             54 ;--------------------------------------------------------
                             55 	.area PSEG    (PAG,XDATA)
                             56 ;--------------------------------------------------------
                             57 ; external ram data
                             58 ;--------------------------------------------------------
                             59 	.area XSEG    (XDATA)
   0000                      60 _init_dynamic_memory_heap_1_1:
   0000                      61 	.ds 2
   0002                      62 _init_dynamic_memory_size_1_1:
   0002                      63 	.ds 2
   0004                      64 _malloc_size_1_1:
   0004                      65 	.ds 2
   0006                      66 _malloc_current_header_1_1:
   0006                      67 	.ds 2
   0008                      68 _malloc_ret_1_1:
   0008                      69 	.ds 2
                             70 ;--------------------------------------------------------
                             71 ; absolute external ram data
                             72 ;--------------------------------------------------------
                             73 	.area XABS    (ABS,XDATA)
                             74 ;--------------------------------------------------------
                             75 ; external initialized ram data
                             76 ;--------------------------------------------------------
                             77 	.area XISEG   (XDATA)
   0000                      78 __sdcc_first_memheader::
   0000                      79 	.ds 2
                             80 	.area HOME    (CODE)
                             81 	.area GSINIT0 (CODE)
                             82 	.area GSINIT1 (CODE)
                             83 	.area GSINIT2 (CODE)
                             84 	.area GSINIT3 (CODE)
                             85 	.area GSINIT4 (CODE)
                             86 	.area GSINIT5 (CODE)
                             87 	.area GSINIT  (CODE)
                             88 	.area GSFINAL (CODE)
                             89 	.area CSEG    (CODE)
                             90 ;--------------------------------------------------------
                             91 ; global & static initialisations
                             92 ;--------------------------------------------------------
                             93 	.area HOME    (CODE)
                             94 	.area GSINIT  (CODE)
                             95 	.area GSFINAL (CODE)
                             96 	.area GSINIT  (CODE)
                             97 ;--------------------------------------------------------
                             98 ; Home
                             99 ;--------------------------------------------------------
                            100 	.area HOME    (CODE)
                            101 	.area HOME    (CODE)
                            102 ;--------------------------------------------------------
                            103 ; code
                            104 ;--------------------------------------------------------
                            105 	.area CSEG    (CODE)
                            106 ;------------------------------------------------------------
                            107 ;Allocation info for local variables in function 'init_dynamic_memory'
                            108 ;------------------------------------------------------------
                            109 ;heap                      Allocated with name '_init_dynamic_memory_heap_1_1'
                            110 ;size                      Allocated with name '_init_dynamic_memory_size_1_1'
                            111 ;------------------------------------------------------------
                            112 ;	_malloc.c:158: static void init_dynamic_memory(void)
                            113 ;	-----------------------------------------
                            114 ;	 function init_dynamic_memory
                            115 ;	-----------------------------------------
   0000                     116 _init_dynamic_memory:
                    0002    117 	ar2 = 0x02
                    0003    118 	ar3 = 0x03
                    0004    119 	ar4 = 0x04
                    0005    120 	ar5 = 0x05
                    0006    121 	ar6 = 0x06
                    0007    122 	ar7 = 0x07
                    0000    123 	ar0 = 0x00
                    0001    124 	ar1 = 0x01
                            125 ;	_malloc.c:160: char __xdata * heap = (char __xdata *)_sdcc_heap;
   0000 90s00r00            126 	mov	dptr,#_init_dynamic_memory_heap_1_1
   0003 74r00               127 	mov	a,#__sdcc_heap
   0005 F0                  128 	movx	@dptr,a
   0006 A3                  129 	inc	dptr
   0007 74s00               130 	mov	a,#(__sdcc_heap >> 8)
   0009 F0                  131 	movx	@dptr,a
                            132 ;	_malloc.c:161: unsigned int size = _sdcc_heap_size;
   000A 90s00r00            133 	mov	dptr,#__sdcc_heap_size
   000D E4                  134 	clr	a
   000E 93                  135 	movc	a,@a+dptr
   000F FA                  136 	mov	r2,a
   0010 74 01               137 	mov	a,#0x01
   0012 93                  138 	movc	a,@a+dptr
   0013 FB                  139 	mov	r3,a
   0014 90s00r02            140 	mov	dptr,#_init_dynamic_memory_size_1_1
   0017 EA                  141 	mov	a,r2
   0018 F0                  142 	movx	@dptr,a
   0019 A3                  143 	inc	dptr
   001A EB                  144 	mov	a,r3
   001B F0                  145 	movx	@dptr,a
                            146 ;	_malloc.c:163: if ( !heap ) //Reserved memory starts at 0x0000 but that's NULL...
   001C 74r00               147 	mov	a,#__sdcc_heap
   001E 44s00               148 	orl	a,#(__sdcc_heap >> 8)
   0020 70 1A               149 	jnz	00102$
                            150 ;	_malloc.c:165: heap++;
   0022 90s00r00            151 	mov	dptr,#_init_dynamic_memory_heap_1_1
   0025 74 01               152 	mov	a,#0x01
   0027 24r00               153 	add	a,#__sdcc_heap
   0029 F0                  154 	movx	@dptr,a
   002A E4                  155 	clr	a
   002B 34s00               156 	addc	a,#(__sdcc_heap >> 8)
   002D A3                  157 	inc	dptr
   002E F0                  158 	movx	@dptr,a
                            159 ;	_malloc.c:166: size--;
   002F 1A                  160 	dec	r2
   0030 BA FF 01            161 	cjne	r2,#0xff,00107$
   0033 1B                  162 	dec	r3
   0034                     163 00107$:
   0034 90s00r02            164 	mov	dptr,#_init_dynamic_memory_size_1_1
   0037 EA                  165 	mov	a,r2
   0038 F0                  166 	movx	@dptr,a
   0039 A3                  167 	inc	dptr
   003A EB                  168 	mov	a,r3
   003B F0                  169 	movx	@dptr,a
   003C                     170 00102$:
                            171 ;	_malloc.c:168: _sdcc_first_memheader = (MEMHEADER __xdata * ) heap;
   003C 90s00r00            172 	mov	dptr,#_init_dynamic_memory_heap_1_1
   003F E0                  173 	movx	a,@dptr
   0040 FA                  174 	mov	r2,a
   0041 A3                  175 	inc	dptr
   0042 E0                  176 	movx	a,@dptr
   0043 FB                  177 	mov	r3,a
   0044 90s00r00            178 	mov	dptr,#__sdcc_first_memheader
   0047 EA                  179 	mov	a,r2
   0048 F0                  180 	movx	@dptr,a
   0049 A3                  181 	inc	dptr
   004A EB                  182 	mov	a,r3
   004B F0                  183 	movx	@dptr,a
                            184 ;	_malloc.c:170: _sdcc_first_memheader->next = (MEMHEADER __xdata * )(heap + size - sizeof(MEMHEADER __xdata *));
   004C 90s00r02            185 	mov	dptr,#_init_dynamic_memory_size_1_1
   004F E0                  186 	movx	a,@dptr
   0050 FC                  187 	mov	r4,a
   0051 A3                  188 	inc	dptr
   0052 E0                  189 	movx	a,@dptr
   0053 FD                  190 	mov	r5,a
   0054 EC                  191 	mov	a,r4
   0055 2A                  192 	add	a,r2
   0056 FC                  193 	mov	r4,a
   0057 ED                  194 	mov	a,r5
   0058 3B                  195 	addc	a,r3
   0059 FD                  196 	mov	r5,a
   005A EC                  197 	mov	a,r4
   005B 24 FE               198 	add	a,#0xfe
   005D FC                  199 	mov	r4,a
   005E ED                  200 	mov	a,r5
   005F 34 FF               201 	addc	a,#0xff
   0061 FD                  202 	mov	r5,a
   0062 8A 82               203 	mov	dpl,r2
   0064 8B 83               204 	mov	dph,r3
   0066 EC                  205 	mov	a,r4
   0067 F0                  206 	movx	@dptr,a
   0068 A3                  207 	inc	dptr
   0069 ED                  208 	mov	a,r5
   006A F0                  209 	movx	@dptr,a
                            210 ;	_malloc.c:171: _sdcc_first_memheader->next->next = (MEMHEADER __xdata * ) NULL; //And mark it as last
   006B 8C 82               211 	mov	dpl,r4
   006D 8D 83               212 	mov	dph,r5
   006F E4                  213 	clr	a
   0070 F0                  214 	movx	@dptr,a
   0071 A3                  215 	inc	dptr
   0072 F0                  216 	movx	@dptr,a
                            217 ;	_malloc.c:172: _sdcc_first_memheader->len        = 0;    //Empty and ready.
   0073 8A 82               218 	mov	dpl,r2
   0075 8B 83               219 	mov	dph,r3
   0077 A3                  220 	inc	dptr
   0078 A3                  221 	inc	dptr
   0079 E4                  222 	clr	a
   007A F0                  223 	movx	@dptr,a
   007B A3                  224 	inc	dptr
   007C F0                  225 	movx	@dptr,a
   007D 22                  226 	ret
                            227 ;------------------------------------------------------------
                            228 ;Allocation info for local variables in function 'malloc'
                            229 ;------------------------------------------------------------
                            230 ;sloc0                     Allocated with name '_malloc_sloc0_1_0'
                            231 ;size                      Allocated with name '_malloc_size_1_1'
                            232 ;current_header            Allocated with name '_malloc_current_header_1_1'
                            233 ;new_header                Allocated with name '_malloc_new_header_1_1'
                            234 ;ret                       Allocated with name '_malloc_ret_1_1'
                            235 ;------------------------------------------------------------
                            236 ;	_malloc.c:175: void __xdata * malloc (unsigned int size)
                            237 ;	-----------------------------------------
                            238 ;	 function malloc
                            239 ;	-----------------------------------------
   007E                     240 _malloc:
   007E AA 83               241 	mov	r2,dph
   0080 E5 82               242 	mov	a,dpl
   0082 90s00r04            243 	mov	dptr,#_malloc_size_1_1
   0085 F0                  244 	movx	@dptr,a
   0086 A3                  245 	inc	dptr
   0087 EA                  246 	mov	a,r2
   0088 F0                  247 	movx	@dptr,a
                            248 ;	_malloc.c:181: if (size>(0xFFFF-HEADER_SIZE))
   0089 90s00r04            249 	mov	dptr,#_malloc_size_1_1
   008C E0                  250 	movx	a,@dptr
   008D FA                  251 	mov	r2,a
   008E A3                  252 	inc	dptr
   008F E0                  253 	movx	a,@dptr
   0090 FB                  254 	mov	r3,a
   0091 C3                  255 	clr	c
   0092 74 FB               256 	mov	a,#0xFB
   0094 9A                  257 	subb	a,r2
   0095 74 FF               258 	mov	a,#0xFF
   0097 9B                  259 	subb	a,r3
   0098 50 04               260 	jnc	00102$
                            261 ;	_malloc.c:182: return (void __xdata *) NULL; //To prevent overflow in next line
   009A 90 00 00            262 	mov	dptr,#0x0000
   009D 22                  263 	ret
   009E                     264 00102$:
                            265 ;	_malloc.c:183: size += HEADER_SIZE; //We need a memory for header too
   009E 90s00r04            266 	mov	dptr,#_malloc_size_1_1
   00A1 74 04               267 	mov	a,#0x04
   00A3 2A                  268 	add	a,r2
   00A4 F0                  269 	movx	@dptr,a
   00A5 E4                  270 	clr	a
   00A6 3B                  271 	addc	a,r3
   00A7 A3                  272 	inc	dptr
   00A8 F0                  273 	movx	@dptr,a
                            274 ;	_malloc.c:185: if (!_sdcc_first_memheader)
   00A9 90s00r00            275 	mov	dptr,#__sdcc_first_memheader
   00AC E0                  276 	movx	a,@dptr
   00AD FA                  277 	mov	r2,a
   00AE A3                  278 	inc	dptr
   00AF E0                  279 	movx	a,@dptr
   00B0 FB                  280 	mov	r3,a
   00B1 4A                  281 	orl	a,r2
   00B2 70 03               282 	jnz	00104$
                            283 ;	_malloc.c:186: init_dynamic_memory();
   00B4 12s00r00            284 	lcall	_init_dynamic_memory
   00B7                     285 00104$:
                            286 ;	_malloc.c:188: current_header = _sdcc_first_memheader;
   00B7 90s00r00            287 	mov	dptr,#__sdcc_first_memheader
   00BA E0                  288 	movx	a,@dptr
   00BB FA                  289 	mov	r2,a
   00BC A3                  290 	inc	dptr
   00BD E0                  291 	movx	a,@dptr
   00BE FB                  292 	mov	r3,a
   00BF 90s00r06            293 	mov	dptr,#_malloc_current_header_1_1
   00C2 EA                  294 	mov	a,r2
   00C3 F0                  295 	movx	@dptr,a
   00C4 A3                  296 	inc	dptr
   00C5 EB                  297 	mov	a,r3
   00C6 F0                  298 	movx	@dptr,a
                            299 ;	_malloc.c:191: while (1)
   00C7 90s00r04            300 	mov	dptr,#_malloc_size_1_1
   00CA E0                  301 	movx	a,@dptr
   00CB FA                  302 	mov	r2,a
   00CC A3                  303 	inc	dptr
   00CD E0                  304 	movx	a,@dptr
   00CE FB                  305 	mov	r3,a
   00CF                     306 00110$:
                            307 ;	_malloc.c:201: if ((((unsigned int)current_header->next) -
   00CF 90s00r06            308 	mov	dptr,#_malloc_current_header_1_1
   00D2 E0                  309 	movx	a,@dptr
   00D3 FC                  310 	mov	r4,a
   00D4 A3                  311 	inc	dptr
   00D5 E0                  312 	movx	a,@dptr
   00D6 FD                  313 	mov	r5,a
   00D7 8C 82               314 	mov	dpl,r4
   00D9 8D 83               315 	mov	dph,r5
   00DB E0                  316 	movx	a,@dptr
   00DC FE                  317 	mov	r6,a
   00DD A3                  318 	inc	dptr
   00DE E0                  319 	movx	a,@dptr
   00DF FF                  320 	mov	r7,a
   00E0 8E*00               321 	mov	_malloc_sloc0_1_0,r6
   00E2 8F*01               322 	mov	(_malloc_sloc0_1_0 + 1),r7
                            323 ;	_malloc.c:202: ((unsigned int)current_header) -
   00E4 8C 00               324 	mov	ar0,r4
   00E6 8D 01               325 	mov	ar1,r5
   00E8 E5*00               326 	mov	a,_malloc_sloc0_1_0
   00EA C3                  327 	clr	c
   00EB 98                  328 	subb	a,r0
   00EC F5*00               329 	mov	_malloc_sloc0_1_0,a
   00EE E5*01               330 	mov	a,(_malloc_sloc0_1_0 + 1)
   00F0 99                  331 	subb	a,r1
   00F1 F5*01               332 	mov	(_malloc_sloc0_1_0 + 1),a
                            333 ;	_malloc.c:203: current_header->len) >= size)
   00F3 8C 82               334 	mov	dpl,r4
   00F5 8D 83               335 	mov	dph,r5
   00F7 A3                  336 	inc	dptr
   00F8 A3                  337 	inc	dptr
   00F9 E0                  338 	movx	a,@dptr
   00FA F8                  339 	mov	r0,a
   00FB A3                  340 	inc	dptr
   00FC E0                  341 	movx	a,@dptr
   00FD F9                  342 	mov	r1,a
   00FE E5*00               343 	mov	a,_malloc_sloc0_1_0
   0100 C3                  344 	clr	c
   0101 98                  345 	subb	a,r0
   0102 F8                  346 	mov	r0,a
   0103 E5*01               347 	mov	a,(_malloc_sloc0_1_0 + 1)
   0105 99                  348 	subb	a,r1
   0106 F9                  349 	mov	r1,a
   0107 C3                  350 	clr	c
   0108 E8                  351 	mov	a,r0
   0109 9A                  352 	subb	a,r2
   010A E9                  353 	mov	a,r1
   010B 9B                  354 	subb	a,r3
   010C 40 0D               355 	jc	00106$
                            356 ;	_malloc.c:205: ret = current_header->mem;
   010E 90s00r08            357 	mov	dptr,#_malloc_ret_1_1
   0111 74 04               358 	mov	a,#0x04
   0113 2C                  359 	add	a,r4
   0114 F0                  360 	movx	@dptr,a
   0115 E4                  361 	clr	a
   0116 3D                  362 	addc	a,r5
   0117 A3                  363 	inc	dptr
   0118 F0                  364 	movx	@dptr,a
                            365 ;	_malloc.c:206: break;
   0119 80 23               366 	sjmp	00111$
   011B                     367 00106$:
                            368 ;	_malloc.c:208: current_header = current_header->next;    //else try next
   011B 90s00r06            369 	mov	dptr,#_malloc_current_header_1_1
   011E EE                  370 	mov	a,r6
   011F F0                  371 	movx	@dptr,a
   0120 A3                  372 	inc	dptr
   0121 EF                  373 	mov	a,r7
   0122 F0                  374 	movx	@dptr,a
                            375 ;	_malloc.c:209: if (!current_header->next)
   0123 90s00r06            376 	mov	dptr,#_malloc_current_header_1_1
   0126 E0                  377 	movx	a,@dptr
   0127 FC                  378 	mov	r4,a
   0128 A3                  379 	inc	dptr
   0129 E0                  380 	movx	a,@dptr
   012A FD                  381 	mov	r5,a
   012B 8C 82               382 	mov	dpl,r4
   012D 8D 83               383 	mov	dph,r5
   012F E0                  384 	movx	a,@dptr
   0130 FC                  385 	mov	r4,a
   0131 A3                  386 	inc	dptr
   0132 E0                  387 	movx	a,@dptr
   0133 FD                  388 	mov	r5,a
   0134 4C                  389 	orl	a,r4
   0135 70 98               390 	jnz	00110$
                            391 ;	_malloc.c:211: ret = (void __xdata *) NULL;
   0137 90s00r08            392 	mov	dptr,#_malloc_ret_1_1
   013A E4                  393 	clr	a
   013B F0                  394 	movx	@dptr,a
   013C A3                  395 	inc	dptr
   013D F0                  396 	movx	@dptr,a
                            397 ;	_malloc.c:212: break;
   013E                     398 00111$:
                            399 ;	_malloc.c:215: if (ret)
   013E 90s00r08            400 	mov	dptr,#_malloc_ret_1_1
   0141 E0                  401 	movx	a,@dptr
   0142 FC                  402 	mov	r4,a
   0143 A3                  403 	inc	dptr
   0144 E0                  404 	movx	a,@dptr
   0145 FD                  405 	mov	r5,a
   0146 4C                  406 	orl	a,r4
   0147 60 5D               407 	jz	00116$
                            408 ;	_malloc.c:217: if (!current_header->len)
   0149 90s00r06            409 	mov	dptr,#_malloc_current_header_1_1
   014C E0                  410 	movx	a,@dptr
   014D FC                  411 	mov	r4,a
   014E A3                  412 	inc	dptr
   014F E0                  413 	movx	a,@dptr
   0150 FD                  414 	mov	r5,a
   0151 74 02               415 	mov	a,#0x02
   0153 2C                  416 	add	a,r4
   0154 FE                  417 	mov	r6,a
   0155 E4                  418 	clr	a
   0156 3D                  419 	addc	a,r5
   0157 FF                  420 	mov	r7,a
   0158 8E 82               421 	mov	dpl,r6
   015A 8F 83               422 	mov	dph,r7
   015C E0                  423 	movx	a,@dptr
   015D F8                  424 	mov	r0,a
   015E A3                  425 	inc	dptr
   015F E0                  426 	movx	a,@dptr
   0160 F9                  427 	mov	r1,a
   0161 48                  428 	orl	a,r0
   0162 70 0B               429 	jnz	00113$
                            430 ;	_malloc.c:219: current_header->len = size; //for first allocation
   0164 8E 82               431 	mov	dpl,r6
   0166 8F 83               432 	mov	dph,r7
   0168 EA                  433 	mov	a,r2
   0169 F0                  434 	movx	@dptr,a
   016A A3                  435 	inc	dptr
   016B EB                  436 	mov	a,r3
   016C F0                  437 	movx	@dptr,a
   016D 80 37               438 	sjmp	00116$
   016F                     439 00113$:
                            440 ;	_malloc.c:223: new_header = (MEMHEADER __xdata * )((char __xdata *)current_header + current_header->len);
   016F E8                  441 	mov	a,r0
   0170 2C                  442 	add	a,r4
   0171 F8                  443 	mov	r0,a
   0172 E9                  444 	mov	a,r1
   0173 3D                  445 	addc	a,r5
   0174 F9                  446 	mov	r1,a
                            447 ;	_malloc.c:224: new_header->next = current_header->next; //and plug it into the chain
   0175 8C 82               448 	mov	dpl,r4
   0177 8D 83               449 	mov	dph,r5
   0179 E0                  450 	movx	a,@dptr
   017A FE                  451 	mov	r6,a
   017B A3                  452 	inc	dptr
   017C E0                  453 	movx	a,@dptr
   017D FF                  454 	mov	r7,a
   017E 88 82               455 	mov	dpl,r0
   0180 89 83               456 	mov	dph,r1
   0182 EE                  457 	mov	a,r6
   0183 F0                  458 	movx	@dptr,a
   0184 A3                  459 	inc	dptr
   0185 EF                  460 	mov	a,r7
   0186 F0                  461 	movx	@dptr,a
                            462 ;	_malloc.c:225: current_header->next  = new_header;
   0187 8C 82               463 	mov	dpl,r4
   0189 8D 83               464 	mov	dph,r5
   018B E8                  465 	mov	a,r0
   018C F0                  466 	movx	@dptr,a
   018D A3                  467 	inc	dptr
   018E E9                  468 	mov	a,r1
   018F F0                  469 	movx	@dptr,a
                            470 ;	_malloc.c:226: new_header->len  = size; //mark as used
   0190 88 82               471 	mov	dpl,r0
   0192 89 83               472 	mov	dph,r1
   0194 A3                  473 	inc	dptr
   0195 A3                  474 	inc	dptr
   0196 EA                  475 	mov	a,r2
   0197 F0                  476 	movx	@dptr,a
   0198 A3                  477 	inc	dptr
   0199 EB                  478 	mov	a,r3
   019A F0                  479 	movx	@dptr,a
                            480 ;	_malloc.c:227: ret = new_header->mem;
   019B 90s00r08            481 	mov	dptr,#_malloc_ret_1_1
   019E 74 04               482 	mov	a,#0x04
   01A0 28                  483 	add	a,r0
   01A1 F0                  484 	movx	@dptr,a
   01A2 E4                  485 	clr	a
   01A3 39                  486 	addc	a,r1
   01A4 A3                  487 	inc	dptr
   01A5 F0                  488 	movx	@dptr,a
   01A6                     489 00116$:
                            490 ;	_malloc.c:231: return ret;
   01A6 90s00r08            491 	mov	dptr,#_malloc_ret_1_1
   01A9 E0                  492 	movx	a,@dptr
   01AA FA                  493 	mov	r2,a
   01AB A3                  494 	inc	dptr
   01AC E0                  495 	movx	a,@dptr
   01AD 8A 82               496 	mov	dpl,r2
   01AF F5 83               497 	mov	dph,a
   01B1 22                  498 	ret
                            499 	.area CSEG    (CODE)
                            500 	.area CONST   (CODE)
                            501 	.area XINIT   (CODE)
   0000                     502 __xinit___sdcc_first_memheader:
   0000 00 00               503 	.byte #0x00,#0x00
                            504 	.area CABS    (ABS,CODE)

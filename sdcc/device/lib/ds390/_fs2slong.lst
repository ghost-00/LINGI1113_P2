                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:25:28 2013
                              5 ;--------------------------------------------------------
                              6 	.module _fs2slong
                              7 	.optsdcc -mds390 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl ___fs2slong
                             31 ;--------------------------------------------------------
                             32 ; special function registers
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; special function bits
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; overlayable register banks
                             39 ;--------------------------------------------------------
                             40 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      41 	.ds 8
                             42 ;--------------------------------------------------------
                             43 ; internal ram data
                             44 ;--------------------------------------------------------
                             45 	.area DSEG    (DATA)
                             46 ;--------------------------------------------------------
                             47 ; overlayable items in internal ram 
                             48 ;--------------------------------------------------------
                             49 	.area OSEG    (OVR,DATA)
                             50 ;--------------------------------------------------------
                             51 ; indirectly addressable internal ram data
                             52 ;--------------------------------------------------------
                             53 	.area ISEG    (DATA)
                             54 ;--------------------------------------------------------
                             55 ; absolute internal ram data
                             56 ;--------------------------------------------------------
                             57 	.area IABS    (ABS,DATA)
                             58 	.area IABS    (ABS,DATA)
                             59 ;--------------------------------------------------------
                             60 ; bit data
                             61 ;--------------------------------------------------------
                             62 	.area BSEG    (BIT)
                             63 ;--------------------------------------------------------
                             64 ; paged external ram data
                             65 ;--------------------------------------------------------
                             66 	.area PSEG    (PAG,XDATA)
                             67 ;--------------------------------------------------------
                             68 ; external ram data
                             69 ;--------------------------------------------------------
                             70 	.area XSEG    (XDATA)
                             71 ;--------------------------------------------------------
                             72 ; absolute external ram data
                             73 ;--------------------------------------------------------
                             74 	.area XABS    (ABS,XDATA)
                             75 ;--------------------------------------------------------
                             76 ; external initialized ram data
                             77 ;--------------------------------------------------------
                             78 	.area XISEG   (XDATA)
                             79 ;--------------------------------------------------------
                             80 ; global & static initialisations
                             81 ;--------------------------------------------------------
                             82 	.area HOME    (CODE)
                             83 	.area GSINIT  (CODE)
                             84 	.area GSFINAL (CODE)
                             85 	.area GSINIT  (CODE)
                             86 ;--------------------------------------------------------
                             87 ; Home
                             88 ;--------------------------------------------------------
                             89 	.area HOME    (CODE)
                             90 	.area HOME    (CODE)
                             91 ;--------------------------------------------------------
                             92 ; code
                             93 ;--------------------------------------------------------
                             94 	.area CSEG    (CODE)
                             95 ;------------------------------------------------------------
                             96 ;Allocation info for local variables in function '__fs2slong'
                             97 ;------------------------------------------------------------
                             98 ;f                         Allocated to registers r2 r3 r4 r5 
                             99 ;------------------------------------------------------------
                            100 ;	_fs2slong.c:98: signed long __fs2slong (float f)
                            101 ;	-----------------------------------------
                            102 ;	 function __fs2slong
                            103 ;	-----------------------------------------
   0000                     104 ___fs2slong:
                    0002    105 	ar2 = 0x02
                    0003    106 	ar3 = 0x03
                    0004    107 	ar4 = 0x04
                    0005    108 	ar5 = 0x05
                    0006    109 	ar6 = 0x06
                    0007    110 	ar7 = 0x07
                    0000    111 	ar0 = 0x00
                    0001    112 	ar1 = 0x01
   0000 AA 82               113 	mov	r2,dpl
   0002 AB 83               114 	mov	r3,dph
   0004 AC 93               115 	mov	r4,dpx
   0006 AD F0               116 	mov	r5,b
                            117 ;	_fs2slong.c:101: if (!f)
   0008 EA                  118 	mov	a,r2
   0009 4B                  119 	orl	a,r3
   000A 4C                  120 	orl	a,r4
   000B 4D                  121 	orl	a,r5
   000C 70 09               122 	jnz  00102$
   000E                     123 00110$:
                            124 ;	_fs2slong.c:102: return 0;
   000E 90 00 00 00         125 	mov  dptr,#0x0000
   0012 75 F0 00            126 	mov	b,#0x00
   0015 80 6A               127 	sjmp 00106$
   0017                     128 00102$:
                            129 ;	_fs2slong.c:104: if (f<0) {
                            130 ;	genAssign: resultIsFar = TRUE
   0017 90s00r00r00         131 	mov	dptr,#___fslt_PARM_2
   001B E4                  132 	clr  a
   001C F0                  133 	movx @dptr,a
   001D A3                  134 	inc  dptr
   001E F0                  135 	movx @dptr,a
   001F A3                  136 	inc	dptr
   0020 E4                  137 	clr  a
   0021 F0                  138 	movx @dptr,a
   0022 A3                  139 	inc  dptr
   0023 F0                  140 	movx @dptr,a
   0024 C0 02               141 	push	ar2
   0026 C0 03               142 	push	ar3
   0028 C0 04               143 	push	ar4
   002A C0 05               144 	push	ar5
   002C 8A 82               145 	mov	dpl,r2
   002E 8B 83               146 	mov	dph,r3
   0030 8C 93               147 	mov	dpx,r4
   0032 8D F0               148 	mov	b,r5
   0034 12s00r00r00         149 	lcall	___fslt
   0038 D0 05               150 	pop	ar5
   003A D0 04               151 	pop	ar4
   003C D0 03               152 	pop	ar3
   003E D0 02               153 	pop	ar2
   0040 E5 82               154 	mov	a,dpl
   0042 60 31               155 	jz  00104$
   0044                     156 00111$:
                            157 ;	_fs2slong.c:105: return -__fs2ulong(-f);
   0044 8A 06               158 	mov	ar6,r2
   0046 8B 07               159 	mov	ar7,r3
   0048 8C 00               160 	mov	ar0,r4
   004A ED                  161 	mov	a,r5
   004B B2 E7               162 	cpl	acc.7
   004D F9                  163 	mov	r1,a
   004E 8E 82               164 	mov	dpl,r6
   0050 8F 83               165 	mov	dph,r7
   0052 88 93               166 	mov	dpx,r0
   0054 89 F0               167 	mov	b,r1
   0056 12s00r00r00         168 	lcall	___fs2ulong
   005A C3                  169 	clr	c
   005B E4                  170 	clr	a
   005C 95 82               171 	subb	a,dpl
   005E FE                  172 	mov	r6,a
   005F E4                  173 	clr	a
   0060 95 83               174 	subb	a,dph
   0062 FF                  175 	mov	r7,a
   0063 E4                  176 	clr	a
   0064 95 93               177 	subb	a,dpx
   0066 F8                  178 	mov	r0,a
   0067 E4                  179 	clr	a
   0068 95 F0               180 	subb	a,b
   006A F9                  181 	mov	r1,a
   006B 8E 82               182 	mov	dpl,r6
   006D 8F 83               183 	mov	dph,r7
   006F 88 93               184 	mov	dpx,r0
   0071 89 F0               185 	mov	b,r1
   0073 80 0C               186 	sjmp 00106$
   0075                     187 00104$:
                            188 ;	_fs2slong.c:107: return __fs2ulong(f);
   0075 8A 82               189 	mov	dpl,r2
   0077 8B 83               190 	mov	dph,r3
   0079 8C 93               191 	mov	dpx,r4
   007B 8D F0               192 	mov	b,r5
   007D 12s00r00r00         193 	lcall	___fs2ulong
   0081                     194 00106$:
   0081 22                  195 	ret
                            196 	.area CSEG    (CODE)
                            197 	.area CONST   (CODE)
                            198 	.area XINIT   (CODE)
                            199 	.area CABS    (ABS,CODE)

                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:25:28 2013
                              5 ;--------------------------------------------------------
                              6 	.module logf
                              7 	.optsdcc -mds390 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _logf
                             31 ;--------------------------------------------------------
                             32 ; special function registers
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; special function bits
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; overlayable register banks
                             39 ;--------------------------------------------------------
                             40 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      41 	.ds 8
                             42 ;--------------------------------------------------------
                             43 ; internal ram data
                             44 ;--------------------------------------------------------
                             45 	.area DSEG    (DATA)
                             46 ;--------------------------------------------------------
                             47 ; overlayable items in internal ram 
                             48 ;--------------------------------------------------------
                             49 	.area OSEG    (OVR,DATA)
                             50 ;--------------------------------------------------------
                             51 ; indirectly addressable internal ram data
                             52 ;--------------------------------------------------------
                             53 	.area ISEG    (DATA)
                             54 ;--------------------------------------------------------
                             55 ; absolute internal ram data
                             56 ;--------------------------------------------------------
                             57 	.area IABS    (ABS,DATA)
                             58 	.area IABS    (ABS,DATA)
                             59 ;--------------------------------------------------------
                             60 ; bit data
                             61 ;--------------------------------------------------------
                             62 	.area BSEG    (BIT)
                             63 ;--------------------------------------------------------
                             64 ; paged external ram data
                             65 ;--------------------------------------------------------
                             66 	.area PSEG    (PAG,XDATA)
                             67 ;--------------------------------------------------------
                             68 ; external ram data
                             69 ;--------------------------------------------------------
                             70 	.area XSEG    (XDATA)
                             71 ;--------------------------------------------------------
                             72 ; absolute external ram data
                             73 ;--------------------------------------------------------
                             74 	.area XABS    (ABS,XDATA)
                             75 ;--------------------------------------------------------
                             76 ; external initialized ram data
                             77 ;--------------------------------------------------------
                             78 	.area XISEG   (XDATA)
                             79 ;--------------------------------------------------------
                             80 ; global & static initialisations
                             81 ;--------------------------------------------------------
                             82 	.area HOME    (CODE)
                             83 	.area GSINIT  (CODE)
                             84 	.area GSFINAL (CODE)
                             85 	.area GSINIT  (CODE)
                             86 ;--------------------------------------------------------
                             87 ; Home
                             88 ;--------------------------------------------------------
                             89 	.area HOME    (CODE)
                             90 	.area HOME    (CODE)
                             91 ;--------------------------------------------------------
                             92 ; code
                             93 ;--------------------------------------------------------
                             94 	.area CSEG    (CODE)
                             95 ;------------------------------------------------------------
                             96 ;Allocation info for local variables in function 'logf'
                             97 ;------------------------------------------------------------
                             98 ;x                         Allocated to registers r2 r3 r4 r5 
                             99 ;Rz                        Allocated to stack - offset 1
                            100 ;f                         Allocated to stack - offset 5
                            101 ;z                         Allocated to stack - offset 9
                            102 ;w                         Allocated to registers r2 r3 r4 r5 
                            103 ;znum                      Allocated to stack - offset 13
                            104 ;zden                      Allocated to registers r2 r3 r4 r5 
                            105 ;xn                        Allocated to registers r6 r7 r0 r1 
                            106 ;n                         Allocated to stack - offset 17
                            107 ;------------------------------------------------------------
                            108 ;	logf.c:202: float logf(const float x) _FLOAT_FUNC_REENTRANT
                            109 ;	-----------------------------------------
                            110 ;	 function logf
                            111 ;	-----------------------------------------
   0000                     112 _logf:
                    0002    113 	ar2 = 0x02
                    0003    114 	ar3 = 0x03
                    0004    115 	ar4 = 0x04
                    0005    116 	ar5 = 0x05
                    0006    117 	ar6 = 0x06
                    0007    118 	ar7 = 0x07
                    0000    119 	ar0 = 0x00
                    0001    120 	ar1 = 0x01
   0000 C0*00               121 	push	_bpx
   0002 C0*01               122 	push	_bpx+1
   0004 85 81*00            123 	mov	_bpx,sp
   0007 85 9B*01            124 	mov	_bpx+1,esp
   000A 53*01 03            125 	anl	_bpx+1,#3
   000D E5 81               126 	mov	a,sp
   000F 24 12               127 	add	a,#0x12
   0011 F5 81               128 	mov	sp,a
   0013 E5 9B               129 	mov	a,esp
   0015 54 03               130 	anl	a,#3
   0017 34 00               131 	addc	a,#0x00
   0019 F5 9B               132 	mov	esp,a
   001B AA 82               133 	mov	r2,dpl
   001D AB 83               134 	mov	r3,dph
   001F AC 93               135 	mov	r4,dpx
   0021 AD F0               136 	mov	r5,b
                            137 ;	logf.c:212: if (x<=0.0)
                            138 ;	genAssign: resultIsFar = TRUE
   0023 90s00r00r00         139 	mov	dptr,#___fsgt_PARM_2
   0027 E4                  140 	clr  a
   0028 F0                  141 	movx @dptr,a
   0029 A3                  142 	inc  dptr
   002A F0                  143 	movx @dptr,a
   002B A3                  144 	inc	dptr
   002C E4                  145 	clr  a
   002D F0                  146 	movx @dptr,a
   002E A3                  147 	inc  dptr
   002F F0                  148 	movx @dptr,a
   0030 C0 02               149 	push	ar2
   0032 C0 03               150 	push	ar3
   0034 C0 04               151 	push	ar4
   0036 C0 05               152 	push	ar5
   0038 8A 82               153 	mov	dpl,r2
   003A 8B 83               154 	mov	dph,r3
   003C 8C 93               155 	mov	dpx,r4
   003E 8D F0               156 	mov	b,r5
   0040 12s00r00r00         157 	lcall	___fsgt
   0044 D0 05               158 	pop	ar5
   0046 D0 04               159 	pop	ar4
   0048 D0 03               160 	pop	ar3
   004A D0 02               161 	pop	ar2
   004C E5 82               162 	mov	a,dpl
   004E 70 15               163 	jnz  00102$
   0050                     164 00110$:
                            165 ;	logf.c:214: errno=EDOM;
                            166 ;	genAssign: resultIsFar = TRUE
   0050 90s00r00r00         167 	mov	dptr,#_errno
   0054 74 21               168 	mov	a,#0x21
   0056 F0                  169 	movx	@dptr,a
   0057 E4                  170 	clr	a
   0058 A3                  171 	inc	dptr
   0059 F0                  172 	movx	@dptr,a
                            173 ;	logf.c:215: return 0.0;
   005A 90 00 00 00         174 	mov  dptr,#0x0000
   005E 75 F0 00            175 	mov	b,#0x00
   0061 02s00r05r65         176 	ljmp	00106$
   0065                     177 00102$:
                            178 ;	logf.c:217: f=frexpf(x, &n);
   0065 E5*00               179 	mov	a,_bpx
   0067 24 11               180 	add	a,#0x11
   0069 F5 F0               181 	mov	b,a
   006B E4                  182 	clr	a
   006C 35*01               183 	addc	a,_bpx+1
   006E AE F0               184 	mov	r6,b
   0070 FF                  185 	mov	r7,a
   0071 78 40               186 	mov	r0,#0x40
   0073 90s00r00r00         187 	mov	dptr,#_frexpf_PARM_2
   0077 EE                  188 	mov	a,r6
   0078 F0                  189 	movx	@dptr,a
   0079 A3                  190 	inc	dptr
   007A EF                  191 	mov	a,r7
   007B F0                  192 	movx	@dptr,a
   007C A3                  193 	inc	dptr
   007D E8                  194 	mov	a,r0
   007E F0                  195 	movx	@dptr,a
   007F A3                  196 	inc	dptr
   0080 74 00               197 	mov	a,#0x0
   0082 F0                  198 	movx	@dptr,a
   0083 8A 82               199 	mov	dpl,r2
   0085 8B 83               200 	mov	dph,r3
   0087 8C 93               201 	mov	dpx,r4
   0089 8D F0               202 	mov	b,r5
   008B 12s00r00r00         203 	lcall	_frexpf
   008F AA 82               204 	mov	r2,dpl
   0091 AB 83               205 	mov	r3,dph
   0093 AC 93               206 	mov	r4,dpx
   0095 AD F0               207 	mov	r5,b
                            208 ;	genAssign: resultIsFar = TRUE
   0097 E5*00               209 	mov	a,_bpx
   0099 C3                  210 	clr	c
   009A 94 FB               211 	subb	a,#0xFB
   009C F5 82               212 	mov	dpl,a
   009E E5*01               213 	mov	a,_bpx+1
   00A0 94 FF               214 	subb	a,#0xFF
   00A2 F5 83               215 	mov	dph,a
   00A4 75 93 40            216 	mov	dpx,#0x40
   00A7 EA                  217 	mov	a,r2
   00A8 F0                  218 	movx	@dptr,a
   00A9 A3                  219 	inc	dptr
   00AA EB                  220 	mov	a,r3
   00AB F0                  221 	movx	@dptr,a
   00AC A3                  222 	inc	dptr
   00AD EC                  223 	mov	a,r4
   00AE F0                  224 	movx	@dptr,a
   00AF A3                  225 	inc	dptr
   00B0 ED                  226 	mov	a,r5
   00B1 F0                  227 	movx	@dptr,a
                            228 ;	logf.c:218: znum=f-0.5;
                            229 ;	genAssign: resultIsFar = TRUE
   00B2 90s00r00r00         230 	mov	dptr,#___fssub_PARM_2
   00B6 E4                  231 	clr  a
   00B7 F0                  232 	movx @dptr,a
   00B8 A3                  233 	inc  dptr
   00B9 F0                  234 	movx @dptr,a
   00BA A3                  235 	inc	dptr
   00BB E4                  236 	clr  a
   00BC F0                  237 	movx	@dptr,a
   00BD A3                  238 	inc	dptr
   00BE 74 3F               239 	mov	a,#0x3F
   00C0 F0                  240 	movx	@dptr,a
   00C1 E5*00               241 	mov	a,_bpx
   00C3 C3                  242 	clr	c
   00C4 94 FB               243 	subb	a,#0xFB
   00C6 F5 84               244 	mov	dpl1,a
   00C8 E5*01               245 	mov	a,_bpx+1
   00CA 94 FF               246 	subb	a,#0xFF
   00CC F5 85               247 	mov	dph1,a
   00CE 75 95 40            248 	mov	dpx1,#0x40
   00D1 05 86               249 	inc	dps
   00D3 E0                  250 	movx	a,@dptr
   00D4 F5 82               251 	mov	dpl,a
   00D6 A3                  252 	inc	dptr
   00D7 E0                  253 	movx	a,@dptr
   00D8 F5 83               254 	mov	dph,a
   00DA A3                  255 	inc	dptr
   00DB E0                  256 	movx	a,@dptr
   00DC F5 93               257 	mov	dpx,a
   00DE A3                  258 	inc	dptr
   00DF E0                  259 	movx	a,@dptr
   00E0 F5 F0               260 	mov	b,a
   00E2 75 86 00            261 	mov	dps,#0
   00E5 12s00r00r00         262 	lcall	___fssub
   00E9 AE 82               263 	mov	r6,dpl
   00EB AF 83               264 	mov	r7,dph
   00ED A8 93               265 	mov	r0,dpx
   00EF A9 F0               266 	mov	r1,b
                            267 ;	genAssign: resultIsFar = TRUE
   00F1 E5*00               268 	mov	a,_bpx
   00F3 C3                  269 	clr	c
   00F4 94 F3               270 	subb	a,#0xF3
   00F6 F5 82               271 	mov	dpl,a
   00F8 E5*01               272 	mov	a,_bpx+1
   00FA 94 FF               273 	subb	a,#0xFF
   00FC F5 83               274 	mov	dph,a
   00FE 75 93 40            275 	mov	dpx,#0x40
   0101 EE                  276 	mov	a,r6
   0102 F0                  277 	movx	@dptr,a
   0103 A3                  278 	inc	dptr
   0104 EF                  279 	mov	a,r7
   0105 F0                  280 	movx	@dptr,a
   0106 A3                  281 	inc	dptr
   0107 E8                  282 	mov	a,r0
   0108 F0                  283 	movx	@dptr,a
   0109 A3                  284 	inc	dptr
   010A E9                  285 	mov	a,r1
   010B F0                  286 	movx	@dptr,a
                            287 ;	logf.c:219: if (f>C0)
                            288 ;	genAssign: resultIsFar = TRUE
   010C 90s00r00r00         289 	mov	dptr,#___fsgt_PARM_2
   0110 74 F3               290 	mov	a,#0xF3
   0112 F0                  291 	movx	@dptr,a
   0113 A3                  292 	inc	dptr
   0114 74 04               293 	mov	a,#0x04
   0116 F0                  294 	movx	@dptr,a
   0117 A3                  295 	inc	dptr
   0118 74 35               296 	mov	a,#0x35
   011A F0                  297 	movx	@dptr,a
   011B A3                  298 	inc	dptr
   011C 74 3F               299 	mov	a,#0x3F
   011E F0                  300 	movx	@dptr,a
   011F E5*00               301 	mov	a,_bpx
   0121 C3                  302 	clr	c
   0122 94 FB               303 	subb	a,#0xFB
   0124 F5 84               304 	mov	dpl1,a
   0126 E5*01               305 	mov	a,_bpx+1
   0128 94 FF               306 	subb	a,#0xFF
   012A F5 85               307 	mov	dph1,a
   012C 75 95 40            308 	mov	dpx1,#0x40
   012F 05 86               309 	inc	dps
   0131 E0                  310 	movx	a,@dptr
   0132 F5 82               311 	mov	dpl,a
   0134 A3                  312 	inc	dptr
   0135 E0                  313 	movx	a,@dptr
   0136 F5 83               314 	mov	dph,a
   0138 A3                  315 	inc	dptr
   0139 E0                  316 	movx	a,@dptr
   013A F5 93               317 	mov	dpx,a
   013C A3                  318 	inc	dptr
   013D E0                  319 	movx	a,@dptr
   013E F5 F0               320 	mov	b,a
   0140 75 86 00            321 	mov	dps,#0
   0143 12s00r00r00         322 	lcall	___fsgt
   0147 E5 82               323 	mov	a,dpl
   0149 70 04               324 	jnz	00111$
   014B 02s00r02r0B         325 	ljmp	00104$
   014F                     326 00111$:
                            327 ;	logf.c:221: znum-=0.5;
                            328 ;	genAssign: resultIsFar = TRUE
   014F 90s00r00r00         329 	mov	dptr,#___fssub_PARM_2
   0153 E4                  330 	clr  a
   0154 F0                  331 	movx @dptr,a
   0155 A3                  332 	inc  dptr
   0156 F0                  333 	movx @dptr,a
   0157 A3                  334 	inc	dptr
   0158 E4                  335 	clr  a
   0159 F0                  336 	movx	@dptr,a
   015A A3                  337 	inc	dptr
   015B 74 3F               338 	mov	a,#0x3F
   015D F0                  339 	movx	@dptr,a
   015E E5*00               340 	mov	a,_bpx
   0160 C3                  341 	clr	c
   0161 94 F3               342 	subb	a,#0xF3
   0163 F5 84               343 	mov	dpl1,a
   0165 E5*01               344 	mov	a,_bpx+1
   0167 94 FF               345 	subb	a,#0xFF
   0169 F5 85               346 	mov	dph1,a
   016B 75 95 40            347 	mov	dpx1,#0x40
   016E 05 86               348 	inc	dps
   0170 E0                  349 	movx	a,@dptr
   0171 F5 82               350 	mov	dpl,a
   0173 A3                  351 	inc	dptr
   0174 E0                  352 	movx	a,@dptr
   0175 F5 83               353 	mov	dph,a
   0177 A3                  354 	inc	dptr
   0178 E0                  355 	movx	a,@dptr
   0179 F5 93               356 	mov	dpx,a
   017B A3                  357 	inc	dptr
   017C E0                  358 	movx	a,@dptr
   017D F5 F0               359 	mov	b,a
   017F 75 86 00            360 	mov	dps,#0
   0182 12s00r00r00         361 	lcall	___fssub
   0186 AA 82               362 	mov	r2,dpl
   0188 AB 83               363 	mov	r3,dph
   018A AC 93               364 	mov	r4,dpx
   018C AD F0               365 	mov	r5,b
                            366 ;	genAssign: resultIsFar = TRUE
   018E E5*00               367 	mov	a,_bpx
   0190 C3                  368 	clr	c
   0191 94 F3               369 	subb	a,#0xF3
   0193 F5 82               370 	mov	dpl,a
   0195 E5*01               371 	mov	a,_bpx+1
   0197 94 FF               372 	subb	a,#0xFF
   0199 F5 83               373 	mov	dph,a
   019B 75 93 40            374 	mov	dpx,#0x40
   019E EA                  375 	mov	a,r2
   019F F0                  376 	movx	@dptr,a
   01A0 A3                  377 	inc	dptr
   01A1 EB                  378 	mov	a,r3
   01A2 F0                  379 	movx	@dptr,a
   01A3 A3                  380 	inc	dptr
   01A4 EC                  381 	mov	a,r4
   01A5 F0                  382 	movx	@dptr,a
   01A6 A3                  383 	inc	dptr
   01A7 ED                  384 	mov	a,r5
   01A8 F0                  385 	movx	@dptr,a
                            386 ;	logf.c:222: zden=(f*0.5)+0.5;
   01A9 E5*00               387 	mov	a,_bpx
   01AB C3                  388 	clr	c
   01AC 94 FB               389 	subb	a,#0xFB
   01AE F5 82               390 	mov	dpl,a
   01B0 E5*01               391 	mov	a,_bpx+1
   01B2 94 FF               392 	subb	a,#0xFF
   01B4 F5 83               393 	mov	dph,a
   01B6 75 93 40            394 	mov	dpx,#0x40
                            395 ;	genAssign: resultIsFar = TRUE
   01B9 75 86 21            396 	mov	dps,#0x21
   01BC 90s00r00r00         397 	mov	dptr,#___fsmul_PARM_2
   01C0 E0                  398 	movx	a,@dptr
   01C1 F0                  399 	movx	@dptr,a
   01C2 A3                  400 	inc	dptr
   01C3 A3                  401 	inc	dptr
   01C4 E0                  402 	movx	a,@dptr
   01C5 F0                  403 	movx	@dptr,a
   01C6 A3                  404 	inc	dptr
   01C7 A3                  405 	inc	dptr
   01C8 E0                  406 	movx	a,@dptr
   01C9 F0                  407 	movx	@dptr,a
   01CA A3                  408 	inc	dptr
   01CB A3                  409 	inc	dptr
   01CC E0                  410 	movx	a,@dptr
   01CD F0                  411 	movx	@dptr,a
   01CE 75 86 00            412 	mov	dps,#0
   01D1 90 00 00 00         413 	mov  dptr,#0x0000
   01D5 75 F0 3F            414 	mov	b,#0x3F
   01D8 12s00r00r00         415 	lcall	___fsmul
   01DC AA 82               416 	mov	r2,dpl
   01DE AB 83               417 	mov	r3,dph
   01E0 AC 93               418 	mov	r4,dpx
   01E2 AD F0               419 	mov	r5,b
                            420 ;	genAssign: resultIsFar = TRUE
   01E4 90s00r00r00         421 	mov	dptr,#___fsadd_PARM_2
   01E8 E4                  422 	clr  a
   01E9 F0                  423 	movx @dptr,a
   01EA A3                  424 	inc  dptr
   01EB F0                  425 	movx @dptr,a
   01EC A3                  426 	inc	dptr
   01ED E4                  427 	clr  a
   01EE F0                  428 	movx	@dptr,a
   01EF A3                  429 	inc	dptr
   01F0 74 3F               430 	mov	a,#0x3F
   01F2 F0                  431 	movx	@dptr,a
   01F3 8A 82               432 	mov	dpl,r2
   01F5 8B 83               433 	mov	dph,r3
   01F7 8C 93               434 	mov	dpx,r4
   01F9 8D F0               435 	mov	b,r5
   01FB 12s00r00r00         436 	lcall	___fsadd
   01FF AA 82               437 	mov	r2,dpl
   0201 AB 83               438 	mov	r3,dph
   0203 AC 93               439 	mov	r4,dpx
   0205 AD F0               440 	mov	r5,b
                            441 ;	genAssign: resultIsFar = TRUE
   0207 02s00r02r9F         442 	ljmp	00105$
   020B                     443 00104$:
                            444 ;	logf.c:226: n--;
   020B E5*00               445 	mov	a,_bpx
   020D C3                  446 	clr	c
   020E 94 EF               447 	subb	a,#0xEF
   0210 F5 82               448 	mov	dpl,a
   0212 E5*01               449 	mov	a,_bpx+1
   0214 94 FF               450 	subb	a,#0xFF
   0216 F5 83               451 	mov	dph,a
   0218 75 93 40            452 	mov	dpx,#0x40
   021B E0                  453 	movx	a,@dptr
   021C 24 FF               454 	add	a,#0xFF
   021E FE                  455 	mov	r6,a
   021F A3                  456 	inc	dptr
   0220 E0                  457 	movx	a,@dptr
   0221 34 FF               458 	addc	a,#0xFF
   0223 FF                  459 	mov	r7,a
                            460 ;	genAssign: resultIsFar = TRUE
   0224 E5*00               461 	mov	a,_bpx
   0226 C3                  462 	clr	c
   0227 94 EF               463 	subb	a,#0xEF
   0229 F5 82               464 	mov	dpl,a
   022B E5*01               465 	mov	a,_bpx+1
   022D 94 FF               466 	subb	a,#0xFF
   022F F5 83               467 	mov	dph,a
   0231 75 93 40            468 	mov	dpx,#0x40
   0234 EE                  469 	mov	a,r6
   0235 F0                  470 	movx	@dptr,a
   0236 A3                  471 	inc	dptr
   0237 EF                  472 	mov	a,r7
   0238 F0                  473 	movx	@dptr,a
                            474 ;	logf.c:227: zden=znum*0.5+0.5;
   0239 E5*00               475 	mov	a,_bpx
   023B C3                  476 	clr	c
   023C 94 F3               477 	subb	a,#0xF3
   023E F5 82               478 	mov	dpl,a
   0240 E5*01               479 	mov	a,_bpx+1
   0242 94 FF               480 	subb	a,#0xFF
   0244 F5 83               481 	mov	dph,a
   0246 75 93 40            482 	mov	dpx,#0x40
                            483 ;	genAssign: resultIsFar = TRUE
   0249 75 86 21            484 	mov	dps,#0x21
   024C 90s00r00r00         485 	mov	dptr,#___fsmul_PARM_2
   0250 E0                  486 	movx	a,@dptr
   0251 F0                  487 	movx	@dptr,a
   0252 A3                  488 	inc	dptr
   0253 A3                  489 	inc	dptr
   0254 E0                  490 	movx	a,@dptr
   0255 F0                  491 	movx	@dptr,a
   0256 A3                  492 	inc	dptr
   0257 A3                  493 	inc	dptr
   0258 E0                  494 	movx	a,@dptr
   0259 F0                  495 	movx	@dptr,a
   025A A3                  496 	inc	dptr
   025B A3                  497 	inc	dptr
   025C E0                  498 	movx	a,@dptr
   025D F0                  499 	movx	@dptr,a
   025E 75 86 00            500 	mov	dps,#0
   0261 90 00 00 00         501 	mov  dptr,#0x0000
   0265 75 F0 3F            502 	mov	b,#0x3F
   0268 12s00r00r00         503 	lcall	___fsmul
   026C AE 82               504 	mov	r6,dpl
   026E AF 83               505 	mov	r7,dph
   0270 A8 93               506 	mov	r0,dpx
   0272 A9 F0               507 	mov	r1,b
                            508 ;	genAssign: resultIsFar = TRUE
   0274 90s00r00r00         509 	mov	dptr,#___fsadd_PARM_2
   0278 E4                  510 	clr  a
   0279 F0                  511 	movx @dptr,a
   027A A3                  512 	inc  dptr
   027B F0                  513 	movx @dptr,a
   027C A3                  514 	inc	dptr
   027D E4                  515 	clr  a
   027E F0                  516 	movx	@dptr,a
   027F A3                  517 	inc	dptr
   0280 74 3F               518 	mov	a,#0x3F
   0282 F0                  519 	movx	@dptr,a
   0283 8E 82               520 	mov	dpl,r6
   0285 8F 83               521 	mov	dph,r7
   0287 88 93               522 	mov	dpx,r0
   0289 89 F0               523 	mov	b,r1
   028B 12s00r00r00         524 	lcall	___fsadd
   028F AE 82               525 	mov	r6,dpl
   0291 AF 83               526 	mov	r7,dph
   0293 A8 93               527 	mov	r0,dpx
   0295 A9 F0               528 	mov	r1,b
                            529 ;	genAssign: resultIsFar = TRUE
   0297 8E 02               530 	mov	ar2,r6
   0299 8F 03               531 	mov	ar3,r7
   029B 88 04               532 	mov	ar4,r0
   029D 89 05               533 	mov	ar5,r1
   029F                     534 00105$:
                            535 ;	logf.c:229: z=znum/zden;
                            536 ;	genAssign: resultIsFar = TRUE
   029F 90s00r00r00         537 	mov	dptr,#___fsdiv_PARM_2
   02A3 EA                  538 	mov	a,r2
   02A4 F0                  539 	movx	@dptr,a
   02A5 A3                  540 	inc	dptr
   02A6 EB                  541 	mov	a,r3
   02A7 F0                  542 	movx	@dptr,a
   02A8 A3                  543 	inc	dptr
   02A9 EC                  544 	mov	a,r4
   02AA F0                  545 	movx	@dptr,a
   02AB A3                  546 	inc	dptr
   02AC ED                  547 	mov	a,r5
   02AD F0                  548 	movx	@dptr,a
   02AE E5*00               549 	mov	a,_bpx
   02B0 C3                  550 	clr	c
   02B1 94 F3               551 	subb	a,#0xF3
   02B3 F5 84               552 	mov	dpl1,a
   02B5 E5*01               553 	mov	a,_bpx+1
   02B7 94 FF               554 	subb	a,#0xFF
   02B9 F5 85               555 	mov	dph1,a
   02BB 75 95 40            556 	mov	dpx1,#0x40
   02BE 05 86               557 	inc	dps
   02C0 E0                  558 	movx	a,@dptr
   02C1 F5 82               559 	mov	dpl,a
   02C3 A3                  560 	inc	dptr
   02C4 E0                  561 	movx	a,@dptr
   02C5 F5 83               562 	mov	dph,a
   02C7 A3                  563 	inc	dptr
   02C8 E0                  564 	movx	a,@dptr
   02C9 F5 93               565 	mov	dpx,a
   02CB A3                  566 	inc	dptr
   02CC E0                  567 	movx	a,@dptr
   02CD F5 F0               568 	mov	b,a
   02CF 75 86 00            569 	mov	dps,#0
   02D2 12s00r00r00         570 	lcall	___fsdiv
   02D6 AA 82               571 	mov	r2,dpl
   02D8 AB 83               572 	mov	r3,dph
   02DA AC 93               573 	mov	r4,dpx
   02DC AD F0               574 	mov	r5,b
                            575 ;	genAssign: resultIsFar = TRUE
   02DE E5*00               576 	mov	a,_bpx
   02E0 C3                  577 	clr	c
   02E1 94 F7               578 	subb	a,#0xF7
   02E3 F5 82               579 	mov	dpl,a
   02E5 E5*01               580 	mov	a,_bpx+1
   02E7 94 FF               581 	subb	a,#0xFF
   02E9 F5 83               582 	mov	dph,a
   02EB 75 93 40            583 	mov	dpx,#0x40
   02EE EA                  584 	mov	a,r2
   02EF F0                  585 	movx	@dptr,a
   02F0 A3                  586 	inc	dptr
   02F1 EB                  587 	mov	a,r3
   02F2 F0                  588 	movx	@dptr,a
   02F3 A3                  589 	inc	dptr
   02F4 EC                  590 	mov	a,r4
   02F5 F0                  591 	movx	@dptr,a
   02F6 A3                  592 	inc	dptr
   02F7 ED                  593 	mov	a,r5
   02F8 F0                  594 	movx	@dptr,a
                            595 ;	logf.c:230: w=z*z;
   02F9 E5*00               596 	mov	a,_bpx
   02FB C3                  597 	clr	c
   02FC 94 F7               598 	subb	a,#0xF7
   02FE F5 82               599 	mov	dpl,a
   0300 E5*01               600 	mov	a,_bpx+1
   0302 94 FF               601 	subb	a,#0xFF
   0304 F5 83               602 	mov	dph,a
   0306 75 93 40            603 	mov	dpx,#0x40
                            604 ;	genAssign: resultIsFar = TRUE
   0309 75 86 21            605 	mov	dps,#0x21
   030C 90s00r00r00         606 	mov	dptr,#___fsmul_PARM_2
   0310 E0                  607 	movx	a,@dptr
   0311 F0                  608 	movx	@dptr,a
   0312 A3                  609 	inc	dptr
   0313 A3                  610 	inc	dptr
   0314 E0                  611 	movx	a,@dptr
   0315 F0                  612 	movx	@dptr,a
   0316 A3                  613 	inc	dptr
   0317 A3                  614 	inc	dptr
   0318 E0                  615 	movx	a,@dptr
   0319 F0                  616 	movx	@dptr,a
   031A A3                  617 	inc	dptr
   031B A3                  618 	inc	dptr
   031C E0                  619 	movx	a,@dptr
   031D F0                  620 	movx	@dptr,a
   031E 75 86 00            621 	mov	dps,#0
   0321 E5*00               622 	mov	a,_bpx
   0323 C3                  623 	clr	c
   0324 94 F7               624 	subb	a,#0xF7
   0326 F5 84               625 	mov	dpl1,a
   0328 E5*01               626 	mov	a,_bpx+1
   032A 94 FF               627 	subb	a,#0xFF
   032C F5 85               628 	mov	dph1,a
   032E 75 95 40            629 	mov	dpx1,#0x40
   0331 05 86               630 	inc	dps
   0333 E0                  631 	movx	a,@dptr
   0334 F5 82               632 	mov	dpl,a
   0336 A3                  633 	inc	dptr
   0337 E0                  634 	movx	a,@dptr
   0338 F5 83               635 	mov	dph,a
   033A A3                  636 	inc	dptr
   033B E0                  637 	movx	a,@dptr
   033C F5 93               638 	mov	dpx,a
   033E A3                  639 	inc	dptr
   033F E0                  640 	movx	a,@dptr
   0340 F5 F0               641 	mov	b,a
   0342 75 86 00            642 	mov	dps,#0
   0345 12s00r00r00         643 	lcall	___fsmul
   0349 AE 82               644 	mov	r6,dpl
   034B AF 83               645 	mov	r7,dph
   034D A8 93               646 	mov	r0,dpx
   034F A9 F0               647 	mov	r1,b
                            648 ;	genAssign: resultIsFar = FALSE
   0351 8E 02               649 	mov	ar2,r6
   0353 8F 03               650 	mov	ar3,r7
   0355 88 04               651 	mov	ar4,r0
   0357 89 05               652 	mov	ar5,r1
                            653 ;	logf.c:232: Rz=z+z*(w*A(w)/B(w));
                            654 ;	genAssign: resultIsFar = TRUE
   0359 90s00r00r00         655 	mov	dptr,#___fsmul_PARM_2
   035D EA                  656 	mov	a,r2
   035E F0                  657 	movx	@dptr,a
   035F A3                  658 	inc	dptr
   0360 EB                  659 	mov	a,r3
   0361 F0                  660 	movx	@dptr,a
   0362 A3                  661 	inc	dptr
   0363 EC                  662 	mov	a,r4
   0364 F0                  663 	movx	@dptr,a
   0365 A3                  664 	inc	dptr
   0366 ED                  665 	mov	a,r5
   0367 F0                  666 	movx	@dptr,a
   0368 C0 02               667 	push	ar2
   036A C0 03               668 	push	ar3
   036C C0 04               669 	push	ar4
   036E C0 05               670 	push	ar5
   0370 90 0D 7E 3D         671 	mov	dptr,#0x0D7E3D
   0374 75 F0 BF            672 	mov	b,#0xBF
   0377 12s00r00r00         673 	lcall	___fsmul
   037B AE 82               674 	mov	r6,dpl
   037D AF 83               675 	mov	r7,dph
   037F A8 93               676 	mov	r0,dpx
   0381 A9 F0               677 	mov	r1,b
   0383 D0 05               678 	pop	ar5
   0385 D0 04               679 	pop	ar4
   0387 D0 03               680 	pop	ar3
   0389 D0 02               681 	pop	ar2
                            682 ;	genAssign: resultIsFar = TRUE
   038B 90s00r00r00         683 	mov	dptr,#___fsadd_PARM_2
   038F 74 3A               684 	mov	a,#0x3A
   0391 F0                  685 	movx	@dptr,a
   0392 A3                  686 	inc	dptr
   0393 74 3F               687 	mov	a,#0x3F
   0395 F0                  688 	movx	@dptr,a
   0396 A3                  689 	inc	dptr
   0397 74 D4               690 	mov	a,#0xD4
   0399 F0                  691 	movx	@dptr,a
   039A A3                  692 	inc	dptr
   039B 74 C0               693 	mov	a,#0xC0
   039D F0                  694 	movx	@dptr,a
   039E C0 06               695 	push	ar6
   03A0 C0 07               696 	push	ar7
   03A2 C0 00               697 	push	ar0
   03A4 C0 01               698 	push	ar1
   03A6 8A 82               699 	mov	dpl,r2
   03A8 8B 83               700 	mov	dph,r3
   03AA 8C 93               701 	mov	dpx,r4
   03AC 8D F0               702 	mov	b,r5
   03AE 12s00r00r00         703 	lcall	___fsadd
   03B2 AA 82               704 	mov	r2,dpl
   03B4 AB 83               705 	mov	r3,dph
   03B6 AC 93               706 	mov	r4,dpx
   03B8 AD F0               707 	mov	r5,b
   03BA D0 01               708 	pop	ar1
   03BC D0 00               709 	pop	ar0
   03BE D0 07               710 	pop	ar7
   03C0 D0 06               711 	pop	ar6
                            712 ;	genAssign: resultIsFar = TRUE
   03C2 90s00r00r00         713 	mov	dptr,#___fsdiv_PARM_2
   03C6 EA                  714 	mov	a,r2
   03C7 F0                  715 	movx	@dptr,a
   03C8 A3                  716 	inc	dptr
   03C9 EB                  717 	mov	a,r3
   03CA F0                  718 	movx	@dptr,a
   03CB A3                  719 	inc	dptr
   03CC EC                  720 	mov	a,r4
   03CD F0                  721 	movx	@dptr,a
   03CE A3                  722 	inc	dptr
   03CF ED                  723 	mov	a,r5
   03D0 F0                  724 	movx	@dptr,a
   03D1 8E 82               725 	mov	dpl,r6
   03D3 8F 83               726 	mov	dph,r7
   03D5 88 93               727 	mov	dpx,r0
   03D7 89 F0               728 	mov	b,r1
   03D9 12s00r00r00         729 	lcall	___fsdiv
   03DD AA 82               730 	mov	r2,dpl
   03DF AB 83               731 	mov	r3,dph
   03E1 AC 93               732 	mov	r4,dpx
   03E3 AD F0               733 	mov	r5,b
                            734 ;	genAssign: resultIsFar = TRUE
   03E5 90s00r00r00         735 	mov	dptr,#___fsmul_PARM_2
   03E9 EA                  736 	mov	a,r2
   03EA F0                  737 	movx	@dptr,a
   03EB A3                  738 	inc	dptr
   03EC EB                  739 	mov	a,r3
   03ED F0                  740 	movx	@dptr,a
   03EE A3                  741 	inc	dptr
   03EF EC                  742 	mov	a,r4
   03F0 F0                  743 	movx	@dptr,a
   03F1 A3                  744 	inc	dptr
   03F2 ED                  745 	mov	a,r5
   03F3 F0                  746 	movx	@dptr,a
   03F4 E5*00               747 	mov	a,_bpx
   03F6 C3                  748 	clr	c
   03F7 94 F7               749 	subb	a,#0xF7
   03F9 F5 84               750 	mov	dpl1,a
   03FB E5*01               751 	mov	a,_bpx+1
   03FD 94 FF               752 	subb	a,#0xFF
   03FF F5 85               753 	mov	dph1,a
   0401 75 95 40            754 	mov	dpx1,#0x40
   0404 05 86               755 	inc	dps
   0406 E0                  756 	movx	a,@dptr
   0407 F5 82               757 	mov	dpl,a
   0409 A3                  758 	inc	dptr
   040A E0                  759 	movx	a,@dptr
   040B F5 83               760 	mov	dph,a
   040D A3                  761 	inc	dptr
   040E E0                  762 	movx	a,@dptr
   040F F5 93               763 	mov	dpx,a
   0411 A3                  764 	inc	dptr
   0412 E0                  765 	movx	a,@dptr
   0413 F5 F0               766 	mov	b,a
   0415 75 86 00            767 	mov	dps,#0
   0418 12s00r00r00         768 	lcall	___fsmul
   041C AA 82               769 	mov	r2,dpl
   041E AB 83               770 	mov	r3,dph
   0420 AC 93               771 	mov	r4,dpx
   0422 AD F0               772 	mov	r5,b
                            773 ;	genAssign: resultIsFar = TRUE
   0424 90s00r00r00         774 	mov	dptr,#___fsadd_PARM_2
   0428 EA                  775 	mov	a,r2
   0429 F0                  776 	movx	@dptr,a
   042A A3                  777 	inc	dptr
   042B EB                  778 	mov	a,r3
   042C F0                  779 	movx	@dptr,a
   042D A3                  780 	inc	dptr
   042E EC                  781 	mov	a,r4
   042F F0                  782 	movx	@dptr,a
   0430 A3                  783 	inc	dptr
   0431 ED                  784 	mov	a,r5
   0432 F0                  785 	movx	@dptr,a
   0433 E5*00               786 	mov	a,_bpx
   0435 C3                  787 	clr	c
   0436 94 F7               788 	subb	a,#0xF7
   0438 F5 84               789 	mov	dpl1,a
   043A E5*01               790 	mov	a,_bpx+1
   043C 94 FF               791 	subb	a,#0xFF
   043E F5 85               792 	mov	dph1,a
   0440 75 95 40            793 	mov	dpx1,#0x40
   0443 05 86               794 	inc	dps
   0445 E0                  795 	movx	a,@dptr
   0446 F5 82               796 	mov	dpl,a
   0448 A3                  797 	inc	dptr
   0449 E0                  798 	movx	a,@dptr
   044A F5 83               799 	mov	dph,a
   044C A3                  800 	inc	dptr
   044D E0                  801 	movx	a,@dptr
   044E F5 93               802 	mov	dpx,a
   0450 A3                  803 	inc	dptr
   0451 E0                  804 	movx	a,@dptr
   0452 F5 F0               805 	mov	b,a
   0454 75 86 00            806 	mov	dps,#0
   0457 12s00r00r00         807 	lcall	___fsadd
   045B AA 82               808 	mov	r2,dpl
   045D AB 83               809 	mov	r3,dph
   045F AC 93               810 	mov	r4,dpx
   0461 AD F0               811 	mov	r5,b
                            812 ;	genAssign: resultIsFar = TRUE
   0463 75 93 40            813 	mov	dpx,#0x40
   0466 85*01 83            814 	mov	dph,_bpx+1
   0469 85*00 82            815 	mov	dpl,_bpx
   046C A3                  816 	inc	dptr
   046D EA                  817 	mov	a,r2
   046E F0                  818 	movx	@dptr,a
   046F A3                  819 	inc	dptr
   0470 EB                  820 	mov	a,r3
   0471 F0                  821 	movx	@dptr,a
   0472 A3                  822 	inc	dptr
   0473 EC                  823 	mov	a,r4
   0474 F0                  824 	movx	@dptr,a
   0475 A3                  825 	inc	dptr
   0476 ED                  826 	mov	a,r5
   0477 F0                  827 	movx	@dptr,a
                            828 ;	logf.c:233: xn=n;
   0478 E5*00               829 	mov	a,_bpx
   047A C3                  830 	clr	c
   047B 94 EF               831 	subb	a,#0xEF
   047D F5 84               832 	mov	dpl1,a
   047F E5*01               833 	mov	a,_bpx+1
   0481 94 FF               834 	subb	a,#0xFF
   0483 F5 85               835 	mov	dph1,a
   0485 75 95 40            836 	mov	dpx1,#0x40
   0488 05 86               837 	inc	dps
   048A E0                  838 	movx	a,@dptr
   048B F5 82               839 	mov	dpl,a
   048D A3                  840 	inc	dptr
   048E E0                  841 	movx	a,@dptr
   048F F5 83               842 	mov	dph,a
   0491 75 86 00            843 	mov	dps,#0
   0494 12s00r00r00         844 	lcall	___sint2fs
   0498 AE 82               845 	mov	r6,dpl
   049A AF 83               846 	mov	r7,dph
   049C A8 93               847 	mov	r0,dpx
   049E A9 F0               848 	mov	r1,b
                            849 ;	genAssign: resultIsFar = TRUE
                            850 ;	logf.c:234: return ((xn*C2+Rz)+xn*C1);
                            851 ;	genAssign: resultIsFar = TRUE
   04A0 90s00r00r00         852 	mov	dptr,#___fsmul_PARM_2
   04A4 EE                  853 	mov	a,r6
   04A5 F0                  854 	movx	@dptr,a
   04A6 A3                  855 	inc	dptr
   04A7 EF                  856 	mov	a,r7
   04A8 F0                  857 	movx	@dptr,a
   04A9 A3                  858 	inc	dptr
   04AA E8                  859 	mov	a,r0
   04AB F0                  860 	movx	@dptr,a
   04AC A3                  861 	inc	dptr
   04AD E9                  862 	mov	a,r1
   04AE F0                  863 	movx	@dptr,a
   04AF C0 06               864 	push	ar6
   04B1 C0 07               865 	push	ar7
   04B3 C0 00               866 	push	ar0
   04B5 C0 01               867 	push	ar1
   04B7 90 5E 80 83         868 	mov	dptr,#0x5E8083
   04BB 75 F0 B9            869 	mov	b,#0xB9
   04BE 12s00r00r00         870 	lcall	___fsmul
   04C2 AA 82               871 	mov	r2,dpl
   04C4 AB 83               872 	mov	r3,dph
   04C6 AC 93               873 	mov	r4,dpx
   04C8 AD F0               874 	mov	r5,b
   04CA D0 01               875 	pop	ar1
   04CC D0 00               876 	pop	ar0
   04CE D0 07               877 	pop	ar7
   04D0 D0 06               878 	pop	ar6
   04D2 75 93 40            879 	mov	dpx,#0x40
   04D5 85*01 83            880 	mov	dph,_bpx+1
   04D8 85*00 82            881 	mov	dpl,_bpx
   04DB A3                  882 	inc	dptr
                            883 ;	genAssign: resultIsFar = TRUE
   04DC 75 86 21            884 	mov	dps,#0x21
   04DF 90s00r00r00         885 	mov	dptr,#___fsadd_PARM_2
   04E3 E0                  886 	movx	a,@dptr
   04E4 F0                  887 	movx	@dptr,a
   04E5 A3                  888 	inc	dptr
   04E6 A3                  889 	inc	dptr
   04E7 E0                  890 	movx	a,@dptr
   04E8 F0                  891 	movx	@dptr,a
   04E9 A3                  892 	inc	dptr
   04EA A3                  893 	inc	dptr
   04EB E0                  894 	movx	a,@dptr
   04EC F0                  895 	movx	@dptr,a
   04ED A3                  896 	inc	dptr
   04EE A3                  897 	inc	dptr
   04EF E0                  898 	movx	a,@dptr
   04F0 F0                  899 	movx	@dptr,a
   04F1 75 86 00            900 	mov	dps,#0
   04F4 C0 06               901 	push	ar6
   04F6 C0 07               902 	push	ar7
   04F8 C0 00               903 	push	ar0
   04FA C0 01               904 	push	ar1
   04FC 8A 82               905 	mov	dpl,r2
   04FE 8B 83               906 	mov	dph,r3
   0500 8C 93               907 	mov	dpx,r4
   0502 8D F0               908 	mov	b,r5
   0504 12s00r00r00         909 	lcall	___fsadd
   0508 AA 82               910 	mov	r2,dpl
   050A AB 83               911 	mov	r3,dph
   050C AC 93               912 	mov	r4,dpx
   050E AD F0               913 	mov	r5,b
   0510 D0 01               914 	pop	ar1
   0512 D0 00               915 	pop	ar0
   0514 D0 07               916 	pop	ar7
   0516 D0 06               917 	pop	ar6
                            918 ;	genAssign: resultIsFar = TRUE
   0518 90s00r00r00         919 	mov	dptr,#___fsmul_PARM_2
   051C EE                  920 	mov	a,r6
   051D F0                  921 	movx	@dptr,a
   051E A3                  922 	inc	dptr
   051F EF                  923 	mov	a,r7
   0520 F0                  924 	movx	@dptr,a
   0521 A3                  925 	inc	dptr
   0522 E8                  926 	mov	a,r0
   0523 F0                  927 	movx	@dptr,a
   0524 A3                  928 	inc	dptr
   0525 E9                  929 	mov	a,r1
   0526 F0                  930 	movx	@dptr,a
   0527 C0 02               931 	push	ar2
   0529 C0 03               932 	push	ar3
   052B C0 04               933 	push	ar4
   052D C0 05               934 	push	ar5
   052F 90 31 80 00         935 	mov	dptr,#0x318000
   0533 75 F0 3F            936 	mov	b,#0x3F
   0536 12s00r00r00         937 	lcall	___fsmul
   053A AE 82               938 	mov	r6,dpl
   053C AF 83               939 	mov	r7,dph
   053E A8 93               940 	mov	r0,dpx
   0540 A9 F0               941 	mov	r1,b
   0542 D0 05               942 	pop	ar5
   0544 D0 04               943 	pop	ar4
   0546 D0 03               944 	pop	ar3
   0548 D0 02               945 	pop	ar2
                            946 ;	genAssign: resultIsFar = TRUE
   054A 90s00r00r00         947 	mov	dptr,#___fsadd_PARM_2
   054E EE                  948 	mov	a,r6
   054F F0                  949 	movx	@dptr,a
   0550 A3                  950 	inc	dptr
   0551 EF                  951 	mov	a,r7
   0552 F0                  952 	movx	@dptr,a
   0553 A3                  953 	inc	dptr
   0554 E8                  954 	mov	a,r0
   0555 F0                  955 	movx	@dptr,a
   0556 A3                  956 	inc	dptr
   0557 E9                  957 	mov	a,r1
   0558 F0                  958 	movx	@dptr,a
   0559 8A 82               959 	mov	dpl,r2
   055B 8B 83               960 	mov	dph,r3
   055D 8C 93               961 	mov	dpx,r4
   055F 8D F0               962 	mov	b,r5
   0561 12s00r00r00         963 	lcall	___fsadd
   0565                     964 00106$:
   0565 85*00 81            965 	mov	sp,_bpx
   0568 85*01 9B            966 	mov	esp,_bpx+1
   056B D0*01               967 	pop	_bpx+1
   056D D0*00               968 	pop	_bpx
   056F 22                  969 	ret
                            970 	.area CSEG    (CODE)
                            971 	.area CONST   (CODE)
                            972 	.area XINIT   (CODE)
                            973 	.area CABS    (ABS,CODE)

                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:25:30 2013
                              5 ;--------------------------------------------------------
                              6 	.module _strpbrk
                              7 	.optsdcc -mds390 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _strpbrk_PARM_2
                             31 	.globl _strpbrk
                             32 ;--------------------------------------------------------
                             33 ; special function registers
                             34 ;--------------------------------------------------------
                             35 ;--------------------------------------------------------
                             36 ; special function bits
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; overlayable register banks
                             40 ;--------------------------------------------------------
                             41 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      42 	.ds 8
                             43 ;--------------------------------------------------------
                             44 ; internal ram data
                             45 ;--------------------------------------------------------
                             46 	.area DSEG    (DATA)
                             47 ;--------------------------------------------------------
                             48 ; overlayable items in internal ram 
                             49 ;--------------------------------------------------------
                             50 	.area OSEG    (OVR,DATA)
                             51 ;--------------------------------------------------------
                             52 ; indirectly addressable internal ram data
                             53 ;--------------------------------------------------------
                             54 	.area ISEG    (DATA)
                             55 ;--------------------------------------------------------
                             56 ; absolute internal ram data
                             57 ;--------------------------------------------------------
                             58 	.area IABS    (ABS,DATA)
                             59 	.area IABS    (ABS,DATA)
                             60 ;--------------------------------------------------------
                             61 ; bit data
                             62 ;--------------------------------------------------------
                             63 	.area BSEG    (BIT)
                             64 ;--------------------------------------------------------
                             65 ; paged external ram data
                             66 ;--------------------------------------------------------
                             67 	.area PSEG    (PAG,XDATA)
                             68 ;--------------------------------------------------------
                             69 ; external ram data
                             70 ;--------------------------------------------------------
                             71 	.area XSEG    (XDATA)
   0000                      72 _strpbrk_PARM_2:
   0000                      73 	.ds 4
                             74 ;--------------------------------------------------------
                             75 ; absolute external ram data
                             76 ;--------------------------------------------------------
                             77 	.area XABS    (ABS,XDATA)
                             78 ;--------------------------------------------------------
                             79 ; external initialized ram data
                             80 ;--------------------------------------------------------
                             81 	.area XISEG   (XDATA)
                             82 ;--------------------------------------------------------
                             83 ; global & static initialisations
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area GSINIT  (CODE)
                             87 	.area GSFINAL (CODE)
                             88 	.area GSINIT  (CODE)
                             89 ;--------------------------------------------------------
                             90 ; Home
                             91 ;--------------------------------------------------------
                             92 	.area HOME    (CODE)
                             93 	.area HOME    (CODE)
                             94 ;--------------------------------------------------------
                             95 ; code
                             96 ;--------------------------------------------------------
                             97 	.area CSEG    (CODE)
                             98 ;------------------------------------------------------------
                             99 ;Allocation info for local variables in function 'strpbrk'
                            100 ;------------------------------------------------------------
                            101 ;ch                        Allocated to registers r7 
                            102 ;control                   Allocated with name '_strpbrk_PARM_2'
                            103 ;string                    Allocated to registers r2 r3 r4 r5 
                            104 ;------------------------------------------------------------
                            105 ;	_strpbrk.c:26: char * strpbrk ( 
                            106 ;	-----------------------------------------
                            107 ;	 function strpbrk
                            108 ;	-----------------------------------------
   0000                     109 _strpbrk:
                    0002    110 	ar2 = 0x02
                    0003    111 	ar3 = 0x03
                    0004    112 	ar4 = 0x04
                    0005    113 	ar5 = 0x05
                    0006    114 	ar6 = 0x06
                    0007    115 	ar7 = 0x07
                    0000    116 	ar0 = 0x00
                    0001    117 	ar1 = 0x01
   0000 AA 82               118 	mov	r2,dpl
   0002 AB 83               119 	mov	r3,dph
   0004 AC 93               120 	mov	r4,dpx
   0006 AD F0               121 	mov	r5,b
                            122 ;	_strpbrk.c:33: while ( ch = *string ) {
   0008                     123 00103$:
   0008 8A 82               124 	mov	dpl,r2
   000A 8B 83               125 	mov	dph,r3
   000C 8C 93               126 	mov	dpx,r4
   000E 8D F0               127 	mov	b,r5
   0010 12s00r00r00         128 	lcall	__gptrget
                            129 ;	genAssign: resultIsFar = FALSE
   0014 FE                  130 	mov  r6,a
   0015 8E 07               131 	mov  ar7,r6 
   0017 60 44               132 	jz  00105$
   0019                     133 00111$:
                            134 ;	_strpbrk.c:34: if (strchr (control, ch ))
                            135 ;	genAssign: resultIsFar = TRUE
   0019 90s00r00r00         136 	mov	dptr,#_strchr_PARM_2
   001D EF                  137 	mov	a,r7
   001E F0                  138 	movx	@dptr,a
   001F C0 02               139 	push	ar2
   0021 C0 03               140 	push	ar3
   0023 C0 04               141 	push	ar4
   0025 C0 05               142 	push	ar5
   0027 05 86               143 	inc	dps
   0029 90s00r00r00         144 	mov	dptr,#_strpbrk_PARM_2
   002D E0                  145 	movx	a,@dptr
   002E F5 82               146 	mov	dpl,a
   0030 A3                  147 	inc	dptr
   0031 E0                  148 	movx	a,@dptr
   0032 F5 83               149 	mov	dph,a
   0034 A3                  150 	inc	dptr
   0035 E0                  151 	movx	a,@dptr
   0036 F5 93               152 	mov	dpx,a
   0038 A3                  153 	inc	dptr
   0039 E0                  154 	movx	a,@dptr
   003A F5 F0               155 	mov	b,a
   003C 75 86 00            156 	mov	dps,#0
   003F 12s00r00r00         157 	lcall	_strchr
   0043 D0 05               158 	pop	ar5
   0045 D0 04               159 	pop	ar4
   0047 D0 03               160 	pop	ar3
   0049 D0 02               161 	pop	ar2
   004B E5 82               162 	mov	a,dpl
   004D 45 83               163 	orl	a,dph
   004F 45 93               164 	orl	a,dpx
   0051 60 B5               165 	jz  00103$
   0053                     166 00112$:
                            167 ;	_strpbrk.c:35: return string ;
   0053 8A 82               168 	mov	dpl,r2
   0055 8B 83               169 	mov	dph,r3
   0057 8C 93               170 	mov	dpx,r4
   0059 8D F0               171 	mov	b,r5
   005B 80 07               172 	sjmp 00106$
   005D                     173 00105$:
                            174 ;	_strpbrk.c:38: return (NULL);
   005D 90 00 00 00         175 	mov  dptr,#0x0000
   0061 75 F0 00            176 	mov	b,#0x00
   0064                     177 00106$:
   0064 22                  178 	ret
                            179 	.area CSEG    (CODE)
                            180 	.area CONST   (CODE)
                            181 	.area XINIT   (CODE)
                            182 	.area CABS    (ABS,CODE)

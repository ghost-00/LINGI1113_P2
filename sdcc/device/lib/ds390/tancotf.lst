                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:25:28 2013
                              5 ;--------------------------------------------------------
                              6 	.module tancotf
                              7 	.optsdcc -mds390 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _tancotf
                             31 	.globl _tancotf_PARM_2
                             32 ;--------------------------------------------------------
                             33 ; special function registers
                             34 ;--------------------------------------------------------
                             35 ;--------------------------------------------------------
                             36 ; special function bits
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; overlayable register banks
                             40 ;--------------------------------------------------------
                             41 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      42 	.ds 8
                             43 ;--------------------------------------------------------
                             44 ; internal ram data
                             45 ;--------------------------------------------------------
                             46 	.area DSEG    (DATA)
                             47 ;--------------------------------------------------------
                             48 ; overlayable items in internal ram 
                             49 ;--------------------------------------------------------
                             50 	.area OSEG    (OVR,DATA)
                             51 ;--------------------------------------------------------
                             52 ; indirectly addressable internal ram data
                             53 ;--------------------------------------------------------
                             54 	.area ISEG    (DATA)
                             55 ;--------------------------------------------------------
                             56 ; absolute internal ram data
                             57 ;--------------------------------------------------------
                             58 	.area IABS    (ABS,DATA)
                             59 	.area IABS    (ABS,DATA)
                             60 ;--------------------------------------------------------
                             61 ; bit data
                             62 ;--------------------------------------------------------
                             63 	.area BSEG    (BIT)
                             64 ;--------------------------------------------------------
                             65 ; paged external ram data
                             66 ;--------------------------------------------------------
                             67 	.area PSEG    (PAG,XDATA)
                             68 ;--------------------------------------------------------
                             69 ; external ram data
                             70 ;--------------------------------------------------------
                             71 	.area XSEG    (XDATA)
   0000                      72 _tancotf_PARM_2:
   0000                      73 	.ds 2
   0002                      74 _tancotf_f_1_1:
   0002                      75 	.ds 4
   0006                      76 _tancotf_g_1_1:
   0006                      77 	.ds 4
   000A                      78 _tancotf_xn_1_1:
   000A                      79 	.ds 4
   000E                      80 _tancotf_xden_1_1:
   000E                      81 	.ds 4
   0012                      82 _tancotf_n_1_1:
   0012                      83 	.ds 2
   0014                      84 _tancotf_sloc0_1_0:
   0014                      85 	.ds 4
                             86 ;--------------------------------------------------------
                             87 ; absolute external ram data
                             88 ;--------------------------------------------------------
                             89 	.area XABS    (ABS,XDATA)
                             90 ;--------------------------------------------------------
                             91 ; external initialized ram data
                             92 ;--------------------------------------------------------
                             93 	.area XISEG   (XDATA)
                             94 ;--------------------------------------------------------
                             95 ; global & static initialisations
                             96 ;--------------------------------------------------------
                             97 	.area HOME    (CODE)
                             98 	.area GSINIT  (CODE)
                             99 	.area GSFINAL (CODE)
                            100 	.area GSINIT  (CODE)
                            101 ;--------------------------------------------------------
                            102 ; Home
                            103 ;--------------------------------------------------------
                            104 	.area HOME    (CODE)
                            105 	.area HOME    (CODE)
                            106 ;--------------------------------------------------------
                            107 ; code
                            108 ;--------------------------------------------------------
                            109 	.area CSEG    (CODE)
                            110 ;------------------------------------------------------------
                            111 ;Allocation info for local variables in function 'tancotf'
                            112 ;------------------------------------------------------------
                            113 ;iscotan                   Allocated with name '_tancotf_PARM_2'
                            114 ;x                         Allocated to registers r2 r3 r4 r5 
                            115 ;f                         Allocated with name '_tancotf_f_1_1'
                            116 ;g                         Allocated with name '_tancotf_g_1_1'
                            117 ;xn                        Allocated with name '_tancotf_xn_1_1'
                            118 ;xnum                      Allocated to registers r6 r7 r0 r1 
                            119 ;xden                      Allocated with name '_tancotf_xden_1_1'
                            120 ;n                         Allocated with name '_tancotf_n_1_1'
                            121 ;sloc0                     Allocated with name '_tancotf_sloc0_1_0'
                            122 ;------------------------------------------------------------
                            123 ;	tancotf.c:42: float tancotf(const float x, const int iscotan)
                            124 ;	-----------------------------------------
                            125 ;	 function tancotf
                            126 ;	-----------------------------------------
   0000                     127 _tancotf:
                    0002    128 	ar2 = 0x02
                    0003    129 	ar3 = 0x03
                    0004    130 	ar4 = 0x04
                    0005    131 	ar5 = 0x05
                    0006    132 	ar6 = 0x06
                    0007    133 	ar7 = 0x07
                    0000    134 	ar0 = 0x00
                    0001    135 	ar1 = 0x01
   0000 AA 82               136 	mov	r2,dpl
   0002 AB 83               137 	mov	r3,dph
   0004 AC 93               138 	mov	r4,dpx
   0006 AD F0               139 	mov	r5,b
                            140 ;	tancotf.c:47: if (fabsf(x) > YMAX)
   0008 C0 02               141 	push	ar2
   000A C0 03               142 	push	ar3
   000C C0 04               143 	push	ar4
   000E C0 05               144 	push	ar5
   0010 8A 82               145 	mov	dpl,r2
   0012 8B 83               146 	mov	dph,r3
   0014 8C 93               147 	mov	dpx,r4
   0016 8D F0               148 	mov	b,r5
   0018 12s00r00r00         149 	lcall	_fabsf
   001C AE 82               150 	mov	r6,dpl
   001E AF 83               151 	mov	r7,dph
   0020 A8 93               152 	mov	r0,dpx
   0022 A9 F0               153 	mov	r1,b
   0024 D0 05               154 	pop	ar5
   0026 D0 04               155 	pop	ar4
   0028 D0 03               156 	pop	ar3
   002A D0 02               157 	pop	ar2
                            158 ;	genAssign: resultIsFar = TRUE
   002C 90s00r00r00         159 	mov	dptr,#___fsgt_PARM_2
   0030 E4                  160 	clr  a
   0031 F0                  161 	movx	@dptr,a
   0032 A3                  162 	inc	dptr
   0033 74 08               163 	mov	a,#0x08
   0035 F0                  164 	movx	@dptr,a
   0036 A3                  165 	inc	dptr
   0037 74 C9               166 	mov	a,#0xC9
   0039 F0                  167 	movx	@dptr,a
   003A A3                  168 	inc	dptr
   003B 74 45               169 	mov	a,#0x45
   003D F0                  170 	movx	@dptr,a
   003E C0 02               171 	push	ar2
   0040 C0 03               172 	push	ar3
   0042 C0 04               173 	push	ar4
   0044 C0 05               174 	push	ar5
   0046 8E 82               175 	mov	dpl,r6
   0048 8F 83               176 	mov	dph,r7
   004A 88 93               177 	mov	dpx,r0
   004C 89 F0               178 	mov	b,r1
   004E 12s00r00r00         179 	lcall	___fsgt
   0052 D0 05               180 	pop	ar5
   0054 D0 04               181 	pop	ar4
   0056 D0 03               182 	pop	ar3
   0058 D0 02               183 	pop	ar2
   005A E5 82               184 	mov	a,dpl
   005C 60 15               185 	jz  00102$
   005E                     186 00125$:
                            187 ;	tancotf.c:49: errno = ERANGE;
                            188 ;	genAssign: resultIsFar = TRUE
   005E 90s00r00r00         189 	mov	dptr,#_errno
   0062 74 22               190 	mov	a,#0x22
   0064 F0                  191 	movx	@dptr,a
   0065 E4                  192 	clr	a
   0066 A3                  193 	inc	dptr
   0067 F0                  194 	movx	@dptr,a
                            195 ;	tancotf.c:50: return 0.0;
   0068 90 00 00 00         196 	mov  dptr,#0x0000
   006C 75 F0 00            197 	mov	b,#0x00
   006F 02s00r06r35         198 	ljmp	00115$
   0073                     199 00102$:
                            200 ;	tancotf.c:54: n=(x*TWO_O_PI+(x>0.0?0.5:-0.5)); /*works for +-x*/
                            201 ;	genAssign: resultIsFar = TRUE
   0073 90s00r00r00         202 	mov	dptr,#___fsmul_PARM_2
   0077 EA                  203 	mov	a,r2
   0078 F0                  204 	movx	@dptr,a
   0079 A3                  205 	inc	dptr
   007A EB                  206 	mov	a,r3
   007B F0                  207 	movx	@dptr,a
   007C A3                  208 	inc	dptr
   007D EC                  209 	mov	a,r4
   007E F0                  210 	movx	@dptr,a
   007F A3                  211 	inc	dptr
   0080 ED                  212 	mov	a,r5
   0081 F0                  213 	movx	@dptr,a
   0082 C0 02               214 	push	ar2
   0084 C0 03               215 	push	ar3
   0086 C0 04               216 	push	ar4
   0088 C0 05               217 	push	ar5
   008A 90 22 F9 83         218 	mov	dptr,#0x22F983
   008E 75 F0 3F            219 	mov	b,#0x3F
   0091 12s00r00r00         220 	lcall	___fsmul
   0095 AE 82               221 	mov	r6,dpl
   0097 AF 83               222 	mov	r7,dph
   0099 A8 93               223 	mov	r0,dpx
   009B A9 F0               224 	mov	r1,b
   009D D0 05               225 	pop	ar5
   009F D0 04               226 	pop	ar4
   00A1 D0 03               227 	pop	ar3
   00A3 D0 02               228 	pop	ar2
                            229 ;	genAssign: resultIsFar = TRUE
   00A5 90s00r00r00         230 	mov	dptr,#___fsgt_PARM_2
   00A9 E4                  231 	clr  a
   00AA F0                  232 	movx @dptr,a
   00AB A3                  233 	inc  dptr
   00AC F0                  234 	movx @dptr,a
   00AD A3                  235 	inc	dptr
   00AE E4                  236 	clr  a
   00AF F0                  237 	movx @dptr,a
   00B0 A3                  238 	inc  dptr
   00B1 F0                  239 	movx @dptr,a
   00B2 C0 02               240 	push	ar2
   00B4 C0 03               241 	push	ar3
   00B6 C0 04               242 	push	ar4
   00B8 C0 05               243 	push	ar5
   00BA C0 06               244 	push	ar6
   00BC C0 07               245 	push	ar7
   00BE C0 00               246 	push	ar0
   00C0 C0 01               247 	push	ar1
   00C2 8A 82               248 	mov	dpl,r2
   00C4 8B 83               249 	mov	dph,r3
   00C6 8C 93               250 	mov	dpx,r4
   00C8 8D F0               251 	mov	b,r5
   00CA 12s00r00r00         252 	lcall	___fsgt
   00CE D0 01               253 	pop	ar1
   00D0 D0 00               254 	pop	ar0
   00D2 D0 07               255 	pop	ar7
   00D4 D0 06               256 	pop	ar6
   00D6 D0 05               257 	pop	ar5
   00D8 D0 04               258 	pop	ar4
   00DA D0 03               259 	pop	ar3
   00DC D0 02               260 	pop	ar2
   00DE E5 82               261 	mov	a,dpl
   00E0 60 11               262 	jz  00117$
   00E2                     263 00126$:
                            264 ;	genAssign: resultIsFar = TRUE
   00E2 90s00r00r14         265 	mov	dptr,#_tancotf_sloc0_1_0
   00E6 E4                  266 	clr  a
   00E7 F0                  267 	movx @dptr,a
   00E8 A3                  268 	inc  dptr
   00E9 F0                  269 	movx @dptr,a
   00EA A3                  270 	inc	dptr
   00EB E4                  271 	clr  a
   00EC F0                  272 	movx	@dptr,a
   00ED A3                  273 	inc	dptr
   00EE 74 3F               274 	mov	a,#0x3F
   00F0 F0                  275 	movx	@dptr,a
   00F1 80 0F               276 	sjmp 00118$
   00F3                     277 00117$:
                            278 ;	genAssign: resultIsFar = TRUE
   00F3 90s00r00r14         279 	mov	dptr,#_tancotf_sloc0_1_0
   00F7 E4                  280 	clr  a
   00F8 F0                  281 	movx @dptr,a
   00F9 A3                  282 	inc  dptr
   00FA F0                  283 	movx @dptr,a
   00FB A3                  284 	inc	dptr
   00FC E4                  285 	clr  a
   00FD F0                  286 	movx	@dptr,a
   00FE A3                  287 	inc	dptr
   00FF 74 BF               288 	mov	a,#0xBF
   0101 F0                  289 	movx	@dptr,a
   0102                     290 00118$:
   0102 90s00r00r14         291 	mov	dptr,#_tancotf_sloc0_1_0
                            292 ;	genAssign: resultIsFar = TRUE
   0106 75 86 21            293 	mov	dps,#0x21
   0109 90s00r00r00         294 	mov	dptr,#___fsadd_PARM_2
   010D E0                  295 	movx	a,@dptr
   010E F0                  296 	movx	@dptr,a
   010F A3                  297 	inc	dptr
   0110 A3                  298 	inc	dptr
   0111 E0                  299 	movx	a,@dptr
   0112 F0                  300 	movx	@dptr,a
   0113 A3                  301 	inc	dptr
   0114 A3                  302 	inc	dptr
   0115 E0                  303 	movx	a,@dptr
   0116 F0                  304 	movx	@dptr,a
   0117 A3                  305 	inc	dptr
   0118 A3                  306 	inc	dptr
   0119 E0                  307 	movx	a,@dptr
   011A F0                  308 	movx	@dptr,a
   011B 75 86 00            309 	mov	dps,#0
   011E C0 02               310 	push	ar2
   0120 C0 03               311 	push	ar3
   0122 C0 04               312 	push	ar4
   0124 C0 05               313 	push	ar5
   0126 8E 82               314 	mov	dpl,r6
   0128 8F 83               315 	mov	dph,r7
   012A 88 93               316 	mov	dpx,r0
   012C 89 F0               317 	mov	b,r1
   012E 12s00r00r00         318 	lcall	___fsadd
   0132 D0 05               319 	pop	ar5
   0134 D0 04               320 	pop	ar4
   0136 D0 03               321 	pop	ar3
   0138 D0 02               322 	pop	ar2
   013A C0 02               323 	push	ar2
   013C C0 03               324 	push	ar3
   013E C0 04               325 	push	ar4
   0140 C0 05               326 	push	ar5
   0142 12s00r00r00         327 	lcall	___fs2sint
   0146 AE 82               328 	mov	r6,dpl
   0148 AF 83               329 	mov	r7,dph
   014A D0 05               330 	pop	ar5
   014C D0 04               331 	pop	ar4
   014E D0 03               332 	pop	ar3
   0150 D0 02               333 	pop	ar2
                            334 ;	genAssign: resultIsFar = TRUE
   0152 90s00r00r12         335 	mov	dptr,#_tancotf_n_1_1
   0156 EE                  336 	mov	a,r6
   0157 F0                  337 	movx	@dptr,a
   0158 A3                  338 	inc	dptr
   0159 EF                  339 	mov	a,r7
   015A F0                  340 	movx	@dptr,a
                            341 ;	tancotf.c:55: xn=n;
   015B C0 02               342 	push	ar2
   015D C0 03               343 	push	ar3
   015F C0 04               344 	push	ar4
   0161 C0 05               345 	push	ar5
   0163 05 86               346 	inc	dps
   0165 90s00r00r12         347 	mov	dptr,#_tancotf_n_1_1
   0169 E0                  348 	movx	a,@dptr
   016A F5 82               349 	mov	dpl,a
   016C A3                  350 	inc	dptr
   016D E0                  351 	movx	a,@dptr
   016E F5 83               352 	mov	dph,a
   0170 75 86 00            353 	mov	dps,#0
   0173 12s00r00r00         354 	lcall	___sint2fs
   0177 A8 82               355 	mov	r0,dpl
   0179 A9 83               356 	mov	r1,dph
   017B AE 93               357 	mov	r6,dpx
   017D AF F0               358 	mov	r7,b
   017F D0 05               359 	pop	ar5
   0181 D0 04               360 	pop	ar4
   0183 D0 03               361 	pop	ar3
   0185 D0 02               362 	pop	ar2
                            363 ;	genAssign: resultIsFar = TRUE
   0187 90s00r00r0A         364 	mov	dptr,#_tancotf_xn_1_1
   018B E8                  365 	mov	a,r0
   018C F0                  366 	movx	@dptr,a
   018D A3                  367 	inc	dptr
   018E E9                  368 	mov	a,r1
   018F F0                  369 	movx	@dptr,a
   0190 A3                  370 	inc	dptr
   0191 EE                  371 	mov	a,r6
   0192 F0                  372 	movx	@dptr,a
   0193 A3                  373 	inc	dptr
   0194 EF                  374 	mov	a,r7
   0195 F0                  375 	movx	@dptr,a
                            376 ;	tancotf.c:57: xnum=(int)x;
   0196 C0 02               377 	push	ar2
   0198 C0 03               378 	push	ar3
   019A C0 04               379 	push	ar4
   019C C0 05               380 	push	ar5
   019E 8A 82               381 	mov	dpl,r2
   01A0 8B 83               382 	mov	dph,r3
   01A2 8C 93               383 	mov	dpx,r4
   01A4 8D F0               384 	mov	b,r5
   01A6 12s00r00r00         385 	lcall	___fs2sint
   01AA D0 05               386 	pop	ar5
   01AC D0 04               387 	pop	ar4
   01AE D0 03               388 	pop	ar3
   01B0 D0 02               389 	pop	ar2
   01B2 C0 02               390 	push	ar2
   01B4 C0 03               391 	push	ar3
   01B6 C0 04               392 	push	ar4
   01B8 C0 05               393 	push	ar5
   01BA 12s00r00r00         394 	lcall	___sint2fs
   01BE AE 82               395 	mov	r6,dpl
   01C0 AF 83               396 	mov	r7,dph
   01C2 A8 93               397 	mov	r0,dpx
   01C4 A9 F0               398 	mov	r1,b
   01C6 D0 05               399 	pop	ar5
   01C8 D0 04               400 	pop	ar4
   01CA D0 03               401 	pop	ar3
   01CC D0 02               402 	pop	ar2
                            403 ;	genAssign: resultIsFar = TRUE
                            404 ;	tancotf.c:58: xden=x-xnum;
                            405 ;	genAssign: resultIsFar = TRUE
   01CE 90s00r00r00         406 	mov	dptr,#___fssub_PARM_2
   01D2 EE                  407 	mov	a,r6
   01D3 F0                  408 	movx	@dptr,a
   01D4 A3                  409 	inc	dptr
   01D5 EF                  410 	mov	a,r7
   01D6 F0                  411 	movx	@dptr,a
   01D7 A3                  412 	inc	dptr
   01D8 E8                  413 	mov	a,r0
   01D9 F0                  414 	movx	@dptr,a
   01DA A3                  415 	inc	dptr
   01DB E9                  416 	mov	a,r1
   01DC F0                  417 	movx	@dptr,a
   01DD C0 06               418 	push	ar6
   01DF C0 07               419 	push	ar7
   01E1 C0 00               420 	push	ar0
   01E3 C0 01               421 	push	ar1
   01E5 8A 82               422 	mov	dpl,r2
   01E7 8B 83               423 	mov	dph,r3
   01E9 8C 93               424 	mov	dpx,r4
   01EB 8D F0               425 	mov	b,r5
   01ED 12s00r00r00         426 	lcall	___fssub
   01F1 AA 82               427 	mov	r2,dpl
   01F3 AB 83               428 	mov	r3,dph
   01F5 AC 93               429 	mov	r4,dpx
   01F7 AD F0               430 	mov	r5,b
   01F9 D0 01               431 	pop	ar1
   01FB D0 00               432 	pop	ar0
   01FD D0 07               433 	pop	ar7
   01FF D0 06               434 	pop	ar6
                            435 ;	genAssign: resultIsFar = TRUE
   0201 90s00r00r0E         436 	mov	dptr,#_tancotf_xden_1_1
   0205 EA                  437 	mov	a,r2
   0206 F0                  438 	movx	@dptr,a
   0207 A3                  439 	inc	dptr
   0208 EB                  440 	mov	a,r3
   0209 F0                  441 	movx	@dptr,a
   020A A3                  442 	inc	dptr
   020B EC                  443 	mov	a,r4
   020C F0                  444 	movx	@dptr,a
   020D A3                  445 	inc	dptr
   020E ED                  446 	mov	a,r5
   020F F0                  447 	movx	@dptr,a
                            448 ;	tancotf.c:59: f=((xnum-xn*C1)+xden)-xn*C2;
   0210 90s00r00r0A         449 	mov	dptr,#_tancotf_xn_1_1
                            450 ;	genAssign: resultIsFar = TRUE
   0214 75 86 21            451 	mov	dps,#0x21
   0217 90s00r00r00         452 	mov	dptr,#___fsmul_PARM_2
   021B E0                  453 	movx	a,@dptr
   021C F0                  454 	movx	@dptr,a
   021D A3                  455 	inc	dptr
   021E A3                  456 	inc	dptr
   021F E0                  457 	movx	a,@dptr
   0220 F0                  458 	movx	@dptr,a
   0221 A3                  459 	inc	dptr
   0222 A3                  460 	inc	dptr
   0223 E0                  461 	movx	a,@dptr
   0224 F0                  462 	movx	@dptr,a
   0225 A3                  463 	inc	dptr
   0226 A3                  464 	inc	dptr
   0227 E0                  465 	movx	a,@dptr
   0228 F0                  466 	movx	@dptr,a
   0229 75 86 00            467 	mov	dps,#0
   022C C0 06               468 	push	ar6
   022E C0 07               469 	push	ar7
   0230 C0 00               470 	push	ar0
   0232 C0 01               471 	push	ar1
   0234 90 00 00 00         472 	mov  dptr,#0x0000
   0238 75 93 C9            473 	mov	dpx,#0xC9
   023B 75 F0 3F            474 	mov	b,#0x3F
   023E 12s00r00r00         475 	lcall	___fsmul
   0242 AA 82               476 	mov	r2,dpl
   0244 AB 83               477 	mov	r3,dph
   0246 AC 93               478 	mov	r4,dpx
   0248 AD F0               479 	mov	r5,b
   024A D0 01               480 	pop	ar1
   024C D0 00               481 	pop	ar0
   024E D0 07               482 	pop	ar7
   0250 D0 06               483 	pop	ar6
                            484 ;	genAssign: resultIsFar = TRUE
   0252 90s00r00r00         485 	mov	dptr,#___fssub_PARM_2
   0256 EA                  486 	mov	a,r2
   0257 F0                  487 	movx	@dptr,a
   0258 A3                  488 	inc	dptr
   0259 EB                  489 	mov	a,r3
   025A F0                  490 	movx	@dptr,a
   025B A3                  491 	inc	dptr
   025C EC                  492 	mov	a,r4
   025D F0                  493 	movx	@dptr,a
   025E A3                  494 	inc	dptr
   025F ED                  495 	mov	a,r5
   0260 F0                  496 	movx	@dptr,a
   0261 8E 82               497 	mov	dpl,r6
   0263 8F 83               498 	mov	dph,r7
   0265 88 93               499 	mov	dpx,r0
   0267 89 F0               500 	mov	b,r1
   0269 12s00r00r00         501 	lcall	___fssub
   026D AA 82               502 	mov	r2,dpl
   026F AB 83               503 	mov	r3,dph
   0271 AC 93               504 	mov	r4,dpx
   0273 AD F0               505 	mov	r5,b
   0275 90s00r00r0E         506 	mov	dptr,#_tancotf_xden_1_1
                            507 ;	genAssign: resultIsFar = TRUE
   0279 75 86 21            508 	mov	dps,#0x21
   027C 90s00r00r00         509 	mov	dptr,#___fsadd_PARM_2
   0280 E0                  510 	movx	a,@dptr
   0281 F0                  511 	movx	@dptr,a
   0282 A3                  512 	inc	dptr
   0283 A3                  513 	inc	dptr
   0284 E0                  514 	movx	a,@dptr
   0285 F0                  515 	movx	@dptr,a
   0286 A3                  516 	inc	dptr
   0287 A3                  517 	inc	dptr
   0288 E0                  518 	movx	a,@dptr
   0289 F0                  519 	movx	@dptr,a
   028A A3                  520 	inc	dptr
   028B A3                  521 	inc	dptr
   028C E0                  522 	movx	a,@dptr
   028D F0                  523 	movx	@dptr,a
   028E 75 86 00            524 	mov	dps,#0
   0291 8A 82               525 	mov	dpl,r2
   0293 8B 83               526 	mov	dph,r3
   0295 8C 93               527 	mov	dpx,r4
   0297 8D F0               528 	mov	b,r5
   0299 12s00r00r00         529 	lcall	___fsadd
   029D AE 82               530 	mov	r6,dpl
   029F AF 83               531 	mov	r7,dph
   02A1 A8 93               532 	mov	r0,dpx
   02A3 A9 F0               533 	mov	r1,b
   02A5 90s00r00r0A         534 	mov	dptr,#_tancotf_xn_1_1
                            535 ;	genAssign: resultIsFar = TRUE
   02A9 75 86 21            536 	mov	dps,#0x21
   02AC 90s00r00r00         537 	mov	dptr,#___fsmul_PARM_2
   02B0 E0                  538 	movx	a,@dptr
   02B1 F0                  539 	movx	@dptr,a
   02B2 A3                  540 	inc	dptr
   02B3 A3                  541 	inc	dptr
   02B4 E0                  542 	movx	a,@dptr
   02B5 F0                  543 	movx	@dptr,a
   02B6 A3                  544 	inc	dptr
   02B7 A3                  545 	inc	dptr
   02B8 E0                  546 	movx	a,@dptr
   02B9 F0                  547 	movx	@dptr,a
   02BA A3                  548 	inc	dptr
   02BB A3                  549 	inc	dptr
   02BC E0                  550 	movx	a,@dptr
   02BD F0                  551 	movx	@dptr,a
   02BE 75 86 00            552 	mov	dps,#0
   02C1 C0 06               553 	push	ar6
   02C3 C0 07               554 	push	ar7
   02C5 C0 00               555 	push	ar0
   02C7 C0 01               556 	push	ar1
   02C9 90 FD AA 22         557 	mov	dptr,#0xFDAA22
   02CD 75 F0 39            558 	mov	b,#0x39
   02D0 12s00r00r00         559 	lcall	___fsmul
   02D4 AA 82               560 	mov	r2,dpl
   02D6 AB 83               561 	mov	r3,dph
   02D8 AC 93               562 	mov	r4,dpx
   02DA AD F0               563 	mov	r5,b
   02DC D0 01               564 	pop	ar1
   02DE D0 00               565 	pop	ar0
   02E0 D0 07               566 	pop	ar7
   02E2 D0 06               567 	pop	ar6
                            568 ;	genAssign: resultIsFar = TRUE
   02E4 90s00r00r00         569 	mov	dptr,#___fssub_PARM_2
   02E8 EA                  570 	mov	a,r2
   02E9 F0                  571 	movx	@dptr,a
   02EA A3                  572 	inc	dptr
   02EB EB                  573 	mov	a,r3
   02EC F0                  574 	movx	@dptr,a
   02ED A3                  575 	inc	dptr
   02EE EC                  576 	mov	a,r4
   02EF F0                  577 	movx	@dptr,a
   02F0 A3                  578 	inc	dptr
   02F1 ED                  579 	mov	a,r5
   02F2 F0                  580 	movx	@dptr,a
   02F3 8E 82               581 	mov	dpl,r6
   02F5 8F 83               582 	mov	dph,r7
   02F7 88 93               583 	mov	dpx,r0
   02F9 89 F0               584 	mov	b,r1
   02FB 12s00r00r00         585 	lcall	___fssub
   02FF AA 82               586 	mov	r2,dpl
   0301 AB 83               587 	mov	r3,dph
   0303 AC 93               588 	mov	r4,dpx
   0305 AD F0               589 	mov	r5,b
                            590 ;	genAssign: resultIsFar = TRUE
   0307 90s00r00r02         591 	mov	dptr,#_tancotf_f_1_1
   030B EA                  592 	mov	a,r2
   030C F0                  593 	movx	@dptr,a
   030D A3                  594 	inc	dptr
   030E EB                  595 	mov	a,r3
   030F F0                  596 	movx	@dptr,a
   0310 A3                  597 	inc	dptr
   0311 EC                  598 	mov	a,r4
   0312 F0                  599 	movx	@dptr,a
   0313 A3                  600 	inc	dptr
   0314 ED                  601 	mov	a,r5
   0315 F0                  602 	movx	@dptr,a
                            603 ;	tancotf.c:61: if (fabsf(f) < EPS)
   0316 05 86               604 	inc	dps
   0318 90s00r00r02         605 	mov	dptr,#_tancotf_f_1_1
   031C E0                  606 	movx	a,@dptr
   031D F5 82               607 	mov	dpl,a
   031F A3                  608 	inc	dptr
   0320 E0                  609 	movx	a,@dptr
   0321 F5 83               610 	mov	dph,a
   0323 A3                  611 	inc	dptr
   0324 E0                  612 	movx	a,@dptr
   0325 F5 93               613 	mov	dpx,a
   0327 A3                  614 	inc	dptr
   0328 E0                  615 	movx	a,@dptr
   0329 F5 F0               616 	mov	b,a
   032B 75 86 00            617 	mov	dps,#0
   032E 12s00r00r00         618 	lcall	_fabsf
   0332 AA 82               619 	mov	r2,dpl
   0334 AB 83               620 	mov	r3,dph
   0336 AC 93               621 	mov	r4,dpx
   0338 AD F0               622 	mov	r5,b
                            623 ;	genAssign: resultIsFar = TRUE
   033A 90s00r00r00         624 	mov	dptr,#___fslt_PARM_2
   033E E4                  625 	clr  a
   033F F0                  626 	movx @dptr,a
   0340 A3                  627 	inc  dptr
   0341 F0                  628 	movx @dptr,a
   0342 A3                  629 	inc	dptr
   0343 74 80               630 	mov	a,#0x80
   0345 F0                  631 	movx	@dptr,a
   0346 A3                  632 	inc	dptr
   0347 74 39               633 	mov	a,#0x39
   0349 F0                  634 	movx	@dptr,a
   034A 8A 82               635 	mov	dpl,r2
   034C 8B 83               636 	mov	dph,r3
   034E 8C 93               637 	mov	dpx,r4
   0350 8D F0               638 	mov	b,r5
   0352 12s00r00r00         639 	lcall	___fslt
   0356 E5 82               640 	mov	a,dpl
   0358 60 23               641 	jz  00104$
   035A                     642 00127$:
                            643 ;	tancotf.c:63: xnum = f;
   035A 90s00r00r02         644 	mov	dptr,#_tancotf_f_1_1
                            645 ;	genAssign: resultIsFar = TRUE
   035E E0                  646 	movx	a,@dptr
   035F FE                  647 	mov	r6,a
   0360 A3                  648 	inc	dptr
   0361 E0                  649 	movx	a,@dptr
   0362 FF                  650 	mov	r7,a
   0363 A3                  651 	inc	dptr
   0364 E0                  652 	movx	a,@dptr
   0365 F8                  653 	mov	r0,a
   0366 A3                  654 	inc	dptr
   0367 E0                  655 	movx	a,@dptr
   0368 F9                  656 	mov	r1,a
                            657 ;	tancotf.c:64: xden = 1.0;
                            658 ;	genAssign: resultIsFar = TRUE
   0369 90s00r00r0E         659 	mov	dptr,#_tancotf_xden_1_1
   036D E4                  660 	clr  a
   036E F0                  661 	movx @dptr,a
   036F A3                  662 	inc  dptr
   0370 F0                  663 	movx @dptr,a
   0371 A3                  664 	inc	dptr
   0372 74 80               665 	mov	a,#0x80
   0374 F0                  666 	movx	@dptr,a
   0375 A3                  667 	inc	dptr
   0376 74 3F               668 	mov	a,#0x3F
   0378 F0                  669 	movx	@dptr,a
   0379 02s00r05r5A         670 	ljmp	00105$
   037D                     671 00104$:
                            672 ;	tancotf.c:68: g = f*f;
   037D 90s00r00r02         673 	mov	dptr,#_tancotf_f_1_1
                            674 ;	genAssign: resultIsFar = TRUE
   0381 75 86 21            675 	mov	dps,#0x21
   0384 90s00r00r00         676 	mov	dptr,#___fsmul_PARM_2
   0388 E0                  677 	movx	a,@dptr
   0389 F0                  678 	movx	@dptr,a
   038A A3                  679 	inc	dptr
   038B A3                  680 	inc	dptr
   038C E0                  681 	movx	a,@dptr
   038D F0                  682 	movx	@dptr,a
   038E A3                  683 	inc	dptr
   038F A3                  684 	inc	dptr
   0390 E0                  685 	movx	a,@dptr
   0391 F0                  686 	movx	@dptr,a
   0392 A3                  687 	inc	dptr
   0393 A3                  688 	inc	dptr
   0394 E0                  689 	movx	a,@dptr
   0395 F0                  690 	movx	@dptr,a
   0396 75 86 01            691 	mov	dps, #1
   0399 90s00r00r02         692 	mov	dptr,#_tancotf_f_1_1
   039D E0                  693 	movx	a,@dptr
   039E F5 82               694 	mov	dpl,a
   03A0 A3                  695 	inc	dptr
   03A1 E0                  696 	movx	a,@dptr
   03A2 F5 83               697 	mov	dph,a
   03A4 A3                  698 	inc	dptr
   03A5 E0                  699 	movx	a,@dptr
   03A6 F5 93               700 	mov	dpx,a
   03A8 A3                  701 	inc	dptr
   03A9 E0                  702 	movx	a,@dptr
   03AA F5 F0               703 	mov	b,a
   03AC 75 86 00            704 	mov	dps,#0
   03AF 12s00r00r00         705 	lcall	___fsmul
   03B3 AA 82               706 	mov	r2,dpl
   03B5 AB 83               707 	mov	r3,dph
   03B7 AC 93               708 	mov	r4,dpx
   03B9 AD F0               709 	mov	r5,b
                            710 ;	genAssign: resultIsFar = TRUE
   03BB 90s00r00r06         711 	mov	dptr,#_tancotf_g_1_1
   03BF EA                  712 	mov	a,r2
   03C0 F0                  713 	movx	@dptr,a
   03C1 A3                  714 	inc	dptr
   03C2 EB                  715 	mov	a,r3
   03C3 F0                  716 	movx	@dptr,a
   03C4 A3                  717 	inc	dptr
   03C5 EC                  718 	mov	a,r4
   03C6 F0                  719 	movx	@dptr,a
   03C7 A3                  720 	inc	dptr
   03C8 ED                  721 	mov	a,r5
   03C9 F0                  722 	movx	@dptr,a
                            723 ;	tancotf.c:69: xnum = P(f,g);
   03CA 90s00r00r06         724 	mov	dptr,#_tancotf_g_1_1
                            725 ;	genAssign: resultIsFar = TRUE
   03CE 75 86 21            726 	mov	dps,#0x21
   03D1 90s00r00r00         727 	mov	dptr,#___fsmul_PARM_2
   03D5 E0                  728 	movx	a,@dptr
   03D6 F0                  729 	movx	@dptr,a
   03D7 A3                  730 	inc	dptr
   03D8 A3                  731 	inc	dptr
   03D9 E0                  732 	movx	a,@dptr
   03DA F0                  733 	movx	@dptr,a
   03DB A3                  734 	inc	dptr
   03DC A3                  735 	inc	dptr
   03DD E0                  736 	movx	a,@dptr
   03DE F0                  737 	movx	@dptr,a
   03DF A3                  738 	inc	dptr
   03E0 A3                  739 	inc	dptr
   03E1 E0                  740 	movx	a,@dptr
   03E2 F0                  741 	movx	@dptr,a
   03E3 75 86 00            742 	mov	dps,#0
   03E6 90 C4 33 B8         743 	mov	dptr,#0xC433B8
   03EA 75 F0 BD            744 	mov	b,#0xBD
   03ED 12s00r00r00         745 	lcall	___fsmul
   03F1 AA 82               746 	mov	r2,dpl
   03F3 AB 83               747 	mov	r3,dph
   03F5 AC 93               748 	mov	r4,dpx
   03F7 AD F0               749 	mov	r5,b
   03F9 90s00r00r02         750 	mov	dptr,#_tancotf_f_1_1
                            751 ;	genAssign: resultIsFar = TRUE
   03FD 75 86 21            752 	mov	dps,#0x21
   0400 90s00r00r00         753 	mov	dptr,#___fsmul_PARM_2
   0404 E0                  754 	movx	a,@dptr
   0405 F0                  755 	movx	@dptr,a
   0406 A3                  756 	inc	dptr
   0407 A3                  757 	inc	dptr
   0408 E0                  758 	movx	a,@dptr
   0409 F0                  759 	movx	@dptr,a
   040A A3                  760 	inc	dptr
   040B A3                  761 	inc	dptr
   040C E0                  762 	movx	a,@dptr
   040D F0                  763 	movx	@dptr,a
   040E A3                  764 	inc	dptr
   040F A3                  765 	inc	dptr
   0410 E0                  766 	movx	a,@dptr
   0411 F0                  767 	movx	@dptr,a
   0412 75 86 00            768 	mov	dps,#0
   0415 8A 82               769 	mov	dpl,r2
   0417 8B 83               770 	mov	dph,r3
   0419 8C 93               771 	mov	dpx,r4
   041B 8D F0               772 	mov	b,r5
   041D 12s00r00r00         773 	lcall	___fsmul
   0421 AA 82               774 	mov	r2,dpl
   0423 AB 83               775 	mov	r3,dph
   0425 AC 93               776 	mov	r4,dpx
   0427 AD F0               777 	mov	r5,b
   0429 90s00r00r02         778 	mov	dptr,#_tancotf_f_1_1
                            779 ;	genAssign: resultIsFar = TRUE
   042D 75 86 21            780 	mov	dps,#0x21
   0430 90s00r00r00         781 	mov	dptr,#___fsadd_PARM_2
   0434 E0                  782 	movx	a,@dptr
   0435 F0                  783 	movx	@dptr,a
   0436 A3                  784 	inc	dptr
   0437 A3                  785 	inc	dptr
   0438 E0                  786 	movx	a,@dptr
   0439 F0                  787 	movx	@dptr,a
   043A A3                  788 	inc	dptr
   043B A3                  789 	inc	dptr
   043C E0                  790 	movx	a,@dptr
   043D F0                  791 	movx	@dptr,a
   043E A3                  792 	inc	dptr
   043F A3                  793 	inc	dptr
   0440 E0                  794 	movx	a,@dptr
   0441 F0                  795 	movx	@dptr,a
   0442 75 86 00            796 	mov	dps,#0
   0445 8A 82               797 	mov	dpl,r2
   0447 8B 83               798 	mov	dph,r3
   0449 8C 93               799 	mov	dpx,r4
   044B 8D F0               800 	mov	b,r5
   044D 12s00r00r00         801 	lcall	___fsadd
   0451 AA 82               802 	mov	r2,dpl
   0453 AB 83               803 	mov	r3,dph
   0455 AC 93               804 	mov	r4,dpx
   0457 AD F0               805 	mov	r5,b
                            806 ;	genAssign: resultIsFar = TRUE
   0459 8A 06               807 	mov	ar6,r2
   045B 8B 07               808 	mov	ar7,r3
   045D 8C 00               809 	mov	ar0,r4
   045F 8D 01               810 	mov	ar1,r5
                            811 ;	tancotf.c:70: xden = Q(g);
   0461 90s00r00r06         812 	mov	dptr,#_tancotf_g_1_1
                            813 ;	genAssign: resultIsFar = TRUE
   0465 75 86 21            814 	mov	dps,#0x21
   0468 90s00r00r00         815 	mov	dptr,#___fsmul_PARM_2
   046C E0                  816 	movx	a,@dptr
   046D F0                  817 	movx	@dptr,a
   046E A3                  818 	inc	dptr
   046F A3                  819 	inc	dptr
   0470 E0                  820 	movx	a,@dptr
   0471 F0                  821 	movx	@dptr,a
   0472 A3                  822 	inc	dptr
   0473 A3                  823 	inc	dptr
   0474 E0                  824 	movx	a,@dptr
   0475 F0                  825 	movx	@dptr,a
   0476 A3                  826 	inc	dptr
   0477 A3                  827 	inc	dptr
   0478 E0                  828 	movx	a,@dptr
   0479 F0                  829 	movx	@dptr,a
   047A 75 86 00            830 	mov	dps,#0
   047D C0 06               831 	push	ar6
   047F C0 07               832 	push	ar7
   0481 C0 00               833 	push	ar0
   0483 C0 01               834 	push	ar1
   0485 90 1F 33 75         835 	mov	dptr,#0x1F3375
   0489 75 F0 3C            836 	mov	b,#0x3C
   048C 12s00r00r00         837 	lcall	___fsmul
   0490 AA 82               838 	mov	r2,dpl
   0492 AB 83               839 	mov	r3,dph
   0494 AC 93               840 	mov	r4,dpx
   0496 AD F0               841 	mov	r5,b
   0498 D0 01               842 	pop	ar1
   049A D0 00               843 	pop	ar0
   049C D0 07               844 	pop	ar7
   049E D0 06               845 	pop	ar6
                            846 ;	genAssign: resultIsFar = TRUE
   04A0 90s00r00r00         847 	mov	dptr,#___fsadd_PARM_2
   04A4 74 AF               848 	mov	a,#0xAF
   04A6 F0                  849 	movx	@dptr,a
   04A7 A3                  850 	inc	dptr
   04A8 74 B7               851 	mov	a,#0xB7
   04AA F0                  852 	movx	@dptr,a
   04AB A3                  853 	inc	dptr
   04AC 74 DB               854 	mov	a,#0xDB
   04AE F0                  855 	movx	@dptr,a
   04AF A3                  856 	inc	dptr
   04B0 74 BE               857 	mov	a,#0xBE
   04B2 F0                  858 	movx	@dptr,a
   04B3 C0 06               859 	push	ar6
   04B5 C0 07               860 	push	ar7
   04B7 C0 00               861 	push	ar0
   04B9 C0 01               862 	push	ar1
   04BB 8A 82               863 	mov	dpl,r2
   04BD 8B 83               864 	mov	dph,r3
   04BF 8C 93               865 	mov	dpx,r4
   04C1 8D F0               866 	mov	b,r5
   04C3 12s00r00r00         867 	lcall	___fsadd
   04C7 AA 82               868 	mov	r2,dpl
   04C9 AB 83               869 	mov	r3,dph
   04CB AC 93               870 	mov	r4,dpx
   04CD AD F0               871 	mov	r5,b
   04CF D0 01               872 	pop	ar1
   04D1 D0 00               873 	pop	ar0
   04D3 D0 07               874 	pop	ar7
   04D5 D0 06               875 	pop	ar6
   04D7 90s00r00r06         876 	mov	dptr,#_tancotf_g_1_1
                            877 ;	genAssign: resultIsFar = TRUE
   04DB 75 86 21            878 	mov	dps,#0x21
   04DE 90s00r00r00         879 	mov	dptr,#___fsmul_PARM_2
   04E2 E0                  880 	movx	a,@dptr
   04E3 F0                  881 	movx	@dptr,a
   04E4 A3                  882 	inc	dptr
   04E5 A3                  883 	inc	dptr
   04E6 E0                  884 	movx	a,@dptr
   04E7 F0                  885 	movx	@dptr,a
   04E8 A3                  886 	inc	dptr
   04E9 A3                  887 	inc	dptr
   04EA E0                  888 	movx	a,@dptr
   04EB F0                  889 	movx	@dptr,a
   04EC A3                  890 	inc	dptr
   04ED A3                  891 	inc	dptr
   04EE E0                  892 	movx	a,@dptr
   04EF F0                  893 	movx	@dptr,a
   04F0 75 86 00            894 	mov	dps,#0
   04F3 C0 06               895 	push	ar6
   04F5 C0 07               896 	push	ar7
   04F7 C0 00               897 	push	ar0
   04F9 C0 01               898 	push	ar1
   04FB 8A 82               899 	mov	dpl,r2
   04FD 8B 83               900 	mov	dph,r3
   04FF 8C 93               901 	mov	dpx,r4
   0501 8D F0               902 	mov	b,r5
   0503 12s00r00r00         903 	lcall	___fsmul
   0507 AA 82               904 	mov	r2,dpl
   0509 AB 83               905 	mov	r3,dph
   050B AC 93               906 	mov	r4,dpx
   050D AD F0               907 	mov	r5,b
   050F D0 01               908 	pop	ar1
   0511 D0 00               909 	pop	ar0
   0513 D0 07               910 	pop	ar7
   0515 D0 06               911 	pop	ar6
                            912 ;	genAssign: resultIsFar = TRUE
   0517 90s00r00r00         913 	mov	dptr,#___fsadd_PARM_2
   051B E4                  914 	clr  a
   051C F0                  915 	movx @dptr,a
   051D A3                  916 	inc  dptr
   051E F0                  917 	movx @dptr,a
   051F A3                  918 	inc	dptr
   0520 74 80               919 	mov	a,#0x80
   0522 F0                  920 	movx	@dptr,a
   0523 A3                  921 	inc	dptr
   0524 74 3F               922 	mov	a,#0x3F
   0526 F0                  923 	movx	@dptr,a
   0527 C0 06               924 	push	ar6
   0529 C0 07               925 	push	ar7
   052B C0 00               926 	push	ar0
   052D C0 01               927 	push	ar1
   052F 8A 82               928 	mov	dpl,r2
   0531 8B 83               929 	mov	dph,r3
   0533 8C 93               930 	mov	dpx,r4
   0535 8D F0               931 	mov	b,r5
   0537 12s00r00r00         932 	lcall	___fsadd
   053B AA 82               933 	mov	r2,dpl
   053D AB 83               934 	mov	r3,dph
   053F AC 93               935 	mov	r4,dpx
   0541 AD F0               936 	mov	r5,b
   0543 D0 01               937 	pop	ar1
   0545 D0 00               938 	pop	ar0
   0547 D0 07               939 	pop	ar7
   0549 D0 06               940 	pop	ar6
                            941 ;	genAssign: resultIsFar = TRUE
   054B 90s00r00r0E         942 	mov	dptr,#_tancotf_xden_1_1
   054F EA                  943 	mov	a,r2
   0550 F0                  944 	movx	@dptr,a
   0551 A3                  945 	inc	dptr
   0552 EB                  946 	mov	a,r3
   0553 F0                  947 	movx	@dptr,a
   0554 A3                  948 	inc	dptr
   0555 EC                  949 	mov	a,r4
   0556 F0                  950 	movx	@dptr,a
   0557 A3                  951 	inc	dptr
   0558 ED                  952 	mov	a,r5
   0559 F0                  953 	movx	@dptr,a
   055A                     954 00105$:
                            955 ;	tancotf.c:73: if(n&1)
   055A 90s00r00r12         956 	mov	dptr,#_tancotf_n_1_1
   055E E0                  957 	movx	a,@dptr
   055F 30 E0 71            958 	jnb  acc.0,00113$
   0562                     959 00128$:
                            960 ;	tancotf.c:76: if(iscotan) return (-xnum/xden);
   0562 90s00r00r00         961 	mov	dptr,#_tancotf_PARM_2
   0566 E0                  962 	movx	a,@dptr
   0567 F5 F0               963 	mov	b,a
   0569 A3                  964 	inc	dptr
   056A E0                  965 	movx	a,@dptr
   056B 45 F0               966 	orl	a,b
   056D 60 36               967 	jz  00107$
   056F                     968 00129$:
   056F 8E 02               969 	mov	ar2,r6
   0571 8F 03               970 	mov	ar3,r7
   0573 88 04               971 	mov	ar4,r0
   0575 E9                  972 	mov	a,r1
   0576 B2 E7               973 	cpl	acc.7
   0578 FD                  974 	mov	r5,a
   0579 90s00r00r0E         975 	mov	dptr,#_tancotf_xden_1_1
                            976 ;	genAssign: resultIsFar = TRUE
   057D 75 86 21            977 	mov	dps,#0x21
   0580 90s00r00r00         978 	mov	dptr,#___fsdiv_PARM_2
   0584 E0                  979 	movx	a,@dptr
   0585 F0                  980 	movx	@dptr,a
   0586 A3                  981 	inc	dptr
   0587 A3                  982 	inc	dptr
   0588 E0                  983 	movx	a,@dptr
   0589 F0                  984 	movx	@dptr,a
   058A A3                  985 	inc	dptr
   058B A3                  986 	inc	dptr
   058C E0                  987 	movx	a,@dptr
   058D F0                  988 	movx	@dptr,a
   058E A3                  989 	inc	dptr
   058F A3                  990 	inc	dptr
   0590 E0                  991 	movx	a,@dptr
   0591 F0                  992 	movx	@dptr,a
   0592 75 86 00            993 	mov	dps,#0
   0595 8A 82               994 	mov	dpl,r2
   0597 8B 83               995 	mov	dph,r3
   0599 8C 93               996 	mov	dpx,r4
   059B 8D F0               997 	mov	b,r5
   059D 12s00r00r00         998 	lcall	___fsdiv
   05A1 02s00r06r35         999 	ljmp	00115$
   05A5                    1000 00107$:
                           1001 ;	tancotf.c:77: else return (-xden/xnum);
   05A5 90s00r00r0E        1002 	mov	dptr,#_tancotf_xden_1_1
   05A9 E0                 1003 	movx	a,@dptr
   05AA FA                 1004 	mov	r2,a
   05AB A3                 1005 	inc	dptr
   05AC E0                 1006 	movx	a,@dptr
   05AD FB                 1007 	mov	r3,a
   05AE A3                 1008 	inc	dptr
   05AF E0                 1009 	movx	a,@dptr
   05B0 FC                 1010 	mov	r4,a
   05B1 A3                 1011 	inc	dptr
   05B2 E0                 1012 	movx	a,@dptr
   05B3 B2 E7              1013 	cpl	acc.7
   05B5 FD                 1014 	mov	r5,a
                           1015 ;	genAssign: resultIsFar = TRUE
   05B6 90s00r00r00        1016 	mov	dptr,#___fsdiv_PARM_2
   05BA EE                 1017 	mov	a,r6
   05BB F0                 1018 	movx	@dptr,a
   05BC A3                 1019 	inc	dptr
   05BD EF                 1020 	mov	a,r7
   05BE F0                 1021 	movx	@dptr,a
   05BF A3                 1022 	inc	dptr
   05C0 E8                 1023 	mov	a,r0
   05C1 F0                 1024 	movx	@dptr,a
   05C2 A3                 1025 	inc	dptr
   05C3 E9                 1026 	mov	a,r1
   05C4 F0                 1027 	movx	@dptr,a
   05C5 8A 82              1028 	mov	dpl,r2
   05C7 8B 83              1029 	mov	dph,r3
   05C9 8C 93              1030 	mov	dpx,r4
   05CB 8D F0              1031 	mov	b,r5
   05CD 12s00r00r00        1032 	lcall	___fsdiv
   05D1 80 62              1033 	sjmp 00115$
   05D3                    1034 00113$:
                           1035 ;	tancotf.c:81: if(iscotan) return (xden/xnum);
   05D3 90s00r00r00        1036 	mov	dptr,#_tancotf_PARM_2
   05D7 E0                 1037 	movx	a,@dptr
   05D8 F5 F0              1038 	mov	b,a
   05DA A3                 1039 	inc	dptr
   05DB E0                 1040 	movx	a,@dptr
   05DC 45 F0              1041 	orl	a,b
   05DE 60 2D              1042 	jz  00110$
   05E0                    1043 00130$:
                           1044 ;	genAssign: resultIsFar = TRUE
   05E0 90s00r00r00        1045 	mov	dptr,#___fsdiv_PARM_2
   05E4 EE                 1046 	mov	a,r6
   05E5 F0                 1047 	movx	@dptr,a
   05E6 A3                 1048 	inc	dptr
   05E7 EF                 1049 	mov	a,r7
   05E8 F0                 1050 	movx	@dptr,a
   05E9 A3                 1051 	inc	dptr
   05EA E8                 1052 	mov	a,r0
   05EB F0                 1053 	movx	@dptr,a
   05EC A3                 1054 	inc	dptr
   05ED E9                 1055 	mov	a,r1
   05EE F0                 1056 	movx	@dptr,a
   05EF 05 86              1057 	inc	dps
   05F1 90s00r00r0E        1058 	mov	dptr,#_tancotf_xden_1_1
   05F5 E0                 1059 	movx	a,@dptr
   05F6 F5 82              1060 	mov	dpl,a
   05F8 A3                 1061 	inc	dptr
   05F9 E0                 1062 	movx	a,@dptr
   05FA F5 83              1063 	mov	dph,a
   05FC A3                 1064 	inc	dptr
   05FD E0                 1065 	movx	a,@dptr
   05FE F5 93              1066 	mov	dpx,a
   0600 A3                 1067 	inc	dptr
   0601 E0                 1068 	movx	a,@dptr
   0602 F5 F0              1069 	mov	b,a
   0604 75 86 00           1070 	mov	dps,#0
   0607 12s00r00r00        1071 	lcall	___fsdiv
   060B 80 28              1072 	sjmp 00115$
   060D                    1073 00110$:
                           1074 ;	tancotf.c:82: else return (xnum/xden);
   060D 90s00r00r0E        1075 	mov	dptr,#_tancotf_xden_1_1
                           1076 ;	genAssign: resultIsFar = TRUE
   0611 75 86 21           1077 	mov	dps,#0x21
   0614 90s00r00r00        1078 	mov	dptr,#___fsdiv_PARM_2
   0618 E0                 1079 	movx	a,@dptr
   0619 F0                 1080 	movx	@dptr,a
   061A A3                 1081 	inc	dptr
   061B A3                 1082 	inc	dptr
   061C E0                 1083 	movx	a,@dptr
   061D F0                 1084 	movx	@dptr,a
   061E A3                 1085 	inc	dptr
   061F A3                 1086 	inc	dptr
   0620 E0                 1087 	movx	a,@dptr
   0621 F0                 1088 	movx	@dptr,a
   0622 A3                 1089 	inc	dptr
   0623 A3                 1090 	inc	dptr
   0624 E0                 1091 	movx	a,@dptr
   0625 F0                 1092 	movx	@dptr,a
   0626 75 86 00           1093 	mov	dps,#0
   0629 8E 82              1094 	mov	dpl,r6
   062B 8F 83              1095 	mov	dph,r7
   062D 88 93              1096 	mov	dpx,r0
   062F 89 F0              1097 	mov	b,r1
   0631 12s00r00r00        1098 	lcall	___fsdiv
   0635                    1099 00115$:
   0635 22                 1100 	ret
                           1101 	.area CSEG    (CODE)
                           1102 	.area CONST   (CODE)
                           1103 	.area XINIT   (CODE)
                           1104 	.area CABS    (ABS,CODE)

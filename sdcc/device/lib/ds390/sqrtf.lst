                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:25:28 2013
                              5 ;--------------------------------------------------------
                              6 	.module sqrtf
                              7 	.optsdcc -mds390 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _sqrtf
                             31 ;--------------------------------------------------------
                             32 ; special function registers
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; special function bits
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; overlayable register banks
                             39 ;--------------------------------------------------------
                             40 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      41 	.ds 8
                             42 ;--------------------------------------------------------
                             43 ; internal ram data
                             44 ;--------------------------------------------------------
                             45 	.area DSEG    (DATA)
                             46 ;--------------------------------------------------------
                             47 ; overlayable items in internal ram 
                             48 ;--------------------------------------------------------
                             49 	.area OSEG    (OVR,DATA)
                             50 ;--------------------------------------------------------
                             51 ; indirectly addressable internal ram data
                             52 ;--------------------------------------------------------
                             53 	.area ISEG    (DATA)
                             54 ;--------------------------------------------------------
                             55 ; absolute internal ram data
                             56 ;--------------------------------------------------------
                             57 	.area IABS    (ABS,DATA)
                             58 	.area IABS    (ABS,DATA)
                             59 ;--------------------------------------------------------
                             60 ; bit data
                             61 ;--------------------------------------------------------
                             62 	.area BSEG    (BIT)
                             63 ;--------------------------------------------------------
                             64 ; paged external ram data
                             65 ;--------------------------------------------------------
                             66 	.area PSEG    (PAG,XDATA)
                             67 ;--------------------------------------------------------
                             68 ; external ram data
                             69 ;--------------------------------------------------------
                             70 	.area XSEG    (XDATA)
                             71 ;--------------------------------------------------------
                             72 ; absolute external ram data
                             73 ;--------------------------------------------------------
                             74 	.area XABS    (ABS,XDATA)
                             75 ;--------------------------------------------------------
                             76 ; external initialized ram data
                             77 ;--------------------------------------------------------
                             78 	.area XISEG   (XDATA)
                             79 ;--------------------------------------------------------
                             80 ; global & static initialisations
                             81 ;--------------------------------------------------------
                             82 	.area HOME    (CODE)
                             83 	.area GSINIT  (CODE)
                             84 	.area GSFINAL (CODE)
                             85 	.area GSINIT  (CODE)
                             86 ;--------------------------------------------------------
                             87 ; Home
                             88 ;--------------------------------------------------------
                             89 	.area HOME    (CODE)
                             90 	.area HOME    (CODE)
                             91 ;--------------------------------------------------------
                             92 ; code
                             93 ;--------------------------------------------------------
                             94 	.area CSEG    (CODE)
                             95 ;------------------------------------------------------------
                             96 ;Allocation info for local variables in function 'sqrtf'
                             97 ;------------------------------------------------------------
                             98 ;x                         Allocated to registers r2 r3 r4 r5 
                             99 ;f                         Allocated to stack - offset 1
                            100 ;y                         Allocated to registers r6 r7 r0 r1 
                            101 ;n                         Allocated to stack - offset 5
                            102 ;sloc0                     Allocated to stack - offset 7
                            103 ;------------------------------------------------------------
                            104 ;	sqrtf.c:27: float sqrtf(const float x) _FLOAT_FUNC_REENTRANT
                            105 ;	-----------------------------------------
                            106 ;	 function sqrtf
                            107 ;	-----------------------------------------
   0000                     108 _sqrtf:
                    0002    109 	ar2 = 0x02
                    0003    110 	ar3 = 0x03
                    0004    111 	ar4 = 0x04
                    0005    112 	ar5 = 0x05
                    0006    113 	ar6 = 0x06
                    0007    114 	ar7 = 0x07
                    0000    115 	ar0 = 0x00
                    0001    116 	ar1 = 0x01
   0000 C0*00               117 	push	_bpx
   0002 C0*01               118 	push	_bpx+1
   0004 85 81*00            119 	mov	_bpx,sp
   0007 85 9B*01            120 	mov	_bpx+1,esp
   000A 53*01 03            121 	anl	_bpx+1,#3
   000D E5 81               122 	mov	a,sp
   000F 24 0A               123 	add	a,#0x0A
   0011 F5 81               124 	mov	sp,a
   0013 E5 9B               125 	mov	a,esp
   0015 54 03               126 	anl	a,#3
   0017 34 00               127 	addc	a,#0x00
   0019 F5 9B               128 	mov	esp,a
   001B AA 82               129 	mov	r2,dpl
   001D AB 83               130 	mov	r3,dph
   001F AC 93               131 	mov	r4,dpx
   0021 AD F0               132 	mov	r5,b
                            133 ;	sqrtf.c:32: if (x==0.0) return x;
   0023 EA                  134 	mov	a,r2
   0024 4B                  135 	orl	a,r3
   0025 4C                  136 	orl	a,r4
   0026 4D                  137 	orl	a,r5
   0027 70 0C               138 	jnz  00107$
   0029                     139 00117$:
   0029 8A 82               140 	mov	dpl,r2
   002B 8B 83               141 	mov	dph,r3
   002D 8C 93               142 	mov	dpx,r4
   002F 8D F0               143 	mov	b,r5
   0031 02s00r03r43         144 	ljmp	00111$
   0035                     145 00107$:
                            146 ;	sqrtf.c:33: else if (x==1.0) return 1.0;
                            147 ;	genAssign: resultIsFar = TRUE
   0035 90s00r00r00         148 	mov	dptr,#___fseq_PARM_2
   0039 E4                  149 	clr  a
   003A F0                  150 	movx @dptr,a
   003B A3                  151 	inc  dptr
   003C F0                  152 	movx @dptr,a
   003D A3                  153 	inc	dptr
   003E 74 80               154 	mov	a,#0x80
   0040 F0                  155 	movx	@dptr,a
   0041 A3                  156 	inc	dptr
   0042 74 3F               157 	mov	a,#0x3F
   0044 F0                  158 	movx	@dptr,a
   0045 C0 02               159 	push	ar2
   0047 C0 03               160 	push	ar3
   0049 C0 04               161 	push	ar4
   004B C0 05               162 	push	ar5
   004D 8A 82               163 	mov	dpl,r2
   004F 8B 83               164 	mov	dph,r3
   0051 8C 93               165 	mov	dpx,r4
   0053 8D F0               166 	mov	b,r5
   0055 12s00r00r00         167 	lcall	___fseq
   0059 D0 05               168 	pop	ar5
   005B D0 04               169 	pop	ar4
   005D D0 03               170 	pop	ar3
   005F D0 02               171 	pop	ar2
   0061 E5 82               172 	mov	a,dpl
   0063 60 0E               173 	jz  00104$
   0065                     174 00118$:
   0065 90 00 00 00         175 	mov  dptr,#0x0000
   0069 75 93 80            176 	mov	dpx,#0x80
   006C 75 F0 3F            177 	mov	b,#0x3F
   006F 02s00r03r43         178 	ljmp	00111$
   0073                     179 00104$:
                            180 ;	sqrtf.c:34: else if (x<0.0)
                            181 ;	genAssign: resultIsFar = TRUE
   0073 90s00r00r00         182 	mov	dptr,#___fslt_PARM_2
   0077 E4                  183 	clr  a
   0078 F0                  184 	movx @dptr,a
   0079 A3                  185 	inc  dptr
   007A F0                  186 	movx @dptr,a
   007B A3                  187 	inc	dptr
   007C E4                  188 	clr  a
   007D F0                  189 	movx @dptr,a
   007E A3                  190 	inc  dptr
   007F F0                  191 	movx @dptr,a
   0080 C0 02               192 	push	ar2
   0082 C0 03               193 	push	ar3
   0084 C0 04               194 	push	ar4
   0086 C0 05               195 	push	ar5
   0088 8A 82               196 	mov	dpl,r2
   008A 8B 83               197 	mov	dph,r3
   008C 8C 93               198 	mov	dpx,r4
   008E 8D F0               199 	mov	b,r5
   0090 12s00r00r00         200 	lcall	___fslt
   0094 D0 05               201 	pop	ar5
   0096 D0 04               202 	pop	ar4
   0098 D0 03               203 	pop	ar3
   009A D0 02               204 	pop	ar2
   009C E5 82               205 	mov	a,dpl
   009E 60 15               206 	jz  00108$
   00A0                     207 00119$:
                            208 ;	sqrtf.c:36: errno=EDOM;
                            209 ;	genAssign: resultIsFar = TRUE
   00A0 90s00r00r00         210 	mov	dptr,#_errno
   00A4 74 21               211 	mov	a,#0x21
   00A6 F0                  212 	movx	@dptr,a
   00A7 E4                  213 	clr	a
   00A8 A3                  214 	inc	dptr
   00A9 F0                  215 	movx	@dptr,a
                            216 ;	sqrtf.c:37: return 0.0;
   00AA 90 00 00 00         217 	mov  dptr,#0x0000
   00AE 75 F0 00            218 	mov	b,#0x00
   00B1 02s00r03r43         219 	ljmp	00111$
   00B5                     220 00108$:
                            221 ;	sqrtf.c:39: f=frexpf(x, &n);
   00B5 E5*00               222 	mov	a,_bpx
   00B7 24 05               223 	add	a,#0x05
   00B9 F5 F0               224 	mov	b,a
   00BB E4                  225 	clr	a
   00BC 35*01               226 	addc	a,_bpx+1
   00BE AE F0               227 	mov	r6,b
   00C0 FF                  228 	mov	r7,a
   00C1 78 40               229 	mov	r0,#0x40
   00C3 90s00r00r00         230 	mov	dptr,#_frexpf_PARM_2
   00C7 EE                  231 	mov	a,r6
   00C8 F0                  232 	movx	@dptr,a
   00C9 A3                  233 	inc	dptr
   00CA EF                  234 	mov	a,r7
   00CB F0                  235 	movx	@dptr,a
   00CC A3                  236 	inc	dptr
   00CD E8                  237 	mov	a,r0
   00CE F0                  238 	movx	@dptr,a
   00CF A3                  239 	inc	dptr
   00D0 74 00               240 	mov	a,#0x0
   00D2 F0                  241 	movx	@dptr,a
   00D3 8A 82               242 	mov	dpl,r2
   00D5 8B 83               243 	mov	dph,r3
   00D7 8C 93               244 	mov	dpx,r4
   00D9 8D F0               245 	mov	b,r5
   00DB 12s00r00r00         246 	lcall	_frexpf
   00DF AA 82               247 	mov	r2,dpl
   00E1 AB 83               248 	mov	r3,dph
   00E3 AC 93               249 	mov	r4,dpx
   00E5 AD F0               250 	mov	r5,b
                            251 ;	genAssign: resultIsFar = TRUE
   00E7 75 93 40            252 	mov	dpx,#0x40
   00EA 85*01 83            253 	mov	dph,_bpx+1
   00ED 85*00 82            254 	mov	dpl,_bpx
   00F0 A3                  255 	inc	dptr
   00F1 EA                  256 	mov	a,r2
   00F2 F0                  257 	movx	@dptr,a
   00F3 A3                  258 	inc	dptr
   00F4 EB                  259 	mov	a,r3
   00F5 F0                  260 	movx	@dptr,a
   00F6 A3                  261 	inc	dptr
   00F7 EC                  262 	mov	a,r4
   00F8 F0                  263 	movx	@dptr,a
   00F9 A3                  264 	inc	dptr
   00FA ED                  265 	mov	a,r5
   00FB F0                  266 	movx	@dptr,a
                            267 ;	sqrtf.c:40: y=0.41731+0.59016*f; /*Educated guess*/
   00FC 75 93 40            268 	mov	dpx,#0x40
   00FF 85*01 83            269 	mov	dph,_bpx+1
   0102 85*00 82            270 	mov	dpl,_bpx
   0105 A3                  271 	inc	dptr
                            272 ;	genAssign: resultIsFar = TRUE
   0106 75 86 21            273 	mov	dps,#0x21
   0109 90s00r00r00         274 	mov	dptr,#___fsmul_PARM_2
   010D E0                  275 	movx	a,@dptr
   010E F0                  276 	movx	@dptr,a
   010F A3                  277 	inc	dptr
   0110 A3                  278 	inc	dptr
   0111 E0                  279 	movx	a,@dptr
   0112 F0                  280 	movx	@dptr,a
   0113 A3                  281 	inc	dptr
   0114 A3                  282 	inc	dptr
   0115 E0                  283 	movx	a,@dptr
   0116 F0                  284 	movx	@dptr,a
   0117 A3                  285 	inc	dptr
   0118 A3                  286 	inc	dptr
   0119 E0                  287 	movx	a,@dptr
   011A F0                  288 	movx	@dptr,a
   011B 75 86 00            289 	mov	dps,#0
   011E 90 17 14 BA         290 	mov	dptr,#0x1714BA
   0122 75 F0 3F            291 	mov	b,#0x3F
   0125 12s00r00r00         292 	lcall	___fsmul
   0129 AE 82               293 	mov	r6,dpl
   012B AF 83               294 	mov	r7,dph
   012D A8 93               295 	mov	r0,dpx
   012F A9 F0               296 	mov	r1,b
                            297 ;	genAssign: resultIsFar = TRUE
   0131 90s00r00r00         298 	mov	dptr,#___fsadd_PARM_2
   0135 74 A8               299 	mov	a,#0xA8
   0137 F0                  300 	movx	@dptr,a
   0138 A3                  301 	inc	dptr
   0139 74 A9               302 	mov	a,#0xA9
   013B F0                  303 	movx	@dptr,a
   013C A3                  304 	inc	dptr
   013D 74 D5               305 	mov	a,#0xD5
   013F F0                  306 	movx	@dptr,a
   0140 A3                  307 	inc	dptr
   0141 74 3E               308 	mov	a,#0x3E
   0143 F0                  309 	movx	@dptr,a
   0144 8E 82               310 	mov	dpl,r6
   0146 8F 83               311 	mov	dph,r7
   0148 88 93               312 	mov	dpx,r0
   014A 89 F0               313 	mov	b,r1
   014C 12s00r00r00         314 	lcall	___fsadd
   0150 AE 82               315 	mov	r6,dpl
   0152 AF 83               316 	mov	r7,dph
   0154 A8 93               317 	mov	r0,dpx
   0156 A9 F0               318 	mov	r1,b
                            319 ;	genAssign: resultIsFar = TRUE
                            320 ;	sqrtf.c:42: y+=f/y;
                            321 ;	genAssign: resultIsFar = TRUE
   0158 90s00r00r00         322 	mov	dptr,#___fsdiv_PARM_2
   015C EE                  323 	mov	a,r6
   015D F0                  324 	movx	@dptr,a
   015E A3                  325 	inc	dptr
   015F EF                  326 	mov	a,r7
   0160 F0                  327 	movx	@dptr,a
   0161 A3                  328 	inc	dptr
   0162 E8                  329 	mov	a,r0
   0163 F0                  330 	movx	@dptr,a
   0164 A3                  331 	inc	dptr
   0165 E9                  332 	mov	a,r1
   0166 F0                  333 	movx	@dptr,a
   0167 C0 06               334 	push	ar6
   0169 C0 07               335 	push	ar7
   016B C0 00               336 	push	ar0
   016D C0 01               337 	push	ar1
   016F 75 95 40            338 	mov	dpx1,#0x40
   0172 85*01 85            339 	mov	dph1,_bpx+1
   0175 85*00 84            340 	mov	dpl1,_bpx
   0178 75 86 01            341 	mov     dps,#1
   017B A3                  342 	inc	dptr
   017C E0                  343 	movx	a,@dptr
   017D F5 82               344 	mov	dpl,a
   017F A3                  345 	inc	dptr
   0180 E0                  346 	movx	a,@dptr
   0181 F5 83               347 	mov	dph,a
   0183 A3                  348 	inc	dptr
   0184 E0                  349 	movx	a,@dptr
   0185 F5 93               350 	mov	dpx,a
   0187 A3                  351 	inc	dptr
   0188 E0                  352 	movx	a,@dptr
   0189 F5 F0               353 	mov	b,a
   018B 75 86 00            354 	mov	dps,#0
   018E 12s00r00r00         355 	lcall	___fsdiv
   0192 AA 82               356 	mov	r2,dpl
   0194 AB 83               357 	mov	r3,dph
   0196 AC 93               358 	mov	r4,dpx
   0198 AD F0               359 	mov	r5,b
   019A D0 01               360 	pop	ar1
   019C D0 00               361 	pop	ar0
   019E D0 07               362 	pop	ar7
   01A0 D0 06               363 	pop	ar6
                            364 ;	genAssign: resultIsFar = TRUE
   01A2 90s00r00r00         365 	mov	dptr,#___fsadd_PARM_2
   01A6 EA                  366 	mov	a,r2
   01A7 F0                  367 	movx	@dptr,a
   01A8 A3                  368 	inc	dptr
   01A9 EB                  369 	mov	a,r3
   01AA F0                  370 	movx	@dptr,a
   01AB A3                  371 	inc	dptr
   01AC EC                  372 	mov	a,r4
   01AD F0                  373 	movx	@dptr,a
   01AE A3                  374 	inc	dptr
   01AF ED                  375 	mov	a,r5
   01B0 F0                  376 	movx	@dptr,a
   01B1 8E 82               377 	mov	dpl,r6
   01B3 8F 83               378 	mov	dph,r7
   01B5 88 93               379 	mov	dpx,r0
   01B7 89 F0               380 	mov	b,r1
   01B9 12s00r00r00         381 	lcall	___fsadd
   01BD AA 82               382 	mov	r2,dpl
   01BF AB 83               383 	mov	r3,dph
   01C1 AC 93               384 	mov	r4,dpx
   01C3 AD F0               385 	mov	r5,b
                            386 ;	genAssign: resultIsFar = TRUE
   01C5 8A 06               387 	mov	ar6,r2
   01C7 8B 07               388 	mov	ar7,r3
   01C9 8C 00               389 	mov	ar0,r4
   01CB 8D 01               390 	mov	ar1,r5
                            391 ;	sqrtf.c:43: y=ldexpf(y, -2) + f/y; /*Faster version of 0.25 * y + f/y*/
                            392 ;	genAssign: resultIsFar = TRUE
   01CD 90s00r00r00         393 	mov	dptr,#_ldexpf_PARM_2
   01D1 74 FE               394 	mov	a,#0xFE
   01D3 F0                  395 	movx	@dptr,a
   01D4 A3                  396 	inc	dptr
   01D5 74 FF               397 	mov	a,#0xFF
   01D7 F0                  398 	movx	@dptr,a
   01D8 C0 06               399 	push	ar6
   01DA C0 07               400 	push	ar7
   01DC C0 00               401 	push	ar0
   01DE C0 01               402 	push	ar1
   01E0 8E 82               403 	mov	dpl,r6
   01E2 8F 83               404 	mov	dph,r7
   01E4 88 93               405 	mov	dpx,r0
   01E6 89 F0               406 	mov	b,r1
   01E8 12s00r00r00         407 	lcall	_ldexpf
   01EC E5*00               408 	mov	a,_bpx
   01EE C3                  409 	clr	c
   01EF 94 F9               410 	subb	a,#0xF9
   01F1 F5 84               411 	mov	dpl1,a
   01F3 E5*01               412 	mov	a,_bpx+1
   01F5 94 FF               413 	subb	a,#0xFF
   01F7 F5 85               414 	mov	dph1,a
   01F9 75 95 40            415 	mov	dpx1,#0x40
   01FC 05 86               416 	inc	dps
   01FE E5 82               417 	mov	a,dpl
   0200 F0                  418 	movx	@dptr,a
   0201 A3                  419 	inc	dptr
   0202 E5 83               420 	mov	a,dph
   0204 F0                  421 	movx	@dptr,a
   0205 A3                  422 	inc	dptr
   0206 E5 93               423 	mov	a,dpx
   0208 F0                  424 	movx	@dptr,a
   0209 A3                  425 	inc	dptr
   020A E5 F0               426 	mov	a,b
   020C F0                  427 	movx	@dptr,a
   020D 75 86 00            428 	mov	dps,#0
   0210 D0 01               429 	pop	ar1
   0212 D0 00               430 	pop	ar0
   0214 D0 07               431 	pop	ar7
   0216 D0 06               432 	pop	ar6
                            433 ;	genAssign: resultIsFar = TRUE
   0218 90s00r00r00         434 	mov	dptr,#___fsdiv_PARM_2
   021C EE                  435 	mov	a,r6
   021D F0                  436 	movx	@dptr,a
   021E A3                  437 	inc	dptr
   021F EF                  438 	mov	a,r7
   0220 F0                  439 	movx	@dptr,a
   0221 A3                  440 	inc	dptr
   0222 E8                  441 	mov	a,r0
   0223 F0                  442 	movx	@dptr,a
   0224 A3                  443 	inc	dptr
   0225 E9                  444 	mov	a,r1
   0226 F0                  445 	movx	@dptr,a
   0227 75 95 40            446 	mov	dpx1,#0x40
   022A 85*01 85            447 	mov	dph1,_bpx+1
   022D 85*00 84            448 	mov	dpl1,_bpx
   0230 75 86 01            449 	mov     dps,#1
   0233 A3                  450 	inc	dptr
   0234 E0                  451 	movx	a,@dptr
   0235 F5 82               452 	mov	dpl,a
   0237 A3                  453 	inc	dptr
   0238 E0                  454 	movx	a,@dptr
   0239 F5 83               455 	mov	dph,a
   023B A3                  456 	inc	dptr
   023C E0                  457 	movx	a,@dptr
   023D F5 93               458 	mov	dpx,a
   023F A3                  459 	inc	dptr
   0240 E0                  460 	movx	a,@dptr
   0241 F5 F0               461 	mov	b,a
   0243 75 86 00            462 	mov	dps,#0
   0246 12s00r00r00         463 	lcall	___fsdiv
   024A AA 82               464 	mov	r2,dpl
   024C AB 83               465 	mov	r3,dph
   024E AC 93               466 	mov	r4,dpx
   0250 AD F0               467 	mov	r5,b
                            468 ;	genAssign: resultIsFar = TRUE
   0252 90s00r00r00         469 	mov	dptr,#___fsadd_PARM_2
   0256 EA                  470 	mov	a,r2
   0257 F0                  471 	movx	@dptr,a
   0258 A3                  472 	inc	dptr
   0259 EB                  473 	mov	a,r3
   025A F0                  474 	movx	@dptr,a
   025B A3                  475 	inc	dptr
   025C EC                  476 	mov	a,r4
   025D F0                  477 	movx	@dptr,a
   025E A3                  478 	inc	dptr
   025F ED                  479 	mov	a,r5
   0260 F0                  480 	movx	@dptr,a
   0261 E5*00               481 	mov	a,_bpx
   0263 C3                  482 	clr	c
   0264 94 F9               483 	subb	a,#0xF9
   0266 F5 84               484 	mov	dpl1,a
   0268 E5*01               485 	mov	a,_bpx+1
   026A 94 FF               486 	subb	a,#0xFF
   026C F5 85               487 	mov	dph1,a
   026E 75 95 40            488 	mov	dpx1,#0x40
   0271 05 86               489 	inc	dps
   0273 E0                  490 	movx	a,@dptr
   0274 F5 82               491 	mov	dpl,a
   0276 A3                  492 	inc	dptr
   0277 E0                  493 	movx	a,@dptr
   0278 F5 83               494 	mov	dph,a
   027A A3                  495 	inc	dptr
   027B E0                  496 	movx	a,@dptr
   027C F5 93               497 	mov	dpx,a
   027E A3                  498 	inc	dptr
   027F E0                  499 	movx	a,@dptr
   0280 F5 F0               500 	mov	b,a
   0282 75 86 00            501 	mov	dps,#0
   0285 12s00r00r00         502 	lcall	___fsadd
   0289 AA 82               503 	mov	r2,dpl
   028B AB 83               504 	mov	r3,dph
   028D AC 93               505 	mov	r4,dpx
   028F AD F0               506 	mov	r5,b
                            507 ;	genAssign: resultIsFar = TRUE
   0291 8A 06               508 	mov	ar6,r2
   0293 8B 07               509 	mov	ar7,r3
   0295 8C 00               510 	mov	ar0,r4
   0297 8D 01               511 	mov	ar1,r5
                            512 ;	sqrtf.c:45: if (n&1)
   0299 E5*00               513 	mov	a,_bpx
   029B C3                  514 	clr	c
   029C 94 FB               515 	subb	a,#0xFB
   029E F5 82               516 	mov	dpl,a
   02A0 E5*01               517 	mov	a,_bpx+1
   02A2 94 FF               518 	subb	a,#0xFF
   02A4 F5 83               519 	mov	dph,a
   02A6 75 93 40            520 	mov	dpx,#0x40
   02A9 E0                  521 	movx	a,@dptr
   02AA 30 E0 43            522 	jnb  acc.0,00110$
   02AD                     523 00120$:
                            524 ;	sqrtf.c:47: y*=0.7071067812;
                            525 ;	genAssign: resultIsFar = TRUE
   02AD 90s00r00r00         526 	mov	dptr,#___fsmul_PARM_2
   02B1 EE                  527 	mov	a,r6
   02B2 F0                  528 	movx	@dptr,a
   02B3 A3                  529 	inc	dptr
   02B4 EF                  530 	mov	a,r7
   02B5 F0                  531 	movx	@dptr,a
   02B6 A3                  532 	inc	dptr
   02B7 E8                  533 	mov	a,r0
   02B8 F0                  534 	movx	@dptr,a
   02B9 A3                  535 	inc	dptr
   02BA E9                  536 	mov	a,r1
   02BB F0                  537 	movx	@dptr,a
   02BC 90 35 04 F3         538 	mov	dptr,#0x3504F3
   02C0 75 F0 3F            539 	mov	b,#0x3F
   02C3 12s00r00r00         540 	lcall	___fsmul
   02C7 AA 82               541 	mov	r2,dpl
   02C9 AB 83               542 	mov	r3,dph
   02CB AC 93               543 	mov	r4,dpx
   02CD AD F0               544 	mov	r5,b
                            545 ;	genAssign: resultIsFar = TRUE
   02CF 8A 06               546 	mov	ar6,r2
   02D1 8B 07               547 	mov	ar7,r3
   02D3 8C 00               548 	mov	ar0,r4
   02D5 8D 01               549 	mov	ar1,r5
                            550 ;	sqrtf.c:48: ++n;
   02D7 E5*00               551 	mov	a,_bpx
   02D9 C3                  552 	clr	c
   02DA 94 FB               553 	subb	a,#0xFB
   02DC F5 82               554 	mov	dpl,a
   02DE E5*01               555 	mov	a,_bpx+1
   02E0 94 FF               556 	subb	a,#0xFF
   02E2 F5 83               557 	mov	dph,a
   02E4 75 93 40            558 	mov	dpx,#0x40
   02E7 E0                  559 	movx	a,@dptr
   02E8 24 01               560 	add	a,#0x01
   02EA F0                  561 	movx	@dptr,a
   02EB A3                  562 	inc	dptr
   02EC E0                  563 	movx	a,@dptr
   02ED 34 00               564 	addc	a,#0x00
   02EF F0                  565 	movx	@dptr,a
   02F0                     566 00110$:
                            567 ;	sqrtf.c:50: return ldexpf(y, n/2);
                            568 ;	genAssign: resultIsFar = TRUE
   02F0 90s00r00r00         569 	mov	dptr,#__divsint_PARM_2
   02F4 74 02               570 	mov	a,#0x02
   02F6 F0                  571 	movx	@dptr,a
   02F7 E4                  572 	clr	a
   02F8 A3                  573 	inc	dptr
   02F9 F0                  574 	movx	@dptr,a
   02FA C0 06               575 	push	ar6
   02FC C0 07               576 	push	ar7
   02FE C0 00               577 	push	ar0
   0300 C0 01               578 	push	ar1
   0302 E5*00               579 	mov	a,_bpx
   0304 C3                  580 	clr	c
   0305 94 FB               581 	subb	a,#0xFB
   0307 F5 84               582 	mov	dpl1,a
   0309 E5*01               583 	mov	a,_bpx+1
   030B 94 FF               584 	subb	a,#0xFF
   030D F5 85               585 	mov	dph1,a
   030F 75 95 40            586 	mov	dpx1,#0x40
   0312 05 86               587 	inc	dps
   0314 E0                  588 	movx	a,@dptr
   0315 F5 82               589 	mov	dpl,a
   0317 A3                  590 	inc	dptr
   0318 E0                  591 	movx	a,@dptr
   0319 F5 83               592 	mov	dph,a
   031B 75 86 00            593 	mov	dps,#0
   031E 12s00r00r00         594 	lcall	__divsint
   0322 AA 82               595 	mov	r2,dpl
   0324 AB 83               596 	mov	r3,dph
   0326 D0 01               597 	pop	ar1
   0328 D0 00               598 	pop	ar0
   032A D0 07               599 	pop	ar7
   032C D0 06               600 	pop	ar6
                            601 ;	genAssign: resultIsFar = TRUE
   032E 90s00r00r00         602 	mov	dptr,#_ldexpf_PARM_2
   0332 EA                  603 	mov	a,r2
   0333 F0                  604 	movx	@dptr,a
   0334 A3                  605 	inc	dptr
   0335 EB                  606 	mov	a,r3
   0336 F0                  607 	movx	@dptr,a
   0337 8E 82               608 	mov	dpl,r6
   0339 8F 83               609 	mov	dph,r7
   033B 88 93               610 	mov	dpx,r0
   033D 89 F0               611 	mov	b,r1
   033F 12s00r00r00         612 	lcall	_ldexpf
   0343                     613 00111$:
   0343 85*00 81            614 	mov	sp,_bpx
   0346 85*01 9B            615 	mov	esp,_bpx+1
   0349 D0*01               616 	pop	_bpx+1
   034B D0*00               617 	pop	_bpx
   034D 22                  618 	ret
                            619 	.area CSEG    (CODE)
                            620 	.area CONST   (CODE)
                            621 	.area XINIT   (CODE)
                            622 	.area CABS    (ABS,CODE)

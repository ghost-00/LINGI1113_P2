                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:25:37 2013
                              5 ;--------------------------------------------------------
                              6 	.module _fsgt
                              7 	.optsdcc -mhc08
                              8 	
                              9 	.area HOME (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG (CODE)
                             14 	.area XINIT
                             15 	.area CONST   (CODE)
                             16 	.area DSEG
                             17 	.area OSEG    (OVR)
                             18 	.area BSEG
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl ___fsgt_PARM_2
                             25 	.globl ___fsgt_PARM_1
                             26 	.globl ___fsgt
                             27 ;--------------------------------------------------------
                             28 ;  ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG
                             31 ;--------------------------------------------------------
                             32 ; overlayable items in  ram 
                             33 ;--------------------------------------------------------
                             34 	.area	OSEG    (OVR)
   0000                      35 ___fsgt_sloc0_1_0::
   0000                      36 	.ds 4
   0004                      37 ___fsgt_sloc1_1_0::
   0004                      38 	.ds 4
                             39 ;--------------------------------------------------------
                             40 ; absolute external ram data
                             41 ;--------------------------------------------------------
                             42 	.area XABS    (ABS)
                             43 ;--------------------------------------------------------
                             44 ; external initialized ram data
                             45 ;--------------------------------------------------------
                             46 	.area XISEG
                             47 ;--------------------------------------------------------
                             48 ; extended address mode data
                             49 ;--------------------------------------------------------
                             50 	.area XSEG
   0000                      51 ___fsgt_PARM_1:
   0000                      52 	.ds 4
   0004                      53 ___fsgt_PARM_2:
   0004                      54 	.ds 4
   0008                      55 ___fsgt_fl1_1_1:
   0008                      56 	.ds 4
   000C                      57 ___fsgt_fl2_1_1:
   000C                      58 	.ds 4
                             59 ;--------------------------------------------------------
                             60 ; global & static initialisations
                             61 ;--------------------------------------------------------
                             62 	.area HOME (CODE)
                             63 	.area GSINIT (CODE)
                             64 	.area GSFINAL (CODE)
                             65 	.area GSINIT (CODE)
                             66 ;--------------------------------------------------------
                             67 ; Home
                             68 ;--------------------------------------------------------
                             69 	.area HOME (CODE)
                             70 	.area HOME (CODE)
                             71 ;--------------------------------------------------------
                             72 ; code
                             73 ;--------------------------------------------------------
                             74 	.area CSEG (CODE)
                             75 ;------------------------------------------------------------
                             76 ;Allocation info for local variables in function '__fsgt'
                             77 ;------------------------------------------------------------
                             78 ;a1                        Allocated with name '___fsgt_PARM_1'
                             79 ;a2                        Allocated with name '___fsgt_PARM_2'
                             80 ;fl1                       Allocated with name '___fsgt_fl1_1_1'
                             81 ;fl2                       Allocated with name '___fsgt_fl2_1_1'
                             82 ;sloc0                     Allocated with name '___fsgt_sloc0_1_0'
                             83 ;sloc1                     Allocated with name '___fsgt_sloc1_1_0'
                             84 ;------------------------------------------------------------
                             85 ;../_fsgt.c:98: char __fsgt (float a1, float a2)
                             86 ;	-----------------------------------------
                             87 ;	 function __fsgt
                             88 ;	-----------------------------------------
   0000                      89 ___fsgt:
                             90 ;../_fsgt.c:102: fl1.f = a1;
   0000 C6s00r00             91 	lda	___fsgt_PARM_1
   0003 C7s00r08             92 	sta	___fsgt_fl1_1_1
   0006 C6s00r01             93 	lda	(___fsgt_PARM_1 + 1)
   0009 C7s00r09             94 	sta	(___fsgt_fl1_1_1 + 1)
   000C C6s00r02             95 	lda	(___fsgt_PARM_1 + 2)
   000F C7s00r0A             96 	sta	(___fsgt_fl1_1_1 + 2)
   0012 C6s00r03             97 	lda	(___fsgt_PARM_1 + 3)
   0015 C7s00r0B             98 	sta	(___fsgt_fl1_1_1 + 3)
                             99 ;../_fsgt.c:103: fl2.f = a2;
   0018 C6s00r04            100 	lda	___fsgt_PARM_2
   001B C7s00r0C            101 	sta	___fsgt_fl2_1_1
   001E C6s00r05            102 	lda	(___fsgt_PARM_2 + 1)
   0021 C7s00r0D            103 	sta	(___fsgt_fl2_1_1 + 1)
   0024 C6s00r06            104 	lda	(___fsgt_PARM_2 + 2)
   0027 C7s00r0E            105 	sta	(___fsgt_fl2_1_1 + 2)
   002A C6s00r07            106 	lda	(___fsgt_PARM_2 + 3)
   002D C7s00r0F            107 	sta	(___fsgt_fl2_1_1 + 3)
                            108 ;../_fsgt.c:105: if (fl1.l<0 && fl2.l<0) {
   0030 C6s00r08            109 	lda	___fsgt_fl1_1_1
   0033 B7*00               110 	sta	*___fsgt_sloc0_1_0
   0035 C6s00r09            111 	lda	(___fsgt_fl1_1_1 + 1)
   0038 B7*01               112 	sta	*(___fsgt_sloc0_1_0 + 1)
   003A C6s00r0A            113 	lda	(___fsgt_fl1_1_1 + 2)
   003D B7*02               114 	sta	*(___fsgt_sloc0_1_0 + 2)
   003F C6s00r0B            115 	lda	(___fsgt_fl1_1_1 + 3)
   0042 B7*03               116 	sta	*(___fsgt_sloc0_1_0 + 3)
   0044 B6*00               117 	lda	*___fsgt_sloc0_1_0
   0046 A0 00               118 	sub	#0x00
   0048 91 02               119 	blt	00114$
   004A 20 57               120 	bra	00104$
   004C                     121 00114$:
   004C C6s00r0C            122 	lda	___fsgt_fl2_1_1
   004F B7*00               123 	sta	*___fsgt_sloc0_1_0
   0051 C6s00r0D            124 	lda	(___fsgt_fl2_1_1 + 1)
   0054 B7*01               125 	sta	*(___fsgt_sloc0_1_0 + 1)
   0056 C6s00r0E            126 	lda	(___fsgt_fl2_1_1 + 2)
   0059 B7*02               127 	sta	*(___fsgt_sloc0_1_0 + 2)
   005B C6s00r0F            128 	lda	(___fsgt_fl2_1_1 + 3)
   005E B7*03               129 	sta	*(___fsgt_sloc0_1_0 + 3)
   0060 B6*00               130 	lda	*___fsgt_sloc0_1_0
   0062 A0 00               131 	sub	#0x00
   0064 90 3D               132 	bge	00104$
   0066                     133 00115$:
                            134 ;../_fsgt.c:106: if (fl2.l > fl1.l)
   0066 C6s00r0C            135 	lda	___fsgt_fl2_1_1
   0069 B7*00               136 	sta	*___fsgt_sloc0_1_0
   006B C6s00r0D            137 	lda	(___fsgt_fl2_1_1 + 1)
   006E B7*01               138 	sta	*(___fsgt_sloc0_1_0 + 1)
   0070 C6s00r0E            139 	lda	(___fsgt_fl2_1_1 + 2)
   0073 B7*02               140 	sta	*(___fsgt_sloc0_1_0 + 2)
   0075 C6s00r0F            141 	lda	(___fsgt_fl2_1_1 + 3)
   0078 B7*03               142 	sta	*(___fsgt_sloc0_1_0 + 3)
   007A C6s00r08            143 	lda	___fsgt_fl1_1_1
   007D B7*04               144 	sta	*___fsgt_sloc1_1_0
   007F C6s00r09            145 	lda	(___fsgt_fl1_1_1 + 1)
   0082 B7*05               146 	sta	*(___fsgt_sloc1_1_0 + 1)
   0084 C6s00r0A            147 	lda	(___fsgt_fl1_1_1 + 2)
   0087 B7*06               148 	sta	*(___fsgt_sloc1_1_0 + 2)
   0089 C6s00r0B            149 	lda	(___fsgt_fl1_1_1 + 3)
   008C B7*07               150 	sta	*(___fsgt_sloc1_1_0 + 3)
   008E B0*03               151 	sub	*(___fsgt_sloc0_1_0 + 3)
   0090 B6*06               152 	lda	*(___fsgt_sloc1_1_0 + 2)
   0092 B2*02               153 	sbc	*(___fsgt_sloc0_1_0 + 2)
   0094 B6*05               154 	lda	*(___fsgt_sloc1_1_0 + 1)
   0096 B2*01               155 	sbc	*(___fsgt_sloc0_1_0 + 1)
   0098 B6*04               156 	lda	*___fsgt_sloc1_1_0
   009A B2*00               157 	sbc	*___fsgt_sloc0_1_0
   009C 90 03               158 	bge	00102$
   009E                     159 00116$:
                            160 ;../_fsgt.c:107: return (1);
   009E A6 01               161 	lda	#0x01
   00A0 81                  162 	rts
   00A1                     163 00102$:
                            164 ;../_fsgt.c:108: return (0);
   00A1 4F                  165 	clra
   00A2 81                  166 	rts
   00A3                     167 00104$:
                            168 ;../_fsgt.c:111: if (fl1.l > fl2.l)
   00A3 C6s00r08            169 	lda	___fsgt_fl1_1_1
   00A6 B7*04               170 	sta	*___fsgt_sloc1_1_0
   00A8 C6s00r09            171 	lda	(___fsgt_fl1_1_1 + 1)
   00AB B7*05               172 	sta	*(___fsgt_sloc1_1_0 + 1)
   00AD C6s00r0A            173 	lda	(___fsgt_fl1_1_1 + 2)
   00B0 B7*06               174 	sta	*(___fsgt_sloc1_1_0 + 2)
   00B2 C6s00r0B            175 	lda	(___fsgt_fl1_1_1 + 3)
   00B5 B7*07               176 	sta	*(___fsgt_sloc1_1_0 + 3)
   00B7 C6s00r0C            177 	lda	___fsgt_fl2_1_1
   00BA B7*00               178 	sta	*___fsgt_sloc0_1_0
   00BC C6s00r0D            179 	lda	(___fsgt_fl2_1_1 + 1)
   00BF B7*01               180 	sta	*(___fsgt_sloc0_1_0 + 1)
   00C1 C6s00r0E            181 	lda	(___fsgt_fl2_1_1 + 2)
   00C4 B7*02               182 	sta	*(___fsgt_sloc0_1_0 + 2)
   00C6 C6s00r0F            183 	lda	(___fsgt_fl2_1_1 + 3)
   00C9 B7*03               184 	sta	*(___fsgt_sloc0_1_0 + 3)
   00CB B0*07               185 	sub	*(___fsgt_sloc1_1_0 + 3)
   00CD B6*02               186 	lda	*(___fsgt_sloc0_1_0 + 2)
   00CF B2*06               187 	sbc	*(___fsgt_sloc1_1_0 + 2)
   00D1 B6*01               188 	lda	*(___fsgt_sloc0_1_0 + 1)
   00D3 B2*05               189 	sbc	*(___fsgt_sloc1_1_0 + 1)
   00D5 B6*00               190 	lda	*___fsgt_sloc0_1_0
   00D7 B2*04               191 	sbc	*___fsgt_sloc1_1_0
   00D9 90 03               192 	bge	00107$
   00DB                     193 00117$:
                            194 ;../_fsgt.c:112: return (1);
   00DB A6 01               195 	lda	#0x01
   00DD 81                  196 	rts
   00DE                     197 00107$:
                            198 ;../_fsgt.c:113: return (0);
   00DE 4F                  199 	clra
   00DF                     200 00108$:
   00DF 81                  201 	rts
                            202 	.area CSEG (CODE)
                            203 	.area CONST   (CODE)
                            204 	.area XINIT
                            205 	.area CABS    (ABS,CODE)

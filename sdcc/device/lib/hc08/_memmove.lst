                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:25:39 2013
                              5 ;--------------------------------------------------------
                              6 	.module _memmove
                              7 	.optsdcc -mhc08
                              8 	
                              9 	.area HOME (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG (CODE)
                             14 	.area XINIT
                             15 	.area CONST   (CODE)
                             16 	.area DSEG
                             17 	.area OSEG    (OVR)
                             18 	.area BSEG
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl _memmove_PARM_3
                             25 	.globl _memmove_PARM_2
                             26 	.globl _memmove
                             27 ;--------------------------------------------------------
                             28 ;  ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG
                             31 ;--------------------------------------------------------
                             32 ; overlayable items in  ram 
                             33 ;--------------------------------------------------------
                             34 	.area	OSEG    (OVR)
   0000                      35 _memmove_sloc0_1_0::
   0000                      36 	.ds 2
   0002                      37 _memmove_sloc1_1_0::
   0002                      38 	.ds 2
   0004                      39 _memmove_sloc2_1_0::
   0004                      40 	.ds 2
   0006                      41 _memmove_sloc3_1_0::
   0006                      42 	.ds 2
                             43 ;--------------------------------------------------------
                             44 ; absolute external ram data
                             45 ;--------------------------------------------------------
                             46 	.area XABS    (ABS)
                             47 ;--------------------------------------------------------
                             48 ; external initialized ram data
                             49 ;--------------------------------------------------------
                             50 	.area XISEG
                             51 ;--------------------------------------------------------
                             52 ; extended address mode data
                             53 ;--------------------------------------------------------
                             54 	.area XSEG
   0000                      55 _memmove_PARM_2:
   0000                      56 	.ds 2
   0002                      57 _memmove_PARM_3:
   0002                      58 	.ds 2
   0004                      59 _memmove_dst_1_1:
   0004                      60 	.ds 2
   0006                      61 _memmove_ret_1_1:
   0006                      62 	.ds 2
   0008                      63 _memmove_d_1_1:
   0008                      64 	.ds 2
   000A                      65 _memmove_s_1_1:
   000A                      66 	.ds 2
                             67 ;--------------------------------------------------------
                             68 ; global & static initialisations
                             69 ;--------------------------------------------------------
                             70 	.area HOME (CODE)
                             71 	.area GSINIT (CODE)
                             72 	.area GSFINAL (CODE)
                             73 	.area GSINIT (CODE)
                             74 ;--------------------------------------------------------
                             75 ; Home
                             76 ;--------------------------------------------------------
                             77 	.area HOME (CODE)
                             78 	.area HOME (CODE)
                             79 ;--------------------------------------------------------
                             80 ; code
                             81 ;--------------------------------------------------------
                             82 	.area CSEG (CODE)
                             83 ;------------------------------------------------------------
                             84 ;Allocation info for local variables in function 'memmove'
                             85 ;------------------------------------------------------------
                             86 ;src                       Allocated with name '_memmove_PARM_2'
                             87 ;acount                    Allocated with name '_memmove_PARM_3'
                             88 ;dst                       Allocated with name '_memmove_dst_1_1'
                             89 ;ret                       Allocated with name '_memmove_ret_1_1'
                             90 ;d                         Allocated with name '_memmove_d_1_1'
                             91 ;s                         Allocated with name '_memmove_s_1_1'
                             92 ;sloc0                     Allocated with name '_memmove_sloc0_1_0'
                             93 ;sloc1                     Allocated with name '_memmove_sloc1_1_0'
                             94 ;sloc2                     Allocated with name '_memmove_sloc2_1_0'
                             95 ;sloc3                     Allocated with name '_memmove_sloc3_1_0'
                             96 ;------------------------------------------------------------
                             97 ;../_memmove.c:35: void * memmove (
                             98 ;	-----------------------------------------
                             99 ;	 function memmove
                            100 ;	-----------------------------------------
   0000                     101 _memmove:
   0000 C7s00r05            102 	sta	(_memmove_dst_1_1 + 1)
   0003 CFs00r04            103 	stx	_memmove_dst_1_1
                            104 ;../_memmove.c:96: void * ret = dst;
   0006 C6s00r04            105 	lda	_memmove_dst_1_1
   0009 C7s00r06            106 	sta	_memmove_ret_1_1
   000C C6s00r05            107 	lda	(_memmove_dst_1_1 + 1)
   000F C7s00r07            108 	sta	(_memmove_ret_1_1 + 1)
                            109 ;../_memmove.c:100: if (((int)src < (int)dst) && ((((int)src)+acount) > (int)dst)) {
   0012 C6s00r01            110 	lda	(_memmove_PARM_2 + 1)
   0015 B7*01               111 	sta	*(_memmove_sloc0_1_0 + 1)
   0017 C6s00r00            112 	lda	_memmove_PARM_2
   001A B7*00               113 	sta	*_memmove_sloc0_1_0
   001C C6s00r05            114 	lda	(_memmove_dst_1_1 + 1)
   001F B7*03               115 	sta	*(_memmove_sloc1_1_0 + 1)
   0021 C6s00r04            116 	lda	_memmove_dst_1_1
   0024 B7*02               117 	sta	*_memmove_sloc1_1_0
   0026 55*00               118 	ldhx	*_memmove_sloc0_1_0
   0028 75*02               119 	cphx	*_memmove_sloc1_1_0
   002A 91 03               120 	blt	00121$
   002C CCs00rF0            121 	jmp	00108$
   002F                     122 00121$:
   002F C6s00r01            123 	lda	(_memmove_PARM_2 + 1)
   0032 B7*03               124 	sta	*(_memmove_sloc1_1_0 + 1)
   0034 C6s00r00            125 	lda	_memmove_PARM_2
   0037 B7*02               126 	sta	*_memmove_sloc1_1_0
   0039 B6*03               127 	lda	*(_memmove_sloc1_1_0 + 1)
   003B CBs00r03            128 	add	(_memmove_PARM_3 + 1)
   003E B7*03               129 	sta	*(_memmove_sloc1_1_0 + 1)
   0040 B6*02               130 	lda	*_memmove_sloc1_1_0
   0042 C9s00r02            131 	adc	_memmove_PARM_3
   0045 B7*02               132 	sta	*_memmove_sloc1_1_0
   0047 C6s00r05            133 	lda	(_memmove_dst_1_1 + 1)
   004A B7*01               134 	sta	*(_memmove_sloc0_1_0 + 1)
   004C C6s00r04            135 	lda	_memmove_dst_1_1
   004F B7*00               136 	sta	*_memmove_sloc0_1_0
   0051 55*02               137 	ldhx	*_memmove_sloc1_1_0
   0053 75*00               138 	cphx	*_memmove_sloc0_1_0
   0055 22 03               139 	bhi	00122$
   0057 CCs00rF0            140 	jmp	00108$
   005A                     141 00122$:
                            142 ;../_memmove.c:104: d = ((char *)dst)+acount-1;
   005A C6s00r05            143 	lda	(_memmove_dst_1_1 + 1)
   005D CBs00r03            144 	add	(_memmove_PARM_3 + 1)
   0060 B7*03               145 	sta	*(_memmove_sloc1_1_0 + 1)
   0062 C6s00r04            146 	lda	_memmove_dst_1_1
   0065 C9s00r02            147 	adc	_memmove_PARM_3
   0068 B7*02               148 	sta	*_memmove_sloc1_1_0
   006A B6*03               149 	lda	*(_memmove_sloc1_1_0 + 1)
   006C A0 01               150 	sub	#0x01
   006E C7s00r09            151 	sta	(_memmove_d_1_1 + 1)
   0071 B6*02               152 	lda	*_memmove_sloc1_1_0
   0073 A2 00               153 	sbc	#0x00
   0075 C7s00r08            154 	sta	_memmove_d_1_1
                            155 ;../_memmove.c:105: s = ((char *)src)+acount-1;
   0078 C6s00r01            156 	lda	(_memmove_PARM_2 + 1)
   007B CBs00r03            157 	add	(_memmove_PARM_3 + 1)
   007E B7*03               158 	sta	*(_memmove_sloc1_1_0 + 1)
   0080 C6s00r00            159 	lda	_memmove_PARM_2
   0083 C9s00r02            160 	adc	_memmove_PARM_3
   0086 B7*02               161 	sta	*_memmove_sloc1_1_0
   0088 B6*03               162 	lda	*(_memmove_sloc1_1_0 + 1)
   008A A0 01               163 	sub	#0x01
   008C C7s00r0B            164 	sta	(_memmove_s_1_1 + 1)
   008F B6*02               165 	lda	*_memmove_sloc1_1_0
   0091 A2 00               166 	sbc	#0x00
                            167 ;../_memmove.c:106: while (acount--) {
   0093 C7s00r0A            168 	sta	_memmove_s_1_1
   0096 B7*02               169 	sta	*_memmove_sloc1_1_0
   0098 C6s00r0B            170 	lda	(_memmove_s_1_1 + 1)
   009B B7*03               171 	sta	*(_memmove_sloc1_1_0 + 1)
   009D C6s00r08            172 	lda	_memmove_d_1_1
   00A0 B7*00               173 	sta	*_memmove_sloc0_1_0
   00A2 C6s00r09            174 	lda	(_memmove_d_1_1 + 1)
   00A5 B7*01               175 	sta	*(_memmove_sloc0_1_0 + 1)
   00A7 C6s00r02            176 	lda	_memmove_PARM_3
   00AA B7*04               177 	sta	*_memmove_sloc2_1_0
   00AC C6s00r03            178 	lda	(_memmove_PARM_3 + 1)
   00AF B7*05               179 	sta	*(_memmove_sloc2_1_0 + 1)
   00B1                     180 00101$:
   00B1 4E*04*06            181 	mov	*_memmove_sloc2_1_0,*_memmove_sloc3_1_0
   00B4 4E*05*07            182 	mov	*(_memmove_sloc2_1_0 + 1),*(_memmove_sloc3_1_0 + 1)
   00B7 B6*05               183 	lda	*(_memmove_sloc2_1_0 + 1)
   00B9 A0 01               184 	sub	#0x01
   00BB B7*05               185 	sta	*(_memmove_sloc2_1_0 + 1)
   00BD B6*04               186 	lda	*_memmove_sloc2_1_0
   00BF A2 00               187 	sbc	#0x00
   00C1 B7*04               188 	sta	*_memmove_sloc2_1_0
   00C3 B6*07               189 	lda	*(_memmove_sloc3_1_0 + 1)
   00C5 BA*06               190 	ora	*_memmove_sloc3_1_0
   00C7 26 03               191 	bne	00123$
   00C9 CCs01r3A            192 	jmp	00109$
   00CC                     193 00123$:
                            194 ;../_memmove.c:107: *d-- = *s--;
   00CC 55*02               195 	ldhx	*_memmove_sloc1_1_0
   00CE F6                  196 	lda	,x
   00CF B7*06               197 	sta	*_memmove_sloc3_1_0
   00D1 B6*03               198 	lda	*(_memmove_sloc1_1_0 + 1)
   00D3 A0 01               199 	sub	#0x01
   00D5 B7*03               200 	sta	*(_memmove_sloc1_1_0 + 1)
   00D7 B6*02               201 	lda	*_memmove_sloc1_1_0
   00D9 A2 00               202 	sbc	#0x00
   00DB B7*02               203 	sta	*_memmove_sloc1_1_0
   00DD 55*00               204 	ldhx	*_memmove_sloc0_1_0
   00DF B6*06               205 	lda	*_memmove_sloc3_1_0
   00E1 F7                  206 	sta	,x
   00E2 B6*01               207 	lda	*(_memmove_sloc0_1_0 + 1)
   00E4 A0 01               208 	sub	#0x01
   00E6 B7*01               209 	sta	*(_memmove_sloc0_1_0 + 1)
   00E8 B6*00               210 	lda	*_memmove_sloc0_1_0
   00EA A2 00               211 	sbc	#0x00
   00EC B7*00               212 	sta	*_memmove_sloc0_1_0
   00EE 20 C1               213 	bra	00101$
   00F0                     214 00108$:
                            215 ;../_memmove.c:115: s = src;
                            216 ;../_memmove.c:116: while (acount--) {
   00F0 C6s00r00            217 	lda	_memmove_PARM_2
   00F3 B7*06               218 	sta	*_memmove_sloc3_1_0
   00F5 C6s00r01            219 	lda	(_memmove_PARM_2 + 1)
   00F8 B7*07               220 	sta	*(_memmove_sloc3_1_0 + 1)
   00FA C6s00r04            221 	lda	_memmove_dst_1_1
   00FD B7*04               222 	sta	*_memmove_sloc2_1_0
   00FF C6s00r05            223 	lda	(_memmove_dst_1_1 + 1)
   0102 B7*05               224 	sta	*(_memmove_sloc2_1_0 + 1)
   0104 C6s00r02            225 	lda	_memmove_PARM_3
   0107 B7*02               226 	sta	*_memmove_sloc1_1_0
   0109 C6s00r03            227 	lda	(_memmove_PARM_3 + 1)
   010C B7*03               228 	sta	*(_memmove_sloc1_1_0 + 1)
   010E                     229 00104$:
   010E 4E*02*00            230 	mov	*_memmove_sloc1_1_0,*_memmove_sloc0_1_0
   0111 4E*03*01            231 	mov	*(_memmove_sloc1_1_0 + 1),*(_memmove_sloc0_1_0 + 1)
   0114 B6*03               232 	lda	*(_memmove_sloc1_1_0 + 1)
   0116 A0 01               233 	sub	#0x01
   0118 B7*03               234 	sta	*(_memmove_sloc1_1_0 + 1)
   011A B6*02               235 	lda	*_memmove_sloc1_1_0
   011C A2 00               236 	sbc	#0x00
   011E B7*02               237 	sta	*_memmove_sloc1_1_0
   0120 B6*01               238 	lda	*(_memmove_sloc0_1_0 + 1)
   0122 BA*00               239 	ora	*_memmove_sloc0_1_0
   0124 27 14               240 	beq	00109$
   0126                     241 00124$:
                            242 ;../_memmove.c:117: *d++ = *s++;
   0126 55*06               243 	ldhx	*_memmove_sloc3_1_0
   0128 F6                  244 	lda	,x
   0129 AF 01               245 	aix	#1
   012B B7*00               246 	sta	*_memmove_sloc0_1_0
   012D 35*06               247 	sthx	*_memmove_sloc3_1_0
   012F 55*04               248 	ldhx	*_memmove_sloc2_1_0
   0131 B6*00               249 	lda	*_memmove_sloc0_1_0
   0133 F7                  250 	sta	,x
   0134 AF 01               251 	aix	#1
   0136 35*04               252 	sthx	*_memmove_sloc2_1_0
   0138 20 D4               253 	bra	00104$
   013A                     254 00109$:
                            255 ;../_memmove.c:121: return(ret);
   013A CEs00r06            256 	ldx	_memmove_ret_1_1
   013D C6s00r07            257 	lda	(_memmove_ret_1_1 + 1)
   0140                     258 00111$:
   0140 81                  259 	rts
                            260 	.area CSEG (CODE)
                            261 	.area CONST   (CODE)
                            262 	.area XINIT
                            263 	.area CABS    (ABS,CODE)

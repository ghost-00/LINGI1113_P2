                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:25:39 2013
                              5 ;--------------------------------------------------------
                              6 	.module gets
                              7 	.optsdcc -mhc08
                              8 	
                              9 	.area HOME (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG (CODE)
                             14 	.area XINIT
                             15 	.area CONST   (CODE)
                             16 	.area DSEG
                             17 	.area OSEG    (OVR)
                             18 	.area BSEG
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl _gets
                             25 ;--------------------------------------------------------
                             26 ;  ram data
                             27 ;--------------------------------------------------------
                             28 	.area DSEG
                             29 ;--------------------------------------------------------
                             30 ; overlayable items in  ram 
                             31 ;--------------------------------------------------------
                             32 	.area OSEG    (OVR)
                             33 ;--------------------------------------------------------
                             34 ; absolute external ram data
                             35 ;--------------------------------------------------------
                             36 	.area XABS    (ABS)
                             37 ;--------------------------------------------------------
                             38 ; external initialized ram data
                             39 ;--------------------------------------------------------
                             40 	.area XISEG
                             41 ;--------------------------------------------------------
                             42 ; extended address mode data
                             43 ;--------------------------------------------------------
                             44 	.area XSEG
   0000                      45 _gets_s_1_1:
   0000                      46 	.ds 2
   0002                      47 _gets_c_1_1:
   0002                      48 	.ds 1
   0003                      49 _gets_count_1_1:
   0003                      50 	.ds 2
                             51 ;--------------------------------------------------------
                             52 ; global & static initialisations
                             53 ;--------------------------------------------------------
                             54 	.area HOME (CODE)
                             55 	.area GSINIT (CODE)
                             56 	.area GSFINAL (CODE)
                             57 	.area GSINIT (CODE)
                             58 ;--------------------------------------------------------
                             59 ; Home
                             60 ;--------------------------------------------------------
                             61 	.area HOME (CODE)
                             62 	.area HOME (CODE)
                             63 ;--------------------------------------------------------
                             64 ; code
                             65 ;--------------------------------------------------------
                             66 	.area CSEG (CODE)
                             67 ;------------------------------------------------------------
                             68 ;Allocation info for local variables in function 'gets'
                             69 ;------------------------------------------------------------
                             70 ;s                         Allocated with name '_gets_s_1_1'
                             71 ;c                         Allocated with name '_gets_c_1_1'
                             72 ;count                     Allocated with name '_gets_count_1_1'
                             73 ;------------------------------------------------------------
                             74 ;../gets.c:3: char * gets(char *s) {
                             75 ;	-----------------------------------------
                             76 ;	 function gets
                             77 ;	-----------------------------------------
   0000                      78 _gets:
   0000 C7s00r01             79 	sta	(_gets_s_1_1 + 1)
   0003 CFs00r00             80 	stx	_gets_s_1_1
                             81 ;../gets.c:5: unsigned int count=0;
   0006 4F                   82 	clra
   0007 C7s00r03             83 	sta	_gets_count_1_1
   000A C7s00r04             84 	sta	(_gets_count_1_1 + 1)
                             85 ;../gets.c:7: while (1) {
   000D                      86 00109$:
                             87 ;../gets.c:8: c=getchar();
   000D CDs00r00             88 	jsr	_getchar
                             89 ;../gets.c:9: switch(c) {
   0010 C7s00r02             90 	sta	_gets_c_1_1
   0013 A1 08                91 	cmp	#0x08
   0015 27 10                92 	beq	00101$
   0017                      93 00118$:
   0017 C6s00r02             94 	lda	_gets_c_1_1
   001A A1 0A                95 	cmp	#0x0A
   001C 27 42                96 	beq	00105$
   001E                      97 00119$:
   001E C6s00r02             98 	lda	_gets_c_1_1
   0021 A1 0D                99 	cmp	#0x0D
   0023 27 3B               100 	beq	00105$
   0025                     101 00120$:
   0025 20 54               102 	bra	00106$
                            103 ;../gets.c:10: case '\b': // backspace
   0027                     104 00101$:
                            105 ;../gets.c:11: if (count) {
   0027 C6s00r04            106 	lda	(_gets_count_1_1 + 1)
   002A CAs00r03            107 	ora	_gets_count_1_1
   002D 27 DE               108 	beq	00109$
   002F                     109 00121$:
                            110 ;../gets.c:12: putchar ('\b');
   002F A6 08               111 	lda	#0x08
   0031 CDs00r00            112 	jsr	_putchar
                            113 ;../gets.c:13: putchar (' ');
   0034 A6 20               114 	lda	#0x20
   0036 CDs00r00            115 	jsr	_putchar
                            116 ;../gets.c:14: putchar ('\b');
   0039 A6 08               117 	lda	#0x08
   003B CDs00r00            118 	jsr	_putchar
                            119 ;../gets.c:15: s--;
   003E C6s00r01            120 	lda	(_gets_s_1_1 + 1)
   0041 A0 01               121 	sub	#0x01
   0043 C7s00r01            122 	sta	(_gets_s_1_1 + 1)
   0046 C6s00r00            123 	lda	_gets_s_1_1
   0049 A2 00               124 	sbc	#0x00
   004B C7s00r00            125 	sta	_gets_s_1_1
                            126 ;../gets.c:16: count--;
   004E C6s00r04            127 	lda	(_gets_count_1_1 + 1)
   0051 A0 01               128 	sub	#0x01
   0053 C7s00r04            129 	sta	(_gets_count_1_1 + 1)
   0056 C6s00r03            130 	lda	_gets_count_1_1
   0059 A2 00               131 	sbc	#0x00
   005B C7s00r03            132 	sta	_gets_count_1_1
                            133 ;../gets.c:18: break;
   005E 20 AD               134 	bra	00109$
                            135 ;../gets.c:20: case '\r': // CR or LF
   0060                     136 00105$:
                            137 ;../gets.c:21: putchar('\r');
   0060 A6 0D               138 	lda	#0x0D
   0062 CDs00r00            139 	jsr	_putchar
                            140 ;../gets.c:22: putchar('\n');
   0065 A6 0A               141 	lda	#0x0A
   0067 CDs00r00            142 	jsr	_putchar
                            143 ;../gets.c:23: *s=0;
   006A C6s00r00            144 	lda	_gets_s_1_1
   006D CEs00r01            145 	ldx	(_gets_s_1_1 + 1)
   0070 87                  146 	psha
   0071 8A                  147 	pulh
   0072 4F                  148 	clra
   0073 F7                  149 	sta	,x
                            150 ;../gets.c:24: return s;
   0074 CEs00r00            151 	ldx	_gets_s_1_1
   0077 C6s00r01            152 	lda	(_gets_s_1_1 + 1)
   007A 81                  153 	rts
                            154 ;../gets.c:25: default:
   007B                     155 00106$:
                            156 ;../gets.c:26: *s++=c;
   007B C6s00r00            157 	lda	_gets_s_1_1
   007E CEs00r01            158 	ldx	(_gets_s_1_1 + 1)
   0081 87                  159 	psha
   0082 8A                  160 	pulh
   0083 C6s00r02            161 	lda	_gets_c_1_1
   0086 F7                  162 	sta	,x
   0087 AF 01               163 	aix	#1
   0089 8B                  164 	pshh
   008A 86                  165 	pula
   008B C7s00r00            166 	sta	_gets_s_1_1
   008E CFs00r01            167 	stx	(_gets_s_1_1 + 1)
                            168 ;../gets.c:27: count++;
   0091 C6s00r04            169 	lda	(_gets_count_1_1 + 1)
   0094 4C                  170 	inca
   0095 C7s00r04            171 	sta	(_gets_count_1_1 + 1)
   0098 26 07               172 	bne	00122$
   009A C6s00r03            173 	lda	_gets_count_1_1
   009D 4C                  174 	inca
   009E C7s00r03            175 	sta	_gets_count_1_1
   00A1                     176 00122$:
                            177 ;../gets.c:28: putchar(c);
   00A1 C6s00r02            178 	lda	_gets_c_1_1
   00A4 CDs00r00            179 	jsr	_putchar
                            180 ;../gets.c:30: }
   00A7 CCs00r0D            181 	jmp	00109$
   00AA                     182 00111$:
   00AA 81                  183 	rts
                            184 	.area CSEG (CODE)
                            185 	.area CONST   (CODE)
                            186 	.area XINIT
                            187 	.area CABS    (ABS,CODE)

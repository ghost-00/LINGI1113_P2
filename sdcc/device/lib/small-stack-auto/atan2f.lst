                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:25:59 2013
                              5 ;--------------------------------------------------------
                              6 	.module atan2f
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _atan2f
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in internal ram 
                             34 ;--------------------------------------------------------
                             35 	.area OSEG    (OVR,DATA)
                             36 ;--------------------------------------------------------
                             37 ; indirectly addressable internal ram data
                             38 ;--------------------------------------------------------
                             39 	.area ISEG    (DATA)
                             40 ;--------------------------------------------------------
                             41 ; absolute internal ram data
                             42 ;--------------------------------------------------------
                             43 	.area IABS    (ABS,DATA)
                             44 	.area IABS    (ABS,DATA)
                             45 ;--------------------------------------------------------
                             46 ; bit data
                             47 ;--------------------------------------------------------
                             48 	.area BSEG    (BIT)
                             49 ;--------------------------------------------------------
                             50 ; paged external ram data
                             51 ;--------------------------------------------------------
                             52 	.area PSEG    (PAG,XDATA)
                             53 ;--------------------------------------------------------
                             54 ; external ram data
                             55 ;--------------------------------------------------------
                             56 	.area XSEG    (XDATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute external ram data
                             59 ;--------------------------------------------------------
                             60 	.area XABS    (ABS,XDATA)
                             61 ;--------------------------------------------------------
                             62 ; external initialized ram data
                             63 ;--------------------------------------------------------
                             64 	.area XISEG   (XDATA)
                             65 	.area HOME    (CODE)
                             66 	.area GSINIT0 (CODE)
                             67 	.area GSINIT1 (CODE)
                             68 	.area GSINIT2 (CODE)
                             69 	.area GSINIT3 (CODE)
                             70 	.area GSINIT4 (CODE)
                             71 	.area GSINIT5 (CODE)
                             72 	.area GSINIT  (CODE)
                             73 	.area GSFINAL (CODE)
                             74 	.area CSEG    (CODE)
                             75 ;--------------------------------------------------------
                             76 ; global & static initialisations
                             77 ;--------------------------------------------------------
                             78 	.area HOME    (CODE)
                             79 	.area GSINIT  (CODE)
                             80 	.area GSFINAL (CODE)
                             81 	.area GSINIT  (CODE)
                             82 ;--------------------------------------------------------
                             83 ; Home
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area HOME    (CODE)
                             87 ;--------------------------------------------------------
                             88 ; code
                             89 ;--------------------------------------------------------
                             90 	.area CSEG    (CODE)
                             91 ;------------------------------------------------------------
                             92 ;Allocation info for local variables in function 'atan2f'
                             93 ;------------------------------------------------------------
                             94 ;y                         Allocated to stack - offset -6
                             95 ;x                         Allocated to stack - offset 1
                             96 ;r                         Allocated to stack - offset 5
                             97 ;sloc0                     Allocated to stack - offset 9
                             98 ;------------------------------------------------------------
                             99 ;	atan2f.c:24: float atan2f(const float x, const float y)
                            100 ;	-----------------------------------------
                            101 ;	 function atan2f
                            102 ;	-----------------------------------------
   0000                     103 _atan2f:
                    0002    104 	ar2 = 0x02
                    0003    105 	ar3 = 0x03
                    0004    106 	ar4 = 0x04
                    0005    107 	ar5 = 0x05
                    0006    108 	ar6 = 0x06
                    0007    109 	ar7 = 0x07
                    0000    110 	ar0 = 0x00
                    0001    111 	ar1 = 0x01
   0000 C0*00               112 	push	_bp
   0002 85 81*00            113 	mov	_bp,sp
   0005 C0 82               114 	push	dpl
   0007 C0 83               115 	push	dph
   0009 C0 F0               116 	push	b
   000B C0 E0               117 	push	acc
   000D E5 81               118 	mov	a,sp
   000F 24 0C               119 	add	a,#0x0c
   0011 F5 81               120 	mov	sp,a
                            121 ;	atan2f.c:28: if ((x==0.0) && (y==0.0))
   0013 A8*00               122 	mov	r0,_bp
   0015 08                  123 	inc	r0
   0016 E6                  124 	mov	a,@r0
   0017 08                  125 	inc	r0
   0018 46                  126 	orl	a,@r0
   0019 08                  127 	inc	r0
   001A 46                  128 	orl	a,@r0
   001B 08                  129 	inc	r0
   001C 46                  130 	orl	a,@r0
   001D 70 1D               131 	jnz	00102$
   001F E5*00               132 	mov	a,_bp
   0021 24 FA               133 	add	a,#0xfa
   0023 F8                  134 	mov	r0,a
   0024 E6                  135 	mov	a,@r0
   0025 08                  136 	inc	r0
   0026 46                  137 	orl	a,@r0
   0027 08                  138 	inc	r0
   0028 46                  139 	orl	a,@r0
   0029 08                  140 	inc	r0
   002A 46                  141 	orl	a,@r0
   002B 70 0F               142 	jnz	00102$
                            143 ;	atan2f.c:30: errno=EDOM;
   002D 75*00 21            144 	mov	_errno,#0x21
   0030 E4                  145 	clr	a
   0031 F5*01               146 	mov	(_errno + 1),a
                            147 ;	atan2f.c:31: return 0.0;
   0033 90 00 00            148 	mov	dptr,#(0x00&0x00ff)
   0036 E4                  149 	clr	a
   0037 F5 F0               150 	mov	b,a
   0039 02s02r5E            151 	ljmp	00109$
   003C                     152 00102$:
                            153 ;	atan2f.c:34: if(fabsf(y)>=fabsf(x))
   003C E5*00               154 	mov	a,_bp
   003E 24 FA               155 	add	a,#0xfa
   0040 F8                  156 	mov	r0,a
   0041 86 82               157 	mov	dpl,@r0
   0043 08                  158 	inc	r0
   0044 86 83               159 	mov	dph,@r0
   0046 08                  160 	inc	r0
   0047 86 F0               161 	mov	b,@r0
   0049 08                  162 	inc	r0
   004A E6                  163 	mov	a,@r0
   004B 12s00r00            164 	lcall	_fabsf
   004E C8                  165 	xch	a,r0
   004F E5*00               166 	mov	a,_bp
   0051 24 09               167 	add	a,#0x09
   0053 C8                  168 	xch	a,r0
   0054 A6 82               169 	mov	@r0,dpl
   0056 08                  170 	inc	r0
   0057 A6 83               171 	mov	@r0,dph
   0059 08                  172 	inc	r0
   005A A6 F0               173 	mov	@r0,b
   005C 08                  174 	inc	r0
   005D F6                  175 	mov	@r0,a
   005E A8*00               176 	mov	r0,_bp
   0060 08                  177 	inc	r0
   0061 86 82               178 	mov	dpl,@r0
   0063 08                  179 	inc	r0
   0064 86 83               180 	mov	dph,@r0
   0066 08                  181 	inc	r0
   0067 86 F0               182 	mov	b,@r0
   0069 08                  183 	inc	r0
   006A E6                  184 	mov	a,@r0
   006B 12s00r00            185 	lcall	_fabsf
   006E AC 82               186 	mov	r4,dpl
   0070 AD 83               187 	mov	r5,dph
   0072 AA F0               188 	mov	r2,b
   0074 FB                  189 	mov	r3,a
   0075 C0 04               190 	push	ar4
   0077 C0 05               191 	push	ar5
   0079 C0 02               192 	push	ar2
   007B C0 03               193 	push	ar3
   007D E5*00               194 	mov	a,_bp
   007F 24 09               195 	add	a,#0x09
   0081 F8                  196 	mov	r0,a
   0082 86 82               197 	mov	dpl,@r0
   0084 08                  198 	inc	r0
   0085 86 83               199 	mov	dph,@r0
   0087 08                  200 	inc	r0
   0088 86 F0               201 	mov	b,@r0
   008A 08                  202 	inc	r0
   008B E6                  203 	mov	a,@r0
   008C 12s00r00            204 	lcall	___fslt
   008F AA 82               205 	mov	r2,dpl
   0091 E5 81               206 	mov	a,sp
   0093 24 FC               207 	add	a,#0xfc
   0095 F5 81               208 	mov	sp,a
   0097 EA                  209 	mov	a,r2
   0098 60 03               210 	jz	00123$
   009A 02s01r8E            211 	ljmp	00107$
   009D                     212 00123$:
                            213 ;	atan2f.c:36: r=atanf(x/y);
   009D E5*00               214 	mov	a,_bp
   009F 24 FA               215 	add	a,#0xfa
   00A1 F8                  216 	mov	r0,a
   00A2 E6                  217 	mov	a,@r0
   00A3 C0 E0               218 	push	acc
   00A5 08                  219 	inc	r0
   00A6 E6                  220 	mov	a,@r0
   00A7 C0 E0               221 	push	acc
   00A9 08                  222 	inc	r0
   00AA E6                  223 	mov	a,@r0
   00AB C0 E0               224 	push	acc
   00AD 08                  225 	inc	r0
   00AE E6                  226 	mov	a,@r0
   00AF C0 E0               227 	push	acc
   00B1 A8*00               228 	mov	r0,_bp
   00B3 08                  229 	inc	r0
   00B4 86 82               230 	mov	dpl,@r0
   00B6 08                  231 	inc	r0
   00B7 86 83               232 	mov	dph,@r0
   00B9 08                  233 	inc	r0
   00BA 86 F0               234 	mov	b,@r0
   00BC 08                  235 	inc	r0
   00BD E6                  236 	mov	a,@r0
   00BE 12s00r00            237 	lcall	___fsdiv
   00C1 AA 82               238 	mov	r2,dpl
   00C3 AB 83               239 	mov	r3,dph
   00C5 AC F0               240 	mov	r4,b
   00C7 FD                  241 	mov	r5,a
   00C8 E5 81               242 	mov	a,sp
   00CA 24 FC               243 	add	a,#0xfc
   00CC F5 81               244 	mov	sp,a
   00CE 8A 82               245 	mov	dpl,r2
   00D0 8B 83               246 	mov	dph,r3
   00D2 8C F0               247 	mov	b,r4
   00D4 ED                  248 	mov	a,r5
   00D5 12s00r00            249 	lcall	_atanf
   00D8 AA 82               250 	mov	r2,dpl
   00DA AB 83               251 	mov	r3,dph
   00DC AC F0               252 	mov	r4,b
   00DE FD                  253 	mov	r5,a
   00DF E5*00               254 	mov	a,_bp
   00E1 24 05               255 	add	a,#0x05
   00E3 F8                  256 	mov	r0,a
   00E4 A6 02               257 	mov	@r0,ar2
   00E6 08                  258 	inc	r0
   00E7 A6 03               259 	mov	@r0,ar3
   00E9 08                  260 	inc	r0
   00EA A6 04               261 	mov	@r0,ar4
   00EC 08                  262 	inc	r0
   00ED A6 05               263 	mov	@r0,ar5
                            264 ;	atan2f.c:37: if(y<0.0) r+=(x>=0?PI:-PI);
   00EF E4                  265 	clr	a
   00F0 C0 E0               266 	push	acc
   00F2 C0 E0               267 	push	acc
   00F4 C0 E0               268 	push	acc
   00F6 C0 E0               269 	push	acc
   00F8 E5*00               270 	mov	a,_bp
   00FA 24 FA               271 	add	a,#0xfa
   00FC F8                  272 	mov	r0,a
   00FD 86 82               273 	mov	dpl,@r0
   00FF 08                  274 	inc	r0
   0100 86 83               275 	mov	dph,@r0
   0102 08                  276 	inc	r0
   0103 86 F0               277 	mov	b,@r0
   0105 08                  278 	inc	r0
   0106 E6                  279 	mov	a,@r0
   0107 12s00r00            280 	lcall	___fslt
   010A AE 82               281 	mov	r6,dpl
   010C E5 81               282 	mov	a,sp
   010E 24 FC               283 	add	a,#0xfc
   0110 F5 81               284 	mov	sp,a
   0112 EE                  285 	mov	a,r6
   0113 70 03               286 	jnz	00124$
   0115 02s02r4F            287 	ljmp	00108$
   0118                     288 00124$:
   0118 E4                  289 	clr	a
   0119 C0 E0               290 	push	acc
   011B C0 E0               291 	push	acc
   011D C0 E0               292 	push	acc
   011F C0 E0               293 	push	acc
   0121 A8*00               294 	mov	r0,_bp
   0123 08                  295 	inc	r0
   0124 86 82               296 	mov	dpl,@r0
   0126 08                  297 	inc	r0
   0127 86 83               298 	mov	dph,@r0
   0129 08                  299 	inc	r0
   012A 86 F0               300 	mov	b,@r0
   012C 08                  301 	inc	r0
   012D E6                  302 	mov	a,@r0
   012E 12s00r00            303 	lcall	___fslt
   0131 AE 82               304 	mov	r6,dpl
   0133 E5 81               305 	mov	a,sp
   0135 24 FC               306 	add	a,#0xfc
   0137 F5 81               307 	mov	sp,a
   0139 EE                  308 	mov	a,r6
   013A B4 01 00            309 	cjne	a,#0x01,00125$
   013D                     310 00125$:
   013D E4                  311 	clr	a
   013E 33                  312 	rlc	a
   013F FE                  313 	mov	r6,a
   0140 60 0A               314 	jz	00111$
   0142 7E DB               315 	mov	r6,#0xDB
   0144 7F 0F               316 	mov	r7,#0x0F
   0146 7A 49               317 	mov	r2,#0x49
   0148 7B 40               318 	mov	r3,#0x40
   014A 80 08               319 	sjmp	00112$
   014C                     320 00111$:
   014C 7E DB               321 	mov	r6,#0xDB
   014E 7F 0F               322 	mov	r7,#0x0F
   0150 7A 49               323 	mov	r2,#0x49
   0152 7B C0               324 	mov	r3,#0xC0
   0154                     325 00112$:
   0154 C0 06               326 	push	ar6
   0156 C0 07               327 	push	ar7
   0158 C0 02               328 	push	ar2
   015A C0 03               329 	push	ar3
   015C E5*00               330 	mov	a,_bp
   015E 24 05               331 	add	a,#0x05
   0160 F8                  332 	mov	r0,a
   0161 86 82               333 	mov	dpl,@r0
   0163 08                  334 	inc	r0
   0164 86 83               335 	mov	dph,@r0
   0166 08                  336 	inc	r0
   0167 86 F0               337 	mov	b,@r0
   0169 08                  338 	inc	r0
   016A E6                  339 	mov	a,@r0
   016B 12s00r00            340 	lcall	___fsadd
   016E AA 82               341 	mov	r2,dpl
   0170 AB 83               342 	mov	r3,dph
   0172 AC F0               343 	mov	r4,b
   0174 FD                  344 	mov	r5,a
   0175 E5 81               345 	mov	a,sp
   0177 24 FC               346 	add	a,#0xfc
   0179 F5 81               347 	mov	sp,a
   017B E5*00               348 	mov	a,_bp
   017D 24 05               349 	add	a,#0x05
   017F F8                  350 	mov	r0,a
   0180 A6 02               351 	mov	@r0,ar2
   0182 08                  352 	inc	r0
   0183 A6 03               353 	mov	@r0,ar3
   0185 08                  354 	inc	r0
   0186 A6 04               355 	mov	@r0,ar4
   0188 08                  356 	inc	r0
   0189 A6 05               357 	mov	@r0,ar5
   018B 02s02r4F            358 	ljmp	00108$
   018E                     359 00107$:
                            360 ;	atan2f.c:41: r=-atanf(y/x);
   018E A8*00               361 	mov	r0,_bp
   0190 08                  362 	inc	r0
   0191 E6                  363 	mov	a,@r0
   0192 C0 E0               364 	push	acc
   0194 08                  365 	inc	r0
   0195 E6                  366 	mov	a,@r0
   0196 C0 E0               367 	push	acc
   0198 08                  368 	inc	r0
   0199 E6                  369 	mov	a,@r0
   019A C0 E0               370 	push	acc
   019C 08                  371 	inc	r0
   019D E6                  372 	mov	a,@r0
   019E C0 E0               373 	push	acc
   01A0 E5*00               374 	mov	a,_bp
   01A2 24 FA               375 	add	a,#0xfa
   01A4 F8                  376 	mov	r0,a
   01A5 86 82               377 	mov	dpl,@r0
   01A7 08                  378 	inc	r0
   01A8 86 83               379 	mov	dph,@r0
   01AA 08                  380 	inc	r0
   01AB 86 F0               381 	mov	b,@r0
   01AD 08                  382 	inc	r0
   01AE E6                  383 	mov	a,@r0
   01AF 12s00r00            384 	lcall	___fsdiv
   01B2 AA 82               385 	mov	r2,dpl
   01B4 AB 83               386 	mov	r3,dph
   01B6 AC F0               387 	mov	r4,b
   01B8 FD                  388 	mov	r5,a
   01B9 E5 81               389 	mov	a,sp
   01BB 24 FC               390 	add	a,#0xfc
   01BD F5 81               391 	mov	sp,a
   01BF 8A 82               392 	mov	dpl,r2
   01C1 8B 83               393 	mov	dph,r3
   01C3 8C F0               394 	mov	b,r4
   01C5 ED                  395 	mov	a,r5
   01C6 12s00r00            396 	lcall	_atanf
   01C9 AA 82               397 	mov	r2,dpl
   01CB AB 83               398 	mov	r3,dph
   01CD AC F0               399 	mov	r4,b
   01CF B2 E7               400 	cpl	acc.7
   01D1 FD                  401 	mov	r5,a
   01D2 E5*00               402 	mov	a,_bp
   01D4 24 05               403 	add	a,#0x05
   01D6 F8                  404 	mov	r0,a
   01D7 A6 02               405 	mov	@r0,ar2
   01D9 08                  406 	inc	r0
   01DA A6 03               407 	mov	@r0,ar3
   01DC 08                  408 	inc	r0
   01DD A6 04               409 	mov	@r0,ar4
   01DF 08                  410 	inc	r0
   01E0 A6 05               411 	mov	@r0,ar5
                            412 ;	atan2f.c:42: r+=(x<0.0?-HALF_PI:HALF_PI);
   01E2 E4                  413 	clr	a
   01E3 C0 E0               414 	push	acc
   01E5 C0 E0               415 	push	acc
   01E7 C0 E0               416 	push	acc
   01E9 C0 E0               417 	push	acc
   01EB A8*00               418 	mov	r0,_bp
   01ED 08                  419 	inc	r0
   01EE 86 82               420 	mov	dpl,@r0
   01F0 08                  421 	inc	r0
   01F1 86 83               422 	mov	dph,@r0
   01F3 08                  423 	inc	r0
   01F4 86 F0               424 	mov	b,@r0
   01F6 08                  425 	inc	r0
   01F7 E6                  426 	mov	a,@r0
   01F8 12s00r00            427 	lcall	___fslt
   01FB AA 82               428 	mov	r2,dpl
   01FD E5 81               429 	mov	a,sp
   01FF 24 FC               430 	add	a,#0xfc
   0201 F5 81               431 	mov	sp,a
   0203 EA                  432 	mov	a,r2
   0204 60 0A               433 	jz	00113$
   0206 7A DB               434 	mov	r2,#0xDB
   0208 7B 0F               435 	mov	r3,#0x0F
   020A 7C C9               436 	mov	r4,#0xC9
   020C 7D BF               437 	mov	r5,#0xBF
   020E 80 08               438 	sjmp	00114$
   0210                     439 00113$:
   0210 7A DB               440 	mov	r2,#0xDB
   0212 7B 0F               441 	mov	r3,#0x0F
   0214 7C C9               442 	mov	r4,#0xC9
   0216 7D 3F               443 	mov	r5,#0x3F
   0218                     444 00114$:
   0218 C0 02               445 	push	ar2
   021A C0 03               446 	push	ar3
   021C C0 04               447 	push	ar4
   021E C0 05               448 	push	ar5
   0220 E5*00               449 	mov	a,_bp
   0222 24 05               450 	add	a,#0x05
   0224 F8                  451 	mov	r0,a
   0225 86 82               452 	mov	dpl,@r0
   0227 08                  453 	inc	r0
   0228 86 83               454 	mov	dph,@r0
   022A 08                  455 	inc	r0
   022B 86 F0               456 	mov	b,@r0
   022D 08                  457 	inc	r0
   022E E6                  458 	mov	a,@r0
   022F 12s00r00            459 	lcall	___fsadd
   0232 AA 82               460 	mov	r2,dpl
   0234 AB 83               461 	mov	r3,dph
   0236 AC F0               462 	mov	r4,b
   0238 FD                  463 	mov	r5,a
   0239 E5 81               464 	mov	a,sp
   023B 24 FC               465 	add	a,#0xfc
   023D F5 81               466 	mov	sp,a
   023F E5*00               467 	mov	a,_bp
   0241 24 05               468 	add	a,#0x05
   0243 F8                  469 	mov	r0,a
   0244 A6 02               470 	mov	@r0,ar2
   0246 08                  471 	inc	r0
   0247 A6 03               472 	mov	@r0,ar3
   0249 08                  473 	inc	r0
   024A A6 04               474 	mov	@r0,ar4
   024C 08                  475 	inc	r0
   024D A6 05               476 	mov	@r0,ar5
   024F                     477 00108$:
                            478 ;	atan2f.c:44: return r;
   024F E5*00               479 	mov	a,_bp
   0251 24 05               480 	add	a,#0x05
   0253 F8                  481 	mov	r0,a
   0254 86 82               482 	mov	dpl,@r0
   0256 08                  483 	inc	r0
   0257 86 83               484 	mov	dph,@r0
   0259 08                  485 	inc	r0
   025A 86 F0               486 	mov	b,@r0
   025C 08                  487 	inc	r0
   025D E6                  488 	mov	a,@r0
   025E                     489 00109$:
   025E 85*00 81            490 	mov	sp,_bp
   0261 D0*00               491 	pop	_bp
   0263 22                  492 	ret
                            493 	.area CSEG    (CODE)
                            494 	.area CONST   (CODE)
                            495 	.area XINIT   (CODE)
                            496 	.area CABS    (ABS,CODE)

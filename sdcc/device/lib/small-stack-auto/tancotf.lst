                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:25:58 2013
                              5 ;--------------------------------------------------------
                              6 	.module tancotf
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _tancotf
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in internal ram 
                             34 ;--------------------------------------------------------
                             35 	.area OSEG    (OVR,DATA)
                             36 ;--------------------------------------------------------
                             37 ; indirectly addressable internal ram data
                             38 ;--------------------------------------------------------
                             39 	.area ISEG    (DATA)
                             40 ;--------------------------------------------------------
                             41 ; absolute internal ram data
                             42 ;--------------------------------------------------------
                             43 	.area IABS    (ABS,DATA)
                             44 	.area IABS    (ABS,DATA)
                             45 ;--------------------------------------------------------
                             46 ; bit data
                             47 ;--------------------------------------------------------
                             48 	.area BSEG    (BIT)
                             49 ;--------------------------------------------------------
                             50 ; paged external ram data
                             51 ;--------------------------------------------------------
                             52 	.area PSEG    (PAG,XDATA)
                             53 ;--------------------------------------------------------
                             54 ; external ram data
                             55 ;--------------------------------------------------------
                             56 	.area XSEG    (XDATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute external ram data
                             59 ;--------------------------------------------------------
                             60 	.area XABS    (ABS,XDATA)
                             61 ;--------------------------------------------------------
                             62 ; external initialized ram data
                             63 ;--------------------------------------------------------
                             64 	.area XISEG   (XDATA)
                             65 	.area HOME    (CODE)
                             66 	.area GSINIT0 (CODE)
                             67 	.area GSINIT1 (CODE)
                             68 	.area GSINIT2 (CODE)
                             69 	.area GSINIT3 (CODE)
                             70 	.area GSINIT4 (CODE)
                             71 	.area GSINIT5 (CODE)
                             72 	.area GSINIT  (CODE)
                             73 	.area GSFINAL (CODE)
                             74 	.area CSEG    (CODE)
                             75 ;--------------------------------------------------------
                             76 ; global & static initialisations
                             77 ;--------------------------------------------------------
                             78 	.area HOME    (CODE)
                             79 	.area GSINIT  (CODE)
                             80 	.area GSFINAL (CODE)
                             81 	.area GSINIT  (CODE)
                             82 ;--------------------------------------------------------
                             83 ; Home
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area HOME    (CODE)
                             87 ;--------------------------------------------------------
                             88 ; code
                             89 ;--------------------------------------------------------
                             90 	.area CSEG    (CODE)
                             91 ;------------------------------------------------------------
                             92 ;Allocation info for local variables in function 'tancotf'
                             93 ;------------------------------------------------------------
                             94 ;iscotan                   Allocated to stack - offset -4
                             95 ;x                         Allocated to stack - offset 1
                             96 ;f                         Allocated to stack - offset 5
                             97 ;g                         Allocated to stack - offset 9
                             98 ;xn                        Allocated to stack - offset 13
                             99 ;xnum                      Allocated to stack - offset 17
                            100 ;xden                      Allocated to stack - offset 21
                            101 ;n                         Allocated to stack - offset 25
                            102 ;sloc0                     Allocated to stack - offset 27
                            103 ;------------------------------------------------------------
                            104 ;	tancotf.c:42: float tancotf(const float x, const int iscotan)
                            105 ;	-----------------------------------------
                            106 ;	 function tancotf
                            107 ;	-----------------------------------------
   0000                     108 _tancotf:
                    0002    109 	ar2 = 0x02
                    0003    110 	ar3 = 0x03
                    0004    111 	ar4 = 0x04
                    0005    112 	ar5 = 0x05
                    0006    113 	ar6 = 0x06
                    0007    114 	ar7 = 0x07
                    0000    115 	ar0 = 0x00
                    0001    116 	ar1 = 0x01
   0000 C0*00               117 	push	_bp
   0002 85 81*00            118 	mov	_bp,sp
   0005 C0 82               119 	push	dpl
   0007 C0 83               120 	push	dph
   0009 C0 F0               121 	push	b
   000B C0 E0               122 	push	acc
   000D E5 81               123 	mov	a,sp
   000F 24 1E               124 	add	a,#0x1e
   0011 F5 81               125 	mov	sp,a
                            126 ;	tancotf.c:47: if (fabsf(x) > YMAX)
   0013 A8*00               127 	mov	r0,_bp
   0015 08                  128 	inc	r0
   0016 86 82               129 	mov	dpl,@r0
   0018 08                  130 	inc	r0
   0019 86 83               131 	mov	dph,@r0
   001B 08                  132 	inc	r0
   001C 86 F0               133 	mov	b,@r0
   001E 08                  134 	inc	r0
   001F E6                  135 	mov	a,@r0
   0020 12s00r00            136 	lcall	_fabsf
   0023 AE 82               137 	mov	r6,dpl
   0025 AF 83               138 	mov	r7,dph
   0027 AA F0               139 	mov	r2,b
   0029 FB                  140 	mov	r3,a
   002A E4                  141 	clr	a
   002B C0 E0               142 	push	acc
   002D 74 08               143 	mov	a,#0x08
   002F C0 E0               144 	push	acc
   0031 74 C9               145 	mov	a,#0xC9
   0033 C0 E0               146 	push	acc
   0035 74 45               147 	mov	a,#0x45
   0037 C0 E0               148 	push	acc
   0039 8E 82               149 	mov	dpl,r6
   003B 8F 83               150 	mov	dph,r7
   003D 8A F0               151 	mov	b,r2
   003F EB                  152 	mov	a,r3
   0040 12s00r00            153 	lcall	___fsgt
   0043 AA 82               154 	mov	r2,dpl
   0045 E5 81               155 	mov	a,sp
   0047 24 FC               156 	add	a,#0xfc
   0049 F5 81               157 	mov	sp,a
   004B EA                  158 	mov	a,r2
   004C 60 0F               159 	jz	00102$
                            160 ;	tancotf.c:49: errno = ERANGE;
   004E 75*00 22            161 	mov	_errno,#0x22
   0051 E4                  162 	clr	a
   0052 F5*01               163 	mov	(_errno + 1),a
                            164 ;	tancotf.c:50: return 0.0;
   0054 90 00 00            165 	mov	dptr,#(0x00&0x00ff)
   0057 E4                  166 	clr	a
   0058 F5 F0               167 	mov	b,a
   005A 02s05rAA            168 	ljmp	00115$
   005D                     169 00102$:
                            170 ;	tancotf.c:54: n=(x*TWO_O_PI+(x>0.0?0.5:-0.5)); /*works for +-x*/
   005D A8*00               171 	mov	r0,_bp
   005F 08                  172 	inc	r0
   0060 E6                  173 	mov	a,@r0
   0061 C0 E0               174 	push	acc
   0063 08                  175 	inc	r0
   0064 E6                  176 	mov	a,@r0
   0065 C0 E0               177 	push	acc
   0067 08                  178 	inc	r0
   0068 E6                  179 	mov	a,@r0
   0069 C0 E0               180 	push	acc
   006B 08                  181 	inc	r0
   006C E6                  182 	mov	a,@r0
   006D C0 E0               183 	push	acc
   006F 90 F9 83            184 	mov	dptr,#0xF983
   0072 75 F0 22            185 	mov	b,#0x22
   0075 74 3F               186 	mov	a,#0x3F
   0077 12s00r00            187 	lcall	___fsmul
   007A AA 82               188 	mov	r2,dpl
   007C AB 83               189 	mov	r3,dph
   007E AC F0               190 	mov	r4,b
   0080 FD                  191 	mov	r5,a
   0081 E5 81               192 	mov	a,sp
   0083 24 FC               193 	add	a,#0xfc
   0085 F5 81               194 	mov	sp,a
   0087 C0 02               195 	push	ar2
   0089 C0 03               196 	push	ar3
   008B C0 04               197 	push	ar4
   008D C0 05               198 	push	ar5
   008F E4                  199 	clr	a
   0090 C0 E0               200 	push	acc
   0092 C0 E0               201 	push	acc
   0094 C0 E0               202 	push	acc
   0096 C0 E0               203 	push	acc
   0098 A8*00               204 	mov	r0,_bp
   009A 08                  205 	inc	r0
   009B 86 82               206 	mov	dpl,@r0
   009D 08                  207 	inc	r0
   009E 86 83               208 	mov	dph,@r0
   00A0 08                  209 	inc	r0
   00A1 86 F0               210 	mov	b,@r0
   00A3 08                  211 	inc	r0
   00A4 E6                  212 	mov	a,@r0
   00A5 12s00r00            213 	lcall	___fsgt
   00A8 AE 82               214 	mov	r6,dpl
   00AA E5 81               215 	mov	a,sp
   00AC 24 FC               216 	add	a,#0xfc
   00AE F5 81               217 	mov	sp,a
   00B0 D0 05               218 	pop	ar5
   00B2 D0 04               219 	pop	ar4
   00B4 D0 03               220 	pop	ar3
   00B6 D0 02               221 	pop	ar2
   00B8 EE                  222 	mov	a,r6
   00B9 60 12               223 	jz	00117$
   00BB E5*00               224 	mov	a,_bp
   00BD 24 1B               225 	add	a,#0x1b
   00BF F8                  226 	mov	r0,a
   00C0 76 00               227 	mov	@r0,#0x00
   00C2 08                  228 	inc	r0
   00C3 76 00               229 	mov	@r0,#0x00
   00C5 08                  230 	inc	r0
   00C6 76 00               231 	mov	@r0,#0x00
   00C8 08                  232 	inc	r0
   00C9 76 3F               233 	mov	@r0,#0x3F
   00CB 80 10               234 	sjmp	00118$
   00CD                     235 00117$:
   00CD E5*00               236 	mov	a,_bp
   00CF 24 1B               237 	add	a,#0x1b
   00D1 F8                  238 	mov	r0,a
   00D2 76 00               239 	mov	@r0,#0x00
   00D4 08                  240 	inc	r0
   00D5 76 00               241 	mov	@r0,#0x00
   00D7 08                  242 	inc	r0
   00D8 76 00               243 	mov	@r0,#0x00
   00DA 08                  244 	inc	r0
   00DB 76 BF               245 	mov	@r0,#0xBF
   00DD                     246 00118$:
   00DD E5*00               247 	mov	a,_bp
   00DF 24 1B               248 	add	a,#0x1b
   00E1 F8                  249 	mov	r0,a
   00E2 E6                  250 	mov	a,@r0
   00E3 C0 E0               251 	push	acc
   00E5 08                  252 	inc	r0
   00E6 E6                  253 	mov	a,@r0
   00E7 C0 E0               254 	push	acc
   00E9 08                  255 	inc	r0
   00EA E6                  256 	mov	a,@r0
   00EB C0 E0               257 	push	acc
   00ED 08                  258 	inc	r0
   00EE E6                  259 	mov	a,@r0
   00EF C0 E0               260 	push	acc
   00F1 8A 82               261 	mov	dpl,r2
   00F3 8B 83               262 	mov	dph,r3
   00F5 8C F0               263 	mov	b,r4
   00F7 ED                  264 	mov	a,r5
   00F8 12s00r00            265 	lcall	___fsadd
   00FB AA 82               266 	mov	r2,dpl
   00FD AB 83               267 	mov	r3,dph
   00FF AC F0               268 	mov	r4,b
   0101 FD                  269 	mov	r5,a
   0102 E5 81               270 	mov	a,sp
   0104 24 FC               271 	add	a,#0xfc
   0106 F5 81               272 	mov	sp,a
   0108 8A 82               273 	mov	dpl,r2
   010A 8B 83               274 	mov	dph,r3
   010C 8C F0               275 	mov	b,r4
   010E ED                  276 	mov	a,r5
   010F 12s00r00            277 	lcall	___fs2sint
   0112 AA 82               278 	mov	r2,dpl
   0114 AB 83               279 	mov	r3,dph
   0116 E5*00               280 	mov	a,_bp
   0118 24 19               281 	add	a,#0x19
   011A F8                  282 	mov	r0,a
   011B A6 02               283 	mov	@r0,ar2
   011D 08                  284 	inc	r0
   011E A6 03               285 	mov	@r0,ar3
                            286 ;	tancotf.c:55: xn=n;
   0120 E5*00               287 	mov	a,_bp
   0122 24 19               288 	add	a,#0x19
   0124 F8                  289 	mov	r0,a
   0125 86 82               290 	mov	dpl,@r0
   0127 08                  291 	inc	r0
   0128 86 83               292 	mov	dph,@r0
   012A 12s00r00            293 	lcall	___sint2fs
   012D AC 82               294 	mov	r4,dpl
   012F AD 83               295 	mov	r5,dph
   0131 AE F0               296 	mov	r6,b
   0133 FF                  297 	mov	r7,a
   0134 E5*00               298 	mov	a,_bp
   0136 24 0D               299 	add	a,#0x0d
   0138 F8                  300 	mov	r0,a
   0139 A6 04               301 	mov	@r0,ar4
   013B 08                  302 	inc	r0
   013C A6 05               303 	mov	@r0,ar5
   013E 08                  304 	inc	r0
   013F A6 06               305 	mov	@r0,ar6
   0141 08                  306 	inc	r0
   0142 A6 07               307 	mov	@r0,ar7
                            308 ;	tancotf.c:57: xnum=(int)x;
   0144 A8*00               309 	mov	r0,_bp
   0146 08                  310 	inc	r0
   0147 86 82               311 	mov	dpl,@r0
   0149 08                  312 	inc	r0
   014A 86 83               313 	mov	dph,@r0
   014C 08                  314 	inc	r0
   014D 86 F0               315 	mov	b,@r0
   014F 08                  316 	inc	r0
   0150 E6                  317 	mov	a,@r0
   0151 12s00r00            318 	lcall	___fs2sint
   0154 12s00r00            319 	lcall	___sint2fs
   0157 AA 82               320 	mov	r2,dpl
   0159 AB 83               321 	mov	r3,dph
   015B AC F0               322 	mov	r4,b
   015D FD                  323 	mov	r5,a
   015E E5*00               324 	mov	a,_bp
   0160 24 11               325 	add	a,#0x11
   0162 F8                  326 	mov	r0,a
   0163 A6 02               327 	mov	@r0,ar2
   0165 08                  328 	inc	r0
   0166 A6 03               329 	mov	@r0,ar3
   0168 08                  330 	inc	r0
   0169 A6 04               331 	mov	@r0,ar4
   016B 08                  332 	inc	r0
   016C A6 05               333 	mov	@r0,ar5
                            334 ;	tancotf.c:58: xden=x-xnum;
   016E E5*00               335 	mov	a,_bp
   0170 24 11               336 	add	a,#0x11
   0172 F8                  337 	mov	r0,a
   0173 E6                  338 	mov	a,@r0
   0174 C0 E0               339 	push	acc
   0176 08                  340 	inc	r0
   0177 E6                  341 	mov	a,@r0
   0178 C0 E0               342 	push	acc
   017A 08                  343 	inc	r0
   017B E6                  344 	mov	a,@r0
   017C C0 E0               345 	push	acc
   017E 08                  346 	inc	r0
   017F E6                  347 	mov	a,@r0
   0180 C0 E0               348 	push	acc
   0182 A8*00               349 	mov	r0,_bp
   0184 08                  350 	inc	r0
   0185 86 82               351 	mov	dpl,@r0
   0187 08                  352 	inc	r0
   0188 86 83               353 	mov	dph,@r0
   018A 08                  354 	inc	r0
   018B 86 F0               355 	mov	b,@r0
   018D 08                  356 	inc	r0
   018E E6                  357 	mov	a,@r0
   018F 12s00r00            358 	lcall	___fssub
   0192 AA 82               359 	mov	r2,dpl
   0194 AB 83               360 	mov	r3,dph
   0196 AC F0               361 	mov	r4,b
   0198 FD                  362 	mov	r5,a
   0199 E5 81               363 	mov	a,sp
   019B 24 FC               364 	add	a,#0xfc
   019D F5 81               365 	mov	sp,a
   019F E5*00               366 	mov	a,_bp
   01A1 24 15               367 	add	a,#0x15
   01A3 F8                  368 	mov	r0,a
   01A4 A6 02               369 	mov	@r0,ar2
   01A6 08                  370 	inc	r0
   01A7 A6 03               371 	mov	@r0,ar3
   01A9 08                  372 	inc	r0
   01AA A6 04               373 	mov	@r0,ar4
   01AC 08                  374 	inc	r0
   01AD A6 05               375 	mov	@r0,ar5
                            376 ;	tancotf.c:59: f=((xnum-xn*C1)+xden)-xn*C2;
   01AF E5*00               377 	mov	a,_bp
   01B1 24 0D               378 	add	a,#0x0d
   01B3 F8                  379 	mov	r0,a
   01B4 E6                  380 	mov	a,@r0
   01B5 C0 E0               381 	push	acc
   01B7 08                  382 	inc	r0
   01B8 E6                  383 	mov	a,@r0
   01B9 C0 E0               384 	push	acc
   01BB 08                  385 	inc	r0
   01BC E6                  386 	mov	a,@r0
   01BD C0 E0               387 	push	acc
   01BF 08                  388 	inc	r0
   01C0 E6                  389 	mov	a,@r0
   01C1 C0 E0               390 	push	acc
   01C3 90 00 00            391 	mov	dptr,#0x0000
   01C6 75 F0 C9            392 	mov	b,#0xC9
   01C9 74 3F               393 	mov	a,#0x3F
   01CB 12s00r00            394 	lcall	___fsmul
   01CE AE 82               395 	mov	r6,dpl
   01D0 AF 83               396 	mov	r7,dph
   01D2 AA F0               397 	mov	r2,b
   01D4 FB                  398 	mov	r3,a
   01D5 E5 81               399 	mov	a,sp
   01D7 24 FC               400 	add	a,#0xfc
   01D9 F5 81               401 	mov	sp,a
   01DB C0 06               402 	push	ar6
   01DD C0 07               403 	push	ar7
   01DF C0 02               404 	push	ar2
   01E1 C0 03               405 	push	ar3
   01E3 E5*00               406 	mov	a,_bp
   01E5 24 11               407 	add	a,#0x11
   01E7 F8                  408 	mov	r0,a
   01E8 86 82               409 	mov	dpl,@r0
   01EA 08                  410 	inc	r0
   01EB 86 83               411 	mov	dph,@r0
   01ED 08                  412 	inc	r0
   01EE 86 F0               413 	mov	b,@r0
   01F0 08                  414 	inc	r0
   01F1 E6                  415 	mov	a,@r0
   01F2 12s00r00            416 	lcall	___fssub
   01F5 AA 82               417 	mov	r2,dpl
   01F7 AB 83               418 	mov	r3,dph
   01F9 AC F0               419 	mov	r4,b
   01FB FD                  420 	mov	r5,a
   01FC E5 81               421 	mov	a,sp
   01FE 24 FC               422 	add	a,#0xfc
   0200 F5 81               423 	mov	sp,a
   0202 E5*00               424 	mov	a,_bp
   0204 24 15               425 	add	a,#0x15
   0206 F8                  426 	mov	r0,a
   0207 E6                  427 	mov	a,@r0
   0208 C0 E0               428 	push	acc
   020A 08                  429 	inc	r0
   020B E6                  430 	mov	a,@r0
   020C C0 E0               431 	push	acc
   020E 08                  432 	inc	r0
   020F E6                  433 	mov	a,@r0
   0210 C0 E0               434 	push	acc
   0212 08                  435 	inc	r0
   0213 E6                  436 	mov	a,@r0
   0214 C0 E0               437 	push	acc
   0216 8A 82               438 	mov	dpl,r2
   0218 8B 83               439 	mov	dph,r3
   021A 8C F0               440 	mov	b,r4
   021C ED                  441 	mov	a,r5
   021D 12s00r00            442 	lcall	___fsadd
   0220 C8                  443 	xch	a,r0
   0221 E5*00               444 	mov	a,_bp
   0223 24 1B               445 	add	a,#0x1b
   0225 C8                  446 	xch	a,r0
   0226 A6 82               447 	mov	@r0,dpl
   0228 08                  448 	inc	r0
   0229 A6 83               449 	mov	@r0,dph
   022B 08                  450 	inc	r0
   022C A6 F0               451 	mov	@r0,b
   022E 08                  452 	inc	r0
   022F F6                  453 	mov	@r0,a
   0230 E5 81               454 	mov	a,sp
   0232 24 FC               455 	add	a,#0xfc
   0234 F5 81               456 	mov	sp,a
   0236 E5*00               457 	mov	a,_bp
   0238 24 0D               458 	add	a,#0x0d
   023A F8                  459 	mov	r0,a
   023B E6                  460 	mov	a,@r0
   023C C0 E0               461 	push	acc
   023E 08                  462 	inc	r0
   023F E6                  463 	mov	a,@r0
   0240 C0 E0               464 	push	acc
   0242 08                  465 	inc	r0
   0243 E6                  466 	mov	a,@r0
   0244 C0 E0               467 	push	acc
   0246 08                  468 	inc	r0
   0247 E6                  469 	mov	a,@r0
   0248 C0 E0               470 	push	acc
   024A 90 AA 22            471 	mov	dptr,#0xAA22
   024D 75 F0 FD            472 	mov	b,#0xFD
   0250 74 39               473 	mov	a,#0x39
   0252 12s00r00            474 	lcall	___fsmul
   0255 AE 82               475 	mov	r6,dpl
   0257 AF 83               476 	mov	r7,dph
   0259 AA F0               477 	mov	r2,b
   025B FB                  478 	mov	r3,a
   025C E5 81               479 	mov	a,sp
   025E 24 FC               480 	add	a,#0xfc
   0260 F5 81               481 	mov	sp,a
   0262 C0 06               482 	push	ar6
   0264 C0 07               483 	push	ar7
   0266 C0 02               484 	push	ar2
   0268 C0 03               485 	push	ar3
   026A E5*00               486 	mov	a,_bp
   026C 24 1B               487 	add	a,#0x1b
   026E F8                  488 	mov	r0,a
   026F 86 82               489 	mov	dpl,@r0
   0271 08                  490 	inc	r0
   0272 86 83               491 	mov	dph,@r0
   0274 08                  492 	inc	r0
   0275 86 F0               493 	mov	b,@r0
   0277 08                  494 	inc	r0
   0278 E6                  495 	mov	a,@r0
   0279 12s00r00            496 	lcall	___fssub
   027C AA 82               497 	mov	r2,dpl
   027E AB 83               498 	mov	r3,dph
   0280 AC F0               499 	mov	r4,b
   0282 FD                  500 	mov	r5,a
   0283 E5 81               501 	mov	a,sp
   0285 24 FC               502 	add	a,#0xfc
   0287 F5 81               503 	mov	sp,a
   0289 E5*00               504 	mov	a,_bp
   028B 24 05               505 	add	a,#0x05
   028D F8                  506 	mov	r0,a
   028E A6 02               507 	mov	@r0,ar2
   0290 08                  508 	inc	r0
   0291 A6 03               509 	mov	@r0,ar3
   0293 08                  510 	inc	r0
   0294 A6 04               511 	mov	@r0,ar4
   0296 08                  512 	inc	r0
   0297 A6 05               513 	mov	@r0,ar5
                            514 ;	tancotf.c:61: if (fabsf(f) < EPS)
   0299 E5*00               515 	mov	a,_bp
   029B 24 05               516 	add	a,#0x05
   029D F8                  517 	mov	r0,a
   029E 86 82               518 	mov	dpl,@r0
   02A0 08                  519 	inc	r0
   02A1 86 83               520 	mov	dph,@r0
   02A3 08                  521 	inc	r0
   02A4 86 F0               522 	mov	b,@r0
   02A6 08                  523 	inc	r0
   02A7 E6                  524 	mov	a,@r0
   02A8 12s00r00            525 	lcall	_fabsf
   02AB AE 82               526 	mov	r6,dpl
   02AD AF 83               527 	mov	r7,dph
   02AF AA F0               528 	mov	r2,b
   02B1 FB                  529 	mov	r3,a
   02B2 E4                  530 	clr	a
   02B3 C0 E0               531 	push	acc
   02B5 C0 E0               532 	push	acc
   02B7 74 80               533 	mov	a,#0x80
   02B9 C0 E0               534 	push	acc
   02BB 74 39               535 	mov	a,#0x39
   02BD C0 E0               536 	push	acc
   02BF 8E 82               537 	mov	dpl,r6
   02C1 8F 83               538 	mov	dph,r7
   02C3 8A F0               539 	mov	b,r2
   02C5 EB                  540 	mov	a,r3
   02C6 12s00r00            541 	lcall	___fslt
   02C9 AA 82               542 	mov	r2,dpl
   02CB E5 81               543 	mov	a,sp
   02CD 24 FC               544 	add	a,#0xfc
   02CF F5 81               545 	mov	sp,a
   02D1 EA                  546 	mov	a,r2
   02D2 60 2B               547 	jz	00104$
                            548 ;	tancotf.c:63: xnum = f;
   02D4 E5*00               549 	mov	a,_bp
   02D6 24 05               550 	add	a,#0x05
   02D8 F8                  551 	mov	r0,a
   02D9 E5*00               552 	mov	a,_bp
   02DB 24 11               553 	add	a,#0x11
   02DD F9                  554 	mov	r1,a
   02DE E6                  555 	mov	a,@r0
   02DF F7                  556 	mov	@r1,a
   02E0 08                  557 	inc	r0
   02E1 09                  558 	inc	r1
   02E2 E6                  559 	mov	a,@r0
   02E3 F7                  560 	mov	@r1,a
   02E4 08                  561 	inc	r0
   02E5 09                  562 	inc	r1
   02E6 E6                  563 	mov	a,@r0
   02E7 F7                  564 	mov	@r1,a
   02E8 08                  565 	inc	r0
   02E9 09                  566 	inc	r1
   02EA E6                  567 	mov	a,@r0
   02EB F7                  568 	mov	@r1,a
                            569 ;	tancotf.c:64: xden = 1.0;
   02EC E5*00               570 	mov	a,_bp
   02EE 24 15               571 	add	a,#0x15
   02F0 F8                  572 	mov	r0,a
   02F1 76 00               573 	mov	@r0,#0x00
   02F3 08                  574 	inc	r0
   02F4 76 00               575 	mov	@r0,#0x00
   02F6 08                  576 	inc	r0
   02F7 76 80               577 	mov	@r0,#0x80
   02F9 08                  578 	inc	r0
   02FA 76 3F               579 	mov	@r0,#0x3F
   02FC 02s04r86            580 	ljmp	00105$
   02FF                     581 00104$:
                            582 ;	tancotf.c:68: g = f*f;
   02FF E5*00               583 	mov	a,_bp
   0301 24 05               584 	add	a,#0x05
   0303 F8                  585 	mov	r0,a
   0304 E6                  586 	mov	a,@r0
   0305 C0 E0               587 	push	acc
   0307 08                  588 	inc	r0
   0308 E6                  589 	mov	a,@r0
   0309 C0 E0               590 	push	acc
   030B 08                  591 	inc	r0
   030C E6                  592 	mov	a,@r0
   030D C0 E0               593 	push	acc
   030F 08                  594 	inc	r0
   0310 E6                  595 	mov	a,@r0
   0311 C0 E0               596 	push	acc
   0313 E5*00               597 	mov	a,_bp
   0315 24 05               598 	add	a,#0x05
   0317 F8                  599 	mov	r0,a
   0318 86 82               600 	mov	dpl,@r0
   031A 08                  601 	inc	r0
   031B 86 83               602 	mov	dph,@r0
   031D 08                  603 	inc	r0
   031E 86 F0               604 	mov	b,@r0
   0320 08                  605 	inc	r0
   0321 E6                  606 	mov	a,@r0
   0322 12s00r00            607 	lcall	___fsmul
   0325 AA 82               608 	mov	r2,dpl
   0327 AB 83               609 	mov	r3,dph
   0329 AC F0               610 	mov	r4,b
   032B FD                  611 	mov	r5,a
   032C E5 81               612 	mov	a,sp
   032E 24 FC               613 	add	a,#0xfc
   0330 F5 81               614 	mov	sp,a
   0332 E5*00               615 	mov	a,_bp
   0334 24 09               616 	add	a,#0x09
   0336 F8                  617 	mov	r0,a
   0337 A6 02               618 	mov	@r0,ar2
   0339 08                  619 	inc	r0
   033A A6 03               620 	mov	@r0,ar3
   033C 08                  621 	inc	r0
   033D A6 04               622 	mov	@r0,ar4
   033F 08                  623 	inc	r0
   0340 A6 05               624 	mov	@r0,ar5
                            625 ;	tancotf.c:69: xnum = P(f,g);
   0342 E5*00               626 	mov	a,_bp
   0344 24 09               627 	add	a,#0x09
   0346 F8                  628 	mov	r0,a
   0347 E6                  629 	mov	a,@r0
   0348 C0 E0               630 	push	acc
   034A 08                  631 	inc	r0
   034B E6                  632 	mov	a,@r0
   034C C0 E0               633 	push	acc
   034E 08                  634 	inc	r0
   034F E6                  635 	mov	a,@r0
   0350 C0 E0               636 	push	acc
   0352 08                  637 	inc	r0
   0353 E6                  638 	mov	a,@r0
   0354 C0 E0               639 	push	acc
   0356 90 33 B8            640 	mov	dptr,#0x33B8
   0359 75 F0 C4            641 	mov	b,#0xC4
   035C 74 BD               642 	mov	a,#0xBD
   035E 12s00r00            643 	lcall	___fsmul
   0361 AE 82               644 	mov	r6,dpl
   0363 AF 83               645 	mov	r7,dph
   0365 AA F0               646 	mov	r2,b
   0367 FB                  647 	mov	r3,a
   0368 E5 81               648 	mov	a,sp
   036A 24 FC               649 	add	a,#0xfc
   036C F5 81               650 	mov	sp,a
   036E E5*00               651 	mov	a,_bp
   0370 24 05               652 	add	a,#0x05
   0372 F8                  653 	mov	r0,a
   0373 E6                  654 	mov	a,@r0
   0374 C0 E0               655 	push	acc
   0376 08                  656 	inc	r0
   0377 E6                  657 	mov	a,@r0
   0378 C0 E0               658 	push	acc
   037A 08                  659 	inc	r0
   037B E6                  660 	mov	a,@r0
   037C C0 E0               661 	push	acc
   037E 08                  662 	inc	r0
   037F E6                  663 	mov	a,@r0
   0380 C0 E0               664 	push	acc
   0382 8E 82               665 	mov	dpl,r6
   0384 8F 83               666 	mov	dph,r7
   0386 8A F0               667 	mov	b,r2
   0388 EB                  668 	mov	a,r3
   0389 12s00r00            669 	lcall	___fsmul
   038C AA 82               670 	mov	r2,dpl
   038E AB 83               671 	mov	r3,dph
   0390 AC F0               672 	mov	r4,b
   0392 FD                  673 	mov	r5,a
   0393 E5 81               674 	mov	a,sp
   0395 24 FC               675 	add	a,#0xfc
   0397 F5 81               676 	mov	sp,a
   0399 E5*00               677 	mov	a,_bp
   039B 24 05               678 	add	a,#0x05
   039D F8                  679 	mov	r0,a
   039E E6                  680 	mov	a,@r0
   039F C0 E0               681 	push	acc
   03A1 08                  682 	inc	r0
   03A2 E6                  683 	mov	a,@r0
   03A3 C0 E0               684 	push	acc
   03A5 08                  685 	inc	r0
   03A6 E6                  686 	mov	a,@r0
   03A7 C0 E0               687 	push	acc
   03A9 08                  688 	inc	r0
   03AA E6                  689 	mov	a,@r0
   03AB C0 E0               690 	push	acc
   03AD 8A 82               691 	mov	dpl,r2
   03AF 8B 83               692 	mov	dph,r3
   03B1 8C F0               693 	mov	b,r4
   03B3 ED                  694 	mov	a,r5
   03B4 12s00r00            695 	lcall	___fsadd
   03B7 AA 82               696 	mov	r2,dpl
   03B9 AB 83               697 	mov	r3,dph
   03BB AC F0               698 	mov	r4,b
   03BD FD                  699 	mov	r5,a
   03BE E5 81               700 	mov	a,sp
   03C0 24 FC               701 	add	a,#0xfc
   03C2 F5 81               702 	mov	sp,a
   03C4 E5*00               703 	mov	a,_bp
   03C6 24 11               704 	add	a,#0x11
   03C8 F8                  705 	mov	r0,a
   03C9 A6 02               706 	mov	@r0,ar2
   03CB 08                  707 	inc	r0
   03CC A6 03               708 	mov	@r0,ar3
   03CE 08                  709 	inc	r0
   03CF A6 04               710 	mov	@r0,ar4
   03D1 08                  711 	inc	r0
   03D2 A6 05               712 	mov	@r0,ar5
                            713 ;	tancotf.c:70: xden = Q(g);
   03D4 E5*00               714 	mov	a,_bp
   03D6 24 09               715 	add	a,#0x09
   03D8 F8                  716 	mov	r0,a
   03D9 E6                  717 	mov	a,@r0
   03DA C0 E0               718 	push	acc
   03DC 08                  719 	inc	r0
   03DD E6                  720 	mov	a,@r0
   03DE C0 E0               721 	push	acc
   03E0 08                  722 	inc	r0
   03E1 E6                  723 	mov	a,@r0
   03E2 C0 E0               724 	push	acc
   03E4 08                  725 	inc	r0
   03E5 E6                  726 	mov	a,@r0
   03E6 C0 E0               727 	push	acc
   03E8 90 33 75            728 	mov	dptr,#0x3375
   03EB 75 F0 1F            729 	mov	b,#0x1F
   03EE 74 3C               730 	mov	a,#0x3C
   03F0 12s00r00            731 	lcall	___fsmul
   03F3 AA 82               732 	mov	r2,dpl
   03F5 AB 83               733 	mov	r3,dph
   03F7 AC F0               734 	mov	r4,b
   03F9 FD                  735 	mov	r5,a
   03FA E5 81               736 	mov	a,sp
   03FC 24 FC               737 	add	a,#0xfc
   03FE F5 81               738 	mov	sp,a
   0400 74 AF               739 	mov	a,#0xAF
   0402 C0 E0               740 	push	acc
   0404 74 B7               741 	mov	a,#0xB7
   0406 C0 E0               742 	push	acc
   0408 74 DB               743 	mov	a,#0xDB
   040A C0 E0               744 	push	acc
   040C 74 BE               745 	mov	a,#0xBE
   040E C0 E0               746 	push	acc
   0410 8A 82               747 	mov	dpl,r2
   0412 8B 83               748 	mov	dph,r3
   0414 8C F0               749 	mov	b,r4
   0416 ED                  750 	mov	a,r5
   0417 12s00r00            751 	lcall	___fsadd
   041A AA 82               752 	mov	r2,dpl
   041C AB 83               753 	mov	r3,dph
   041E AC F0               754 	mov	r4,b
   0420 FD                  755 	mov	r5,a
   0421 E5 81               756 	mov	a,sp
   0423 24 FC               757 	add	a,#0xfc
   0425 F5 81               758 	mov	sp,a
   0427 E5*00               759 	mov	a,_bp
   0429 24 09               760 	add	a,#0x09
   042B F8                  761 	mov	r0,a
   042C E6                  762 	mov	a,@r0
   042D C0 E0               763 	push	acc
   042F 08                  764 	inc	r0
   0430 E6                  765 	mov	a,@r0
   0431 C0 E0               766 	push	acc
   0433 08                  767 	inc	r0
   0434 E6                  768 	mov	a,@r0
   0435 C0 E0               769 	push	acc
   0437 08                  770 	inc	r0
   0438 E6                  771 	mov	a,@r0
   0439 C0 E0               772 	push	acc
   043B 8A 82               773 	mov	dpl,r2
   043D 8B 83               774 	mov	dph,r3
   043F 8C F0               775 	mov	b,r4
   0441 ED                  776 	mov	a,r5
   0442 12s00r00            777 	lcall	___fsmul
   0445 AA 82               778 	mov	r2,dpl
   0447 AB 83               779 	mov	r3,dph
   0449 AC F0               780 	mov	r4,b
   044B FD                  781 	mov	r5,a
   044C E5 81               782 	mov	a,sp
   044E 24 FC               783 	add	a,#0xfc
   0450 F5 81               784 	mov	sp,a
   0452 E4                  785 	clr	a
   0453 C0 E0               786 	push	acc
   0455 C0 E0               787 	push	acc
   0457 74 80               788 	mov	a,#0x80
   0459 C0 E0               789 	push	acc
   045B 74 3F               790 	mov	a,#0x3F
   045D C0 E0               791 	push	acc
   045F 8A 82               792 	mov	dpl,r2
   0461 8B 83               793 	mov	dph,r3
   0463 8C F0               794 	mov	b,r4
   0465 ED                  795 	mov	a,r5
   0466 12s00r00            796 	lcall	___fsadd
   0469 AA 82               797 	mov	r2,dpl
   046B AB 83               798 	mov	r3,dph
   046D AC F0               799 	mov	r4,b
   046F FD                  800 	mov	r5,a
   0470 E5 81               801 	mov	a,sp
   0472 24 FC               802 	add	a,#0xfc
   0474 F5 81               803 	mov	sp,a
   0476 E5*00               804 	mov	a,_bp
   0478 24 15               805 	add	a,#0x15
   047A F8                  806 	mov	r0,a
   047B A6 02               807 	mov	@r0,ar2
   047D 08                  808 	inc	r0
   047E A6 03               809 	mov	@r0,ar3
   0480 08                  810 	inc	r0
   0481 A6 04               811 	mov	@r0,ar4
   0483 08                  812 	inc	r0
   0484 A6 05               813 	mov	@r0,ar5
   0486                     814 00105$:
                            815 ;	tancotf.c:73: if(n&1)
   0486 E5*00               816 	mov	a,_bp
   0488 24 19               817 	add	a,#0x19
   048A F8                  818 	mov	r0,a
   048B E6                  819 	mov	a,@r0
   048C 20 E0 03            820 	jb	acc.0,00128$
   048F 02s05r2A            821 	ljmp	00113$
   0492                     822 00128$:
                            823 ;	tancotf.c:76: if(iscotan) return (-xnum/xden);
   0492 E5*00               824 	mov	a,_bp
   0494 24 FC               825 	add	a,#0xfc
   0496 F8                  826 	mov	r0,a
   0497 E6                  827 	mov	a,@r0
   0498 08                  828 	inc	r0
   0499 46                  829 	orl	a,@r0
   049A 60 47               830 	jz	00107$
   049C E5*00               831 	mov	a,_bp
   049E 24 11               832 	add	a,#0x11
   04A0 F8                  833 	mov	r0,a
   04A1 86 02               834 	mov	ar2,@r0
   04A3 08                  835 	inc	r0
   04A4 86 03               836 	mov	ar3,@r0
   04A6 08                  837 	inc	r0
   04A7 86 04               838 	mov	ar4,@r0
   04A9 08                  839 	inc	r0
   04AA E6                  840 	mov	a,@r0
   04AB B2 E7               841 	cpl	acc.7
   04AD FD                  842 	mov	r5,a
   04AE E5*00               843 	mov	a,_bp
   04B0 24 15               844 	add	a,#0x15
   04B2 F8                  845 	mov	r0,a
   04B3 E6                  846 	mov	a,@r0
   04B4 C0 E0               847 	push	acc
   04B6 08                  848 	inc	r0
   04B7 E6                  849 	mov	a,@r0
   04B8 C0 E0               850 	push	acc
   04BA 08                  851 	inc	r0
   04BB E6                  852 	mov	a,@r0
   04BC C0 E0               853 	push	acc
   04BE 08                  854 	inc	r0
   04BF E6                  855 	mov	a,@r0
   04C0 C0 E0               856 	push	acc
   04C2 8A 82               857 	mov	dpl,r2
   04C4 8B 83               858 	mov	dph,r3
   04C6 8C F0               859 	mov	b,r4
   04C8 ED                  860 	mov	a,r5
   04C9 12s00r00            861 	lcall	___fsdiv
   04CC AA 82               862 	mov	r2,dpl
   04CE AB 83               863 	mov	r3,dph
   04D0 AC F0               864 	mov	r4,b
   04D2 FD                  865 	mov	r5,a
   04D3 E5 81               866 	mov	a,sp
   04D5 24 FC               867 	add	a,#0xfc
   04D7 F5 81               868 	mov	sp,a
   04D9 8A 82               869 	mov	dpl,r2
   04DB 8B 83               870 	mov	dph,r3
   04DD 8C F0               871 	mov	b,r4
   04DF ED                  872 	mov	a,r5
   04E0 02s05rAA            873 	ljmp	00115$
   04E3                     874 00107$:
                            875 ;	tancotf.c:77: else return (-xden/xnum);
   04E3 E5*00               876 	mov	a,_bp
   04E5 24 15               877 	add	a,#0x15
   04E7 F8                  878 	mov	r0,a
   04E8 86 02               879 	mov	ar2,@r0
   04EA 08                  880 	inc	r0
   04EB 86 03               881 	mov	ar3,@r0
   04ED 08                  882 	inc	r0
   04EE 86 04               883 	mov	ar4,@r0
   04F0 08                  884 	inc	r0
   04F1 E6                  885 	mov	a,@r0
   04F2 B2 E7               886 	cpl	acc.7
   04F4 FD                  887 	mov	r5,a
   04F5 E5*00               888 	mov	a,_bp
   04F7 24 11               889 	add	a,#0x11
   04F9 F8                  890 	mov	r0,a
   04FA E6                  891 	mov	a,@r0
   04FB C0 E0               892 	push	acc
   04FD 08                  893 	inc	r0
   04FE E6                  894 	mov	a,@r0
   04FF C0 E0               895 	push	acc
   0501 08                  896 	inc	r0
   0502 E6                  897 	mov	a,@r0
   0503 C0 E0               898 	push	acc
   0505 08                  899 	inc	r0
   0506 E6                  900 	mov	a,@r0
   0507 C0 E0               901 	push	acc
   0509 8A 82               902 	mov	dpl,r2
   050B 8B 83               903 	mov	dph,r3
   050D 8C F0               904 	mov	b,r4
   050F ED                  905 	mov	a,r5
   0510 12s00r00            906 	lcall	___fsdiv
   0513 AA 82               907 	mov	r2,dpl
   0515 AB 83               908 	mov	r3,dph
   0517 AC F0               909 	mov	r4,b
   0519 FD                  910 	mov	r5,a
   051A E5 81               911 	mov	a,sp
   051C 24 FC               912 	add	a,#0xfc
   051E F5 81               913 	mov	sp,a
   0520 8A 82               914 	mov	dpl,r2
   0522 8B 83               915 	mov	dph,r3
   0524 8C F0               916 	mov	b,r4
   0526 ED                  917 	mov	a,r5
   0527 02s05rAA            918 	ljmp	00115$
   052A                     919 00113$:
                            920 ;	tancotf.c:81: if(iscotan) return (xden/xnum);
   052A E5*00               921 	mov	a,_bp
   052C 24 FC               922 	add	a,#0xfc
   052E F8                  923 	mov	r0,a
   052F E6                  924 	mov	a,@r0
   0530 08                  925 	inc	r0
   0531 46                  926 	orl	a,@r0
   0532 60 3C               927 	jz	00110$
   0534 E5*00               928 	mov	a,_bp
   0536 24 11               929 	add	a,#0x11
   0538 F8                  930 	mov	r0,a
   0539 E6                  931 	mov	a,@r0
   053A C0 E0               932 	push	acc
   053C 08                  933 	inc	r0
   053D E6                  934 	mov	a,@r0
   053E C0 E0               935 	push	acc
   0540 08                  936 	inc	r0
   0541 E6                  937 	mov	a,@r0
   0542 C0 E0               938 	push	acc
   0544 08                  939 	inc	r0
   0545 E6                  940 	mov	a,@r0
   0546 C0 E0               941 	push	acc
   0548 E5*00               942 	mov	a,_bp
   054A 24 15               943 	add	a,#0x15
   054C F8                  944 	mov	r0,a
   054D 86 82               945 	mov	dpl,@r0
   054F 08                  946 	inc	r0
   0550 86 83               947 	mov	dph,@r0
   0552 08                  948 	inc	r0
   0553 86 F0               949 	mov	b,@r0
   0555 08                  950 	inc	r0
   0556 E6                  951 	mov	a,@r0
   0557 12s00r00            952 	lcall	___fsdiv
   055A AA 82               953 	mov	r2,dpl
   055C AB 83               954 	mov	r3,dph
   055E AC F0               955 	mov	r4,b
   0560 FD                  956 	mov	r5,a
   0561 E5 81               957 	mov	a,sp
   0563 24 FC               958 	add	a,#0xfc
   0565 F5 81               959 	mov	sp,a
   0567 8A 82               960 	mov	dpl,r2
   0569 8B 83               961 	mov	dph,r3
   056B 8C F0               962 	mov	b,r4
   056D ED                  963 	mov	a,r5
   056E 80 3A               964 	sjmp	00115$
   0570                     965 00110$:
                            966 ;	tancotf.c:82: else return (xnum/xden);
   0570 E5*00               967 	mov	a,_bp
   0572 24 15               968 	add	a,#0x15
   0574 F8                  969 	mov	r0,a
   0575 E6                  970 	mov	a,@r0
   0576 C0 E0               971 	push	acc
   0578 08                  972 	inc	r0
   0579 E6                  973 	mov	a,@r0
   057A C0 E0               974 	push	acc
   057C 08                  975 	inc	r0
   057D E6                  976 	mov	a,@r0
   057E C0 E0               977 	push	acc
   0580 08                  978 	inc	r0
   0581 E6                  979 	mov	a,@r0
   0582 C0 E0               980 	push	acc
   0584 E5*00               981 	mov	a,_bp
   0586 24 11               982 	add	a,#0x11
   0588 F8                  983 	mov	r0,a
   0589 86 82               984 	mov	dpl,@r0
   058B 08                  985 	inc	r0
   058C 86 83               986 	mov	dph,@r0
   058E 08                  987 	inc	r0
   058F 86 F0               988 	mov	b,@r0
   0591 08                  989 	inc	r0
   0592 E6                  990 	mov	a,@r0
   0593 12s00r00            991 	lcall	___fsdiv
   0596 AA 82               992 	mov	r2,dpl
   0598 AB 83               993 	mov	r3,dph
   059A AC F0               994 	mov	r4,b
   059C FD                  995 	mov	r5,a
   059D E5 81               996 	mov	a,sp
   059F 24 FC               997 	add	a,#0xfc
   05A1 F5 81               998 	mov	sp,a
   05A3 8A 82               999 	mov	dpl,r2
   05A5 8B 83              1000 	mov	dph,r3
   05A7 8C F0              1001 	mov	b,r4
   05A9 ED                 1002 	mov	a,r5
   05AA                    1003 00115$:
   05AA 85*00 81           1004 	mov	sp,_bp
   05AD D0*00              1005 	pop	_bp
   05AF 22                 1006 	ret
                           1007 	.area CSEG    (CODE)
                           1008 	.area CONST   (CODE)
                           1009 	.area XINIT   (CODE)
                           1010 	.area CABS    (ABS,CODE)

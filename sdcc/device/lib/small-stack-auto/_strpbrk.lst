                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.4 #5595 (Oct 23 2013) (Mac OS X ppc)
                              4 ; This file was generated Wed Oct 23 12:26:00 2013
                              5 ;--------------------------------------------------------
                              6 	.module _strpbrk
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strpbrk
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in internal ram 
                             34 ;--------------------------------------------------------
                             35 	.area OSEG    (OVR,DATA)
                             36 ;--------------------------------------------------------
                             37 ; indirectly addressable internal ram data
                             38 ;--------------------------------------------------------
                             39 	.area ISEG    (DATA)
                             40 ;--------------------------------------------------------
                             41 ; absolute internal ram data
                             42 ;--------------------------------------------------------
                             43 	.area IABS    (ABS,DATA)
                             44 	.area IABS    (ABS,DATA)
                             45 ;--------------------------------------------------------
                             46 ; bit data
                             47 ;--------------------------------------------------------
                             48 	.area BSEG    (BIT)
                             49 ;--------------------------------------------------------
                             50 ; paged external ram data
                             51 ;--------------------------------------------------------
                             52 	.area PSEG    (PAG,XDATA)
                             53 ;--------------------------------------------------------
                             54 ; external ram data
                             55 ;--------------------------------------------------------
                             56 	.area XSEG    (XDATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute external ram data
                             59 ;--------------------------------------------------------
                             60 	.area XABS    (ABS,XDATA)
                             61 ;--------------------------------------------------------
                             62 ; external initialized ram data
                             63 ;--------------------------------------------------------
                             64 	.area XISEG   (XDATA)
                             65 	.area HOME    (CODE)
                             66 	.area GSINIT0 (CODE)
                             67 	.area GSINIT1 (CODE)
                             68 	.area GSINIT2 (CODE)
                             69 	.area GSINIT3 (CODE)
                             70 	.area GSINIT4 (CODE)
                             71 	.area GSINIT5 (CODE)
                             72 	.area GSINIT  (CODE)
                             73 	.area GSFINAL (CODE)
                             74 	.area CSEG    (CODE)
                             75 ;--------------------------------------------------------
                             76 ; global & static initialisations
                             77 ;--------------------------------------------------------
                             78 	.area HOME    (CODE)
                             79 	.area GSINIT  (CODE)
                             80 	.area GSFINAL (CODE)
                             81 	.area GSINIT  (CODE)
                             82 ;--------------------------------------------------------
                             83 ; Home
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area HOME    (CODE)
                             87 ;--------------------------------------------------------
                             88 ; code
                             89 ;--------------------------------------------------------
                             90 	.area CSEG    (CODE)
                             91 ;------------------------------------------------------------
                             92 ;Allocation info for local variables in function 'strpbrk'
                             93 ;------------------------------------------------------------
                             94 ;control                   Allocated to stack - offset -5
                             95 ;string                    Allocated to registers r2 r3 r4 
                             96 ;ch                        Allocated to registers 
                             97 ;------------------------------------------------------------
                             98 ;	_strpbrk.c:26: char * strpbrk ( 
                             99 ;	-----------------------------------------
                            100 ;	 function strpbrk
                            101 ;	-----------------------------------------
   0000                     102 _strpbrk:
                    0002    103 	ar2 = 0x02
                    0003    104 	ar3 = 0x03
                    0004    105 	ar4 = 0x04
                    0005    106 	ar5 = 0x05
                    0006    107 	ar6 = 0x06
                    0007    108 	ar7 = 0x07
                    0000    109 	ar0 = 0x00
                    0001    110 	ar1 = 0x01
   0000 C0*00               111 	push	_bp
   0002 85 81*00            112 	mov	_bp,sp
   0005 AA 82               113 	mov	r2,dpl
   0007 AB 83               114 	mov	r3,dph
   0009 AC F0               115 	mov	r4,b
                            116 ;	_strpbrk.c:33: while ( ch = *string ) {
   000B                     117 00103$:
   000B 8A 82               118 	mov	dpl,r2
   000D 8B 83               119 	mov	dph,r3
   000F 8C F0               120 	mov	b,r4
   0011 12s00r00            121 	lcall	__gptrget
   0014 FD                  122 	mov	r5,a
   0015 60 33               123 	jz	00105$
                            124 ;	_strpbrk.c:34: if (strchr (control, ch ))
   0017 C0 02               125 	push	ar2
   0019 C0 03               126 	push	ar3
   001B C0 04               127 	push	ar4
   001D C0 05               128 	push	ar5
   001F E5*00               129 	mov	a,_bp
   0021 24 FB               130 	add	a,#0xfb
   0023 F8                  131 	mov	r0,a
   0024 86 82               132 	mov	dpl,@r0
   0026 08                  133 	inc	r0
   0027 86 83               134 	mov	dph,@r0
   0029 08                  135 	inc	r0
   002A 86 F0               136 	mov	b,@r0
   002C 12s00r00            137 	lcall	_strchr
   002F AD 82               138 	mov	r5,dpl
   0031 AE 83               139 	mov	r6,dph
   0033 AF F0               140 	mov	r7,b
   0035 15 81               141 	dec	sp
   0037 D0 04               142 	pop	ar4
   0039 D0 03               143 	pop	ar3
   003B D0 02               144 	pop	ar2
   003D ED                  145 	mov	a,r5
   003E 4E                  146 	orl	a,r6
   003F 4F                  147 	orl	a,r7
   0040 60 C9               148 	jz	00103$
                            149 ;	_strpbrk.c:35: return string ;
   0042 8A 82               150 	mov	dpl,r2
   0044 8B 83               151 	mov	dph,r3
   0046 8C F0               152 	mov	b,r4
   0048 80 06               153 	sjmp	00106$
   004A                     154 00105$:
                            155 ;	_strpbrk.c:38: return (NULL);
   004A 90 00 00            156 	mov	dptr,#0x0000
   004D 75 F0 00            157 	mov	b,#0x00
   0050                     158 00106$:
   0050 D0*00               159 	pop	_bp
   0052 22                  160 	ret
                            161 	.area CSEG    (CODE)
                            162 	.area CONST   (CODE)
                            163 	.area XINIT   (CODE)
                            164 	.area CABS    (ABS,CODE)
